{"version":3,"sources":["ip.ts"],"names":["priority","name","startsWith","isLoopback","addr","test","loopback","family","Error","address","interfaces","os","networkInterfaces","sortedInterfaces","Object","keys","sort","a","b","all","map","nic","addresses","filter","details","length","undefined","Boolean"],"mappings":";;;;;;;AAAA;;;;AAIA,SAASA,QAAT,CAAkBC,IAAlB,EAAgC;AAC9B,MAAIA,IAAI,CAACC,UAAL,CAAgB,IAAhB,KAAyBD,IAAI,CAACC,UAAL,CAAgB,KAAhB,CAA7B,EAAqD;AACnD,WAAO,CAAP;AACD;;AACD,MAAID,IAAI,CAACC,UAAL,CAAgB,MAAhB,CAAJ,EAA6B;AAC3B,WAAO,CAAP;AACD;;AAED,SAAO,CAAP;AACD;;AAED,SAASC,UAAT,CAAoBC,IAApB,EAAkC;AAChC,SACE,2DAA2DC,IAA3D,CAAgED,IAAhE,KACA,YAAYC,IAAZ,CAAiBD,IAAjB,CADA,IAEA,QAAQC,IAAR,CAAaD,IAAb,CAFA,IAGA,OAAOC,IAAP,CAAYD,IAAZ,CAJF;AAMD;;AAED,SAASE,QAAT,CAAkBC,MAAgB,GAAG,MAArC,EAA6C;AAC3C,MAAIA,MAAM,KAAK,MAAf,EAAuB;AACrB,WAAO,WAAP;AACD,GAFD,MAEO,IAAIA,MAAM,KAAK,MAAf,EAAuB;AAC5B,WAAO,SAAP;AACD,GAFM,MAEA;AACL,UAAM,IAAIC,KAAJ,CAAU,gCAAV,CAAN;AACD;AACF;;AAED,SAASC,OAAT,CAAiBF,MAAgB,GAAG,MAApC,EAA4C;AAC1C,QAAMG,UAAU,GAAGC,YAAGC,iBAAH,EAAnB;;AACA,QAAMC,gBAAgB,GAAGC,MAAM,CAACC,IAAP,CAAYL,UAAZ,EAAwBM,IAAxB,CAA6B,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACnE,WAAOlB,QAAQ,CAACiB,CAAD,CAAR,GAAcjB,QAAQ,CAACkB,CAAD,CAA7B;AACD,GAFwB,CAAzB;AAIA,QAAMC,GAAG,GAAGN,gBAAgB,CACzBO,GADS,CACL,UAASC,GAAT,EAAc;AACjB,UAAMC,SAAS,GAAGZ,UAAU,CAACW,GAAD,CAAV,CAAgBE,MAAhB,CAChBC,OAAO,IAAIA,OAAO,CAACjB,MAAR,KAAmBA,MAAnB,IAA6B,CAACJ,UAAU,CAACqB,OAAO,CAACf,OAAT,CADnC,CAAlB;AAGA,WAAOa,SAAS,CAACG,MAAV,GAAmBH,SAAS,CAAC,CAAD,CAAT,CAAab,OAAhC,GAA0CiB,SAAjD;AACD,GANS,EAOTH,MAPS,CAOFI,OAPE,CAAZ;AASA,SAAOR,GAAG,CAACM,MAAJ,GAAaN,GAAG,CAAC,CAAD,CAAhB,GAAsBb,QAAQ,CAACC,MAAD,CAArC;AACD;;eAEc;AACbE,EAAAA;AADa,C","sourcesContent":["import os from 'os';\n\ntype IpFamily = 'IPv4' | 'IPv6';\n\nfunction priority(name: string) {\n  if (name.startsWith('en') || name.startsWith('eth')) {\n    return 0;\n  }\n  if (name.startsWith('wlan')) {\n    return 1;\n  }\n\n  return 2;\n}\n\nfunction isLoopback(addr: string) {\n  return (\n    /^(::f{4}:)?127\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})/.test(addr) ||\n    /^fe80::1$/.test(addr) ||\n    /^::1$/.test(addr) ||\n    /^::$/.test(addr)\n  );\n}\n\nfunction loopback(family: IpFamily = 'IPv4') {\n  if (family === 'IPv4') {\n    return '127.0.0.1';\n  } else if (family === 'IPv6') {\n    return 'fe80::1';\n  } else {\n    throw new Error('IP family must be IPv4 or IPv6');\n  }\n}\n\nfunction address(family: IpFamily = 'IPv4') {\n  const interfaces = os.networkInterfaces();\n  const sortedInterfaces = Object.keys(interfaces).sort(function(a, b) {\n    return priority(a) - priority(b);\n  });\n\n  const all = sortedInterfaces\n    .map(function(nic) {\n      const addresses = interfaces[nic].filter(\n        details => details.family === family && !isLoopback(details.address)\n      );\n      return addresses.length ? addresses[0].address : undefined;\n    })\n    .filter(Boolean);\n\n  return all.length ? all[0] : loopback(family);\n}\n\nexport default {\n  address,\n};\n"],"file":"../ip.js","sourceRoot":"/@expo/xdl@55.0.14/src"}