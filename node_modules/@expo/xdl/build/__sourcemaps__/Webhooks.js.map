{"version":3,"sources":["Webhooks.ts"],"names":["setWebhookAsync","experienceName","url","secret","event","user","UserManager","getCurrentUserAsync","api","ApiV2Client","clientForUser","postAsync","getWebhooksAsync","deleteWebhooksAsync"],"mappings":";;;;;;;;;AAAA;;AACA;;;;AAUO,eAAeA,eAAf,CAA+BC,cAA/B,EAAuD;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,MAAP;AAAeC,EAAAA;AAAf,CAAvD,EAA4F;AACjG,QAAMC,IAAI,GAAG,MAAMC,cAAYC,mBAAZ,EAAnB;;AACA,QAAMC,GAAG,GAAGC,cAAYC,aAAZ,CAA0BL,IAA1B,CAAZ;;AACA,SAAO,MAAMG,GAAG,CAACG,SAAJ,CAAc,aAAd,EAA6B;AACxCV,IAAAA,cADwC;AAExCC,IAAAA,GAFwC;AAGxCC,IAAAA,MAHwC;AAIxCC,IAAAA;AAJwC,GAA7B,CAAb;AAMD;;AAEM,eAAeQ,gBAAf,CAAgCX,cAAhC,EAAwD;AAC7D,QAAMI,IAAI,GAAG,MAAMC,cAAYC,mBAAZ,EAAnB;;AACA,QAAMC,GAAG,GAAGC,cAAYC,aAAZ,CAA0BL,IAA1B,CAAZ;;AACA,SAAO,MAAMG,GAAG,CAACG,SAAJ,CAAc,aAAd,EAA6B;AAAEV,IAAAA;AAAF,GAA7B,CAAb;AACD;;AAEM,eAAeY,mBAAf,CAAmCZ,cAAnC,EAA2DG,KAA3D,EAAgF;AACrF,QAAMC,IAAI,GAAG,MAAMC,cAAYC,mBAAZ,EAAnB;;AACA,QAAMC,GAAG,GAAGC,cAAYC,aAAZ,CAA0BL,IAA1B,CAAZ;;AACA,SAAO,MAAMG,GAAG,CAACG,SAAJ,CAAc,gBAAd,EAAgC;AAAEV,IAAAA,cAAF;AAAkBG,IAAAA;AAAlB,GAAhC,CAAb;AACD","sourcesContent":["import UserManager from './User';\nimport ApiV2Client from './ApiV2';\n\nexport type WebhookEvent = 'build';\n\nexport type WebhookData = {\n  url: string;\n  secret: string;\n  event: WebhookEvent;\n};\n\nexport async function setWebhookAsync(experienceName: string, { url, secret, event }: WebhookData) {\n  const user = await UserManager.getCurrentUserAsync();\n  const api = ApiV2Client.clientForUser(user);\n  return await api.postAsync('webhook/set', {\n    experienceName,\n    url,\n    secret,\n    event,\n  });\n}\n\nexport async function getWebhooksAsync(experienceName: string) {\n  const user = await UserManager.getCurrentUserAsync();\n  const api = ApiV2Client.clientForUser(user);\n  return await api.postAsync('webhook/get', { experienceName });\n}\n\nexport async function deleteWebhooksAsync(experienceName: string, event: WebhookEvent) {\n  const user = await UserManager.getCurrentUserAsync();\n  const api = ApiV2Client.clientForUser(user);\n  return await api.postAsync('webhook/delete', { experienceName, event });\n}\n"],"file":"../Webhooks.js","sourceRoot":"/@expo/xdl@55.0.14/src"}