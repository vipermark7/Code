{"version":3,"sources":["Exp.js"],"names":["ENTRY_POINT_PLATFORM_TEMPLATE_STRING","async","determineEntryPointAsync","root","let","exp","pkg","await","ProjectUtils","readConfigJsonAsync","entryPoint","main","Transformer","Minipass","constructor","config","data","displayName","name","write","end","replaced","replace","toLowerCase","binaryExtensions","createFileTransform","transformFile","entry","includes","path","extname","extractTemplateApp","templateSpec","projectRoot","packageManager","Logger","notifications","info","code","NotificationCode","PROGRESS","tarStream","pacote","tarball","stream","cache","join","UserSettings","dotExpoHomeDirectory","fs","mkdirp","Promise","resolve","reject","extractStream","tar","x","cwd","strip","transform","onentry","type","basename","on","pipe","appFile","JsonFile","appJson","merge","readAsync","writeAsync","packageFile","packageJson","private","version","description","tags","repository","_resolved","_integrity","_from","initGitRepoAsync","installDependenciesAsync","process","platform","Binaries","isXcodeInstalled","global","warn","insideGit","spawnAsync","debug","e","stdio","saveRecentExpRootAsync","recentExpsJsonFile","recentExps","filter","unshift","slice","getHomeDir","env","makePathReadable","pth","homedir","substr","length","expInfoSafeAsync","icon","iconUrl","pathOrUrl","resolvedPath","existsSync","readableRoot","getThirdPartyInfoAsync","publicUrl","user","UserManager","ensureLoggedInAsync","Error","username","ThirdParty","getManifest","slug","sdkVersion","iosBundleIdentifier","ios","bundleIdentifier","androidPackage","android","package","args","remoteUsername","remotePackageName","remoteFullPackageName","getPublishInfoAsync","configName","ConfigUtils","configFilenameAsync","recentValidExpsAsync","results","all","map","filteredResults","result","sendAsync","recipient","url_","allowUnauthed","boolean","Api","callMethodAsync","getProjectRandomnessAsync","ps","ProjectSettings","randomness","urlRandomness","resetProjectRandomnessAsync","UrlUtils","someRandomness","setAsync","clearXDLCacheAsync","removeSync"],"mappings":"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","file":"../Exp.js","sourcesContent":["/**\n * @flow\n */\n\nimport * as ConfigUtils from '@expo/config';\nimport fs from 'fs-extra';\nimport merge from 'lodash/merge';\nimport path from 'path';\nimport spawnAsync from '@expo/spawn-async';\nimport JsonFile from '@expo/json-file';\nimport Minipass from 'minipass';\nimport pacote from 'pacote';\nimport tar from 'tar';\n\nimport Api from './Api';\nimport * as Binaries from './Binaries';\nimport Logger from './Logger';\nimport NotificationCode from './NotificationCode';\nimport * as ProjectUtils from './project/ProjectUtils';\nimport * as ThirdParty from './ThirdParty';\nimport UserManager from './User';\nimport * as UrlUtils from './UrlUtils';\nimport UserSettings from './UserSettings';\nimport * as ProjectSettings from './ProjectSettings';\n\n// FIXME(perry) eliminate usage of this template\nexport const ENTRY_POINT_PLATFORM_TEMPLATE_STRING = 'PLATFORM_GOES_HERE';\n\nexport async function determineEntryPointAsync(root: string) {\n  let { exp, pkg } = await ProjectUtils.readConfigJsonAsync(root);\n\n  // entryPoint is relative to the packager root and main is relative\n  // to the project root. So if your rn-cli.config.js points to a different\n  // root than the project root, these can be different. Most of the time\n  // you should use main.\n  let entryPoint = pkg.main || 'index.js';\n  if (exp && exp.entryPoint) {\n    entryPoint = exp.entryPoint;\n  }\n\n  return entryPoint;\n}\n\nclass Transformer extends Minipass {\n  constructor(config) {\n    super();\n    this.data = '';\n    this.config = config;\n    this.displayName = config.displayName || config.name;\n  }\n  write(data) {\n    this.data += data;\n    return true;\n  }\n  end() {\n    let replaced = this.data\n      .replace(/Hello App Display Name/g, this.config.displayName || this.config.name)\n      .replace(/HelloWorld/g, this.config.name)\n      .replace(/helloworld/g, this.config.name.toLowerCase());\n    super.write(replaced);\n    return super.end();\n  }\n}\n\n// Binary files, don't process these (avoid decoding as utf8)\nconst binaryExtensions = ['.png', '.jar'];\n\nfunction createFileTransform(config) {\n  return function transformFile(entry) {\n    if (!binaryExtensions.includes(path.extname(entry.path)) && config.name) {\n      return new Transformer(config);\n    }\n  };\n}\n\nexport async function extractTemplateApp(\n  templateSpec: string | object,\n  projectRoot: string,\n  packageManager: 'yarn' | 'npm' = 'npm',\n  config = {}\n) {\n  Logger.notifications.info({ code: NotificationCode.PROGRESS }, 'Extracting project files...');\n  let tarStream = await pacote.tarball.stream(templateSpec, {\n    cache: path.join(UserSettings.dotExpoHomeDirectory(), 'template-cache'),\n  });\n  await fs.mkdirp(projectRoot);\n  await new Promise((resolve, reject) => {\n    const extractStream = tar.x({\n      cwd: projectRoot,\n      strip: 1,\n      transform: createFileTransform(config),\n      onentry(entry) {\n        if (config.name) {\n          // Rewrite paths for bare workflow\n          entry.path = entry.path\n            .replace(/HelloWorld/g, config.name)\n            .replace(/helloworld/g, config.name.toLowerCase());\n        }\n        if (entry.type.toLowerCase() === 'file' && path.basename(entry.path) === 'gitignore') {\n          // Rename `gitignore` because npm ignores files named `.gitignore` when publishing.\n          // See: https://github.com/npm/npm/issues/1862\n          entry.path = entry.path.replace(/gitignore$/, '.gitignore');\n        }\n      },\n    });\n    tarStream.on('error', reject);\n    extractStream.on('error', reject);\n    extractStream.on('close', resolve);\n    tarStream.pipe(extractStream);\n  });\n\n  // Update files\n  Logger.notifications.info({ code: NotificationCode.PROGRESS }, 'Customizing project...');\n\n  let appFile = new JsonFile(path.join(projectRoot, 'app.json'));\n  let appJson = merge(await appFile.readAsync(), config);\n  await appFile.writeAsync(appJson);\n\n  let packageFile = new JsonFile(path.join(projectRoot, 'package.json'));\n  let packageJson = await packageFile.readAsync();\n  // Adding `private` stops npm from complaining about missing `name` and `version` fields.\n  // We don't add a `name` field because it also exists in `app.json`.\n  packageJson = { ...packageJson, private: true };\n  // These are metadata fields related to the template package, let's remove them from the package.json.\n  delete packageJson.name;\n  delete packageJson.version;\n  delete packageJson.description;\n  delete packageJson.tags;\n  delete packageJson.repository;\n  // pacote adds these, but we don't want them in the package.json of the project.\n  delete packageJson._resolved;\n  delete packageJson._integrity;\n  delete packageJson._from;\n  await packageFile.writeAsync(packageJson);\n\n  await initGitRepoAsync(projectRoot);\n  await installDependenciesAsync(projectRoot, packageManager);\n\n  return projectRoot;\n}\n\nasync function initGitRepoAsync(root: string) {\n  if (process.platform === 'darwin' && !Binaries.isXcodeInstalled()) {\n    Logger.global.warn(`Unable to initialize git repo. \\`git\\` not installed.`);\n    return;\n  }\n\n  // let's see if we're in a git tree\n  let insideGit = true;\n  try {\n    await spawnAsync('git', ['rev-parse', '--is-inside-work-tree'], {\n      cwd: root,\n    });\n    Logger.global.debug('New project is already inside of a git repo, skipping git init.');\n  } catch (e) {\n    insideGit = false;\n  }\n\n  if (!insideGit) {\n    try {\n      await spawnAsync('git', ['init'], { cwd: root });\n      Logger.global.info('Initialized a git repository.');\n    } catch (e) {\n      // no-op -- this is just a convenience and we don't care if it fails\n    }\n  }\n}\n\nasync function installDependenciesAsync(projectRoot, packageManager) {\n  Logger.global.info('Installing dependencies...');\n\n  if (packageManager === 'yarn') {\n    await spawnAsync('yarnpkg', ['install'], {\n      cwd: projectRoot,\n      stdio: 'inherit',\n    });\n  } else {\n    await spawnAsync('npm', ['install'], {\n      cwd: projectRoot,\n      stdio: 'inherit',\n    });\n  }\n}\n\nexport async function saveRecentExpRootAsync(root: string) {\n  root = path.resolve(root);\n\n  // Write the recent Exps JSON file\n  let recentExpsJsonFile = UserSettings.recentExpsJsonFile();\n  let recentExps = await recentExpsJsonFile.readAsync();\n  // Filter out copies of this so we don't get dupes in this list\n  recentExps = recentExps.filter(function(x) {\n    return x !== root;\n  });\n  recentExps.unshift(root);\n  return await recentExpsJsonFile.writeAsync(recentExps.slice(0, 100));\n}\n\nfunction getHomeDir(): string {\n  return process.env[process.platform === 'win32' ? 'USERPROFILE' : 'HOME'] || '';\n}\n\nfunction makePathReadable(pth) {\n  let homedir = getHomeDir();\n  if (pth.substr(0, homedir.length) === homedir) {\n    return `~${pth.substr(homedir.length)}`;\n  } else {\n    return pth;\n  }\n}\n\nexport async function expInfoSafeAsync(root: string) {\n  try {\n    let { exp: { name, description, icon, iconUrl } } = await ProjectUtils.readConfigJsonAsync(\n      root\n    );\n    let pathOrUrl =\n      icon || iconUrl || 'https://d3lwq5rlu14cro.cloudfront.net/ExponentEmptyManifest_192.png';\n    let resolvedPath = path.resolve(root, pathOrUrl);\n    if (fs.existsSync(resolvedPath)) {\n      icon = `file://${resolvedPath}`;\n    } else {\n      icon = pathOrUrl; // Assume already a URL\n    }\n\n    return {\n      readableRoot: makePathReadable(root),\n      root,\n      name,\n      description,\n      icon,\n    };\n  } catch (e) {\n    return null;\n  }\n}\n\ntype PublishInfo = {\n  args: {\n    username: string,\n    remoteUsername: string,\n    remotePackageName: string,\n    remoteFullPackageName: string,\n    iosBundleIdentifier: ?string,\n    androidPackage: ?string,\n  },\n};\n\nexport async function getThirdPartyInfoAsync(publicUrl: string): Promise<PublishInfo> {\n  const user = await UserManager.ensureLoggedInAsync();\n\n  if (!user) {\n    throw new Error('Attempted to login in offline mode. This is a bug.');\n  }\n\n  const { username } = user;\n\n  const exp = await ThirdParty.getManifest(publicUrl);\n  const { slug, sdkVersion, version } = exp;\n  if (!sdkVersion) {\n    throw new Error(`sdkVersion is missing from ${publicUrl}`);\n  }\n\n  if (!slug) {\n    // slug is made programmatically for app.json\n    throw new Error(`slug field is missing from exp.json.`);\n  }\n\n  if (!version) {\n    throw new Error(`Can't get version of package.`);\n  }\n\n  const iosBundleIdentifier = exp.ios ? exp.ios.bundleIdentifier : null;\n  const androidPackage = exp.android ? exp.android.package : null;\n  return {\n    args: {\n      username,\n      remoteUsername: username,\n      remotePackageName: slug,\n      remoteFullPackageName: `@${username}/${slug}`,\n      sdkVersion,\n      iosBundleIdentifier,\n      androidPackage,\n    },\n  };\n}\n\n// TODO: remove / change, no longer publishInfo, this is just used for signing\nexport async function getPublishInfoAsync(root: string): Promise<PublishInfo> {\n  const user = await UserManager.ensureLoggedInAsync();\n\n  if (!user) {\n    throw new Error('Attempted to login in offline mode. This is a bug.');\n  }\n\n  const { username } = user;\n\n  const { exp } = await ProjectUtils.readConfigJsonAsync(root);\n\n  const name = exp.slug;\n  const { version, sdkVersion } = exp;\n\n  const configName = await ConfigUtils.configFilenameAsync(root);\n\n  if (!sdkVersion) {\n    throw new Error(`sdkVersion is missing from ${configName}`);\n  }\n\n  if (!name) {\n    // slug is made programmatically for app.json\n    throw new Error(`slug field is missing from exp.json.`);\n  }\n\n  if (!version) {\n    throw new Error(`Can't get version of package.`);\n  }\n\n  const remotePackageName = name;\n  const remoteUsername = username;\n  const remoteFullPackageName = `@${remoteUsername}/${remotePackageName}`;\n  const iosBundleIdentifier = exp.ios ? exp.ios.bundleIdentifier : null;\n  const androidPackage = exp.android ? exp.android.package : null;\n\n  return {\n    args: {\n      username,\n      remoteUsername,\n      remotePackageName,\n      remoteFullPackageName,\n      sdkVersion,\n      iosBundleIdentifier,\n      androidPackage,\n    },\n  };\n}\n\nexport async function recentValidExpsAsync() {\n  let recentExpsJsonFile = UserSettings.recentExpsJsonFile();\n  let recentExps = await recentExpsJsonFile.readAsync();\n\n  let results = await Promise.all(recentExps.map(expInfoSafeAsync));\n  let filteredResults = results.filter(result => result);\n  return filteredResults;\n}\n\nexport async function sendAsync(recipient: string, url_: string, allowUnauthed: boolean = true) {\n  let result = await Api.callMethodAsync('send', [recipient, url_, allowUnauthed]);\n  return result;\n}\n\n// TODO: figure out where these functions should live\nexport async function getProjectRandomnessAsync(projectRoot: string) {\n  let ps = await ProjectSettings.readAsync(projectRoot);\n  let randomness = ps.urlRandomness;\n  if (randomness) {\n    return randomness;\n  } else {\n    return resetProjectRandomnessAsync(projectRoot);\n  }\n}\n\nexport async function resetProjectRandomnessAsync(projectRoot: string) {\n  let randomness = UrlUtils.someRandomness();\n  ProjectSettings.setAsync(projectRoot, { urlRandomness: randomness });\n  return randomness;\n}\n\nexport async function clearXDLCacheAsync() {\n  let dotExpoHomeDirectory = UserSettings.dotExpoHomeDirectory();\n  fs.removeSync(path.join(dotExpoHomeDirectory, 'ios-simulator-app-cache'));\n  fs.removeSync(path.join(dotExpoHomeDirectory, 'android-apk-cache'));\n  fs.removeSync(path.join(dotExpoHomeDirectory, 'starter-app-cache'));\n  Logger.notifications.info(`Cleared cache`);\n}\n"],"sourceRoot":"/@expo/xdl@55.0.14/src"}