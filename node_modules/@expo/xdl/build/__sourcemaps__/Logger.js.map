{"version":3,"sources":["Logger.ts"],"names":["ConsoleRawStream","write","record","level","bunyan","INFO","console","log","WARN","info","ERROR","warn","error","logger","createLogger","name","serializers","stdSerializers","streams","process","env","DEBUG","NODE_ENV","type","stream","closeOnExit","child","options","notifications","global"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAMA,gBAAN,CAAuB;AACrBC,EAAAA,KAAK,CAACC,MAAD,EAAc;AACjB,QAAIA,MAAM,CAACC,KAAP,GAAeC,gBAAOC,IAA1B,EAAgC;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACD,KAFD,MAEO,IAAIA,MAAM,CAACC,KAAP,GAAeC,gBAAOI,IAA1B,EAAgC;AACrCF,MAAAA,OAAO,CAACG,IAAR,CAAaP,MAAb;AACD,KAFM,MAEA,IAAIA,MAAM,CAACC,KAAP,GAAeC,gBAAOM,KAA1B,EAAiC;AACtCJ,MAAAA,OAAO,CAACK,IAAR,CAAaT,MAAb;AACD,KAFM,MAEA;AACLI,MAAAA,OAAO,CAACM,KAAR,CAAcV,MAAd;AACD;AACF;;AAXoB;;AAcvB,MAAMW,MAAM,GAAGT,gBAAOU,YAAP,CAAoB;AACjCC,EAAAA,IAAI,EAAE,MAD2B;AAEjCC,EAAAA,WAAW,EAAEZ,gBAAOa,cAFa;AAGjCC,EAAAA,OAAO,EACLC,OAAO,CAACC,GAAR,CAAYC,KAAZ,IAAqBF,OAAO,CAACC,GAAR,CAAYE,QAAZ,KAAyB,YAA9C,GACI,CACE;AACEC,IAAAA,IAAI,EAAE,KADR;AAEEC,IAAAA,MAAM,EAAE,IAAIxB,gBAAJ,EAFV;AAGEyB,IAAAA,WAAW,EAAE,KAHf;AAIEtB,IAAAA,KAAK,EAAE;AAJT,GADF,CADJ,GASI;AAb2B,CAApB,CAAf;;eAmBe;AACbuB,EAAAA,KAAK,EAAGC,OAAD,IAAqBd,MAAM,CAACa,KAAP,CAAaC,OAAb,CADf;AAEbC,EAAAA,aAAa,EAAEf,MAAM,CAACa,KAAP,CAAa;AAAEH,IAAAA,IAAI,EAAE;AAAR,GAAb,CAFF;AAGbM,EAAAA,MAAM,EAAEhB,MAAM,CAACa,KAAP,CAAa;AAAEH,IAAAA,IAAI,EAAE;AAAR,GAAb,CAHK;AAIbF,EAAAA,KAAK,EAAEjB,gBAAOiB,KAJD;AAKbhB,EAAAA,IAAI,EAAED,gBAAOC,IALA;AAMbG,EAAAA,IAAI,EAAEJ,gBAAOI,IANA;AAObE,EAAAA,KAAK,EAAEN,gBAAOM;AAPD,C","sourcesContent":["import bunyan from '@expo/bunyan';\n\nclass ConsoleRawStream {\n  write(record: any) {\n    if (record.level < bunyan.INFO) {\n      console.log(record);\n    } else if (record.level < bunyan.WARN) {\n      console.info(record);\n    } else if (record.level < bunyan.ERROR) {\n      console.warn(record);\n    } else {\n      console.error(record);\n    }\n  }\n}\n\nconst logger = bunyan.createLogger({\n  name: 'expo',\n  serializers: bunyan.stdSerializers,\n  streams:\n    process.env.DEBUG && process.env.NODE_ENV !== 'production'\n      ? [\n          {\n            type: 'raw',\n            stream: new ConsoleRawStream(),\n            closeOnExit: false,\n            level: 'debug',\n          },\n        ]\n      : [],\n});\n\nexport type LogStream = bunyan.Stream;\nexport type Log = bunyan;\n\nexport default {\n  child: (options: object) => logger.child(options),\n  notifications: logger.child({ type: 'notifications' }),\n  global: logger.child({ type: 'global' }),\n  DEBUG: bunyan.DEBUG,\n  INFO: bunyan.INFO,\n  WARN: bunyan.WARN,\n  ERROR: bunyan.ERROR,\n};\n"],"file":"../Logger.js","sourceRoot":"/@expo/xdl@55.0.14/src"}