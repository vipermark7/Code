{"version":3,"sources":["modules/Modules.ts"],"names":["HIGHEST_KNOWN_VERSION","getAllNativeModules","expoSdkUniversalModulesConfigs","vendoredNativeModules","filter","moduleConfig","isNativeModule","getAllForPlatform","platform","sdkVersion","doesVersionSatisfy","sdkVersions","map","config","getAllNativeForExpoClientOnPlatform","includeInExpoClient","getVersionableModulesForPlatform","versionable","getDetachableModules","detachable","getPublishableModules","libName","version","versionRequirement","semver","satisfies"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;;;AAUA,MAAMA,qBAAqB,GAAG,WAA9B;;AAEO,SAASC,mBAAT,GAA+B;AACpC,SAAO,CAAC,GAAGC,sCAAJ,EAAoC,GAAGC,6BAAvC,EAA8DC,MAA9D,CACLC,YAAY,IAAIA,YAAY,CAACC,cADxB,CAAP;AAGD;;AAEM,SAASC,iBAAT,CACLC,QADK,EAELC,UAFK,EAG2B;AAChC,SAAOP,uCACJE,MADI,CACIC,YAAD,IACNK,kBAAkB,CAACD,UAAD,EAAaJ,YAAY,CAACM,WAA1B,CAFf,EAIJC,GAJI,CAICP,YAAD,KAAiC,EACpC,GAAGA,YADiC;AAEpC,OAAGA,YAAY,CAACQ,MAAb,CAAoBL,QAApB;AAFiC,GAAjC,CAJA,CAAP;AAQD;;AAEM,SAASM,mCAAT,CACLN,QADK,EAELC,UAFK,EAG2B;AAChC,SAAOF,iBAAiB,CAACC,QAAD,EAAWC,UAAX,CAAjB,CAAwCL,MAAxC,CACLC,YAAY,IAAIA,YAAY,CAACU,mBAAb,IAAoCV,YAAY,CAACC,cAD5D,CAAP;AAGD;;AAEM,SAASU,gCAAT,CACLR,QADK,EAELC,UAFK,EAG2B;AAChC,SAAOK,mCAAmC,CAACN,QAAD,EAAWC,UAAX,CAAnC,CAA0DL,MAA1D,CAAiEC,YAAY,IAAI;AACtF,WAAOA,YAAY,CAACY,WAApB;AACD,GAFM,CAAP;AAGD;;AAEM,SAASC,oBAAT,CACLV,QADK,EAELC,UAFK,EAG2B;AAChC,SAAOF,iBAAiB,CAACC,QAAD,EAAWC,UAAX,CAAjB,CAAwCL,MAAxC,CACLC,YAAY,IAAIA,YAAY,CAACC,cAAb,IAA+BD,YAAY,CAACc,UADvD,CAAP;AAGD;;AAEM,SAASC,qBAAT,CAA+BX,UAA/B,EAAmE;AACxE,SAAOP,uCAA+BE,MAA/B,CACJC,YAAD,IACE,CAAC,CAACA,YAAY,CAACgB,OAAf,IAA0BX,kBAAkB,CAACD,UAAD,EAAaJ,YAAY,CAACM,WAA1B,CAFzC,CAAP;AAID;;AAEM,SAASD,kBAAT,CAA4BY,OAA5B,EAA6CC,kBAA7C,EAAkF;AACvF,MAAID,OAAO,KAAK,aAAhB,EAA+B;AAC7B,WAAOE,gBAAOC,SAAP,CAAiBzB,qBAAjB,EAAwCuB,kBAAxC,CAAP;AACD;;AAED,SAAOC,gBAAOC,SAAP,CAAiBH,OAAjB,EAA0BC,kBAA1B,CAAP;AACD","sourcesContent":["import semver from 'semver';\n\nimport {\n  expoSdkUniversalModulesConfigs,\n  vendoredNativeModules,\n  ModuleConfig,\n  NativeConfig,\n} from './config';\n\ntype PlatformSpecificModuleConfig = ModuleConfig & NativeConfig;\ntype Platform = 'ios' | 'android';\n\nconst HIGHEST_KNOWN_VERSION = '10000.0.0';\n\nexport function getAllNativeModules() {\n  return [...expoSdkUniversalModulesConfigs, ...vendoredNativeModules].filter(\n    moduleConfig => moduleConfig.isNativeModule\n  );\n}\n\nexport function getAllForPlatform(\n  platform: Platform,\n  sdkVersion: string\n): PlatformSpecificModuleConfig[] {\n  return expoSdkUniversalModulesConfigs\n    .filter((moduleConfig: ModuleConfig) =>\n      doesVersionSatisfy(sdkVersion, moduleConfig.sdkVersions)\n    )\n    .map((moduleConfig: ModuleConfig) => ({\n      ...moduleConfig,\n      ...moduleConfig.config[platform],\n    }));\n}\n\nexport function getAllNativeForExpoClientOnPlatform(\n  platform: Platform,\n  sdkVersion: string\n): PlatformSpecificModuleConfig[] {\n  return getAllForPlatform(platform, sdkVersion).filter(\n    moduleConfig => moduleConfig.includeInExpoClient && moduleConfig.isNativeModule\n  );\n}\n\nexport function getVersionableModulesForPlatform(\n  platform: Platform,\n  sdkVersion: string\n): PlatformSpecificModuleConfig[] {\n  return getAllNativeForExpoClientOnPlatform(platform, sdkVersion).filter(moduleConfig => {\n    return moduleConfig.versionable;\n  });\n}\n\nexport function getDetachableModules(\n  platform: Platform,\n  sdkVersion: string\n): PlatformSpecificModuleConfig[] {\n  return getAllForPlatform(platform, sdkVersion).filter(\n    moduleConfig => moduleConfig.isNativeModule && moduleConfig.detachable\n  );\n}\n\nexport function getPublishableModules(sdkVersion: string): ModuleConfig[] {\n  return expoSdkUniversalModulesConfigs.filter(\n    (moduleConfig: ModuleConfig) =>\n      !!moduleConfig.libName && doesVersionSatisfy(sdkVersion, moduleConfig.sdkVersions)\n  );\n}\n\nexport function doesVersionSatisfy(version: string, versionRequirement: string): boolean {\n  if (version === 'UNVERSIONED') {\n    return semver.satisfies(HIGHEST_KNOWN_VERSION, versionRequirement);\n  }\n\n  return semver.satisfies(version, versionRequirement);\n}\n"],"file":"../../modules/Modules.js","sourceRoot":"/@expo/xdl@55.0.14/src"}