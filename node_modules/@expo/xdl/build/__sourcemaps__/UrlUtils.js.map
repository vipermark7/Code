{"version":3,"sources":["UrlUtils.js"],"names":["async","constructBundleUrlAsync","projectRoot","opts","requestHostname","constructUrlAsync","constructManifestUrlAsync","constructHostUriAsync","let","urlString","await","urlObj","url","parse","protocol","slashes","format","constructLogUrlAsync","baseUrl","urlType","constructUrlWithExtensionAsync","entryPoint","ext","defaultOpts","dev","minify","bundleUrl","hostType","mainModulePath","guessMainModulePath","queryParams","constructBundleQueryParamsAsync","constructPublishUrlAsync","constructSourceMapUrlAsync","constructAssetsUrlAsync","constructDebuggerHostAsync","encodeURIComponent","hasOwnProperty","strict","exp","ProjectUtils","readConfigJsonAsync","supportsAssetPlugins","Versions","gteSdkVersion","usesAssetPluginsQueryParam","lteSdkVersion","pluginModule","ConfigUtils","resolveModule","constructWebAppUrlAsync","packagerInfo","ProjectSettings","readPackagerInfoAsync","webpackServerPort","host","ip","address","https","readAsync","isPackager","schema","joi","object","keys","any","valid","lanType","boolean","urlRandomness","string","optional","allow","error","validate","XDLError","toString","getPackagerOptsAsync","Object","assign","detach","scheme","hostname","port","proxyURL","process","env","EXPO_PACKAGER_PROXY_URL","EXPO_MANIFEST_PROXY_URL","parsedProxyURL","packagerPort","expoServerPort","Config","offline","EXPO_PACKAGER_HOSTNAME","trim","REACT_NATIVE_PACKAGER_HOSTNAME","os","ngrokUrl","packagerNgrokUrl","expoServerNgrokUrl","logWarning","clearNotification","pnu","url_","Error","replace","randomIdentifier","length","number","alphabet","result","i","j","Math","floor","random","c","substr","sevenDigitIdentifier","randomIdentifierForUser","username","someRandomness","join","domainify","s","toLowerCase","getPlatformSpecificBundleUrl","platform","includes","Exp","ENTRY_POINT_PLATFORM_TEMPLATE_STRING","isHttps","validator","isURL","protocols"],"mappings":"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","file":"../UrlUtils.js","sourcesContent":["/**\n * @flow\n */\n\nimport joi from 'joi';\nimport os from 'os';\nimport url from 'url';\nimport validator from 'validator';\nimport * as ConfigUtils from '@expo/config';\n\nimport ip from './ip';\nimport Config from './Config';\nimport * as Exp from './Exp';\nimport * as ProjectSettings from './ProjectSettings';\nimport * as ProjectUtils from './project/ProjectUtils';\nimport * as Versions from './Versions';\nimport XDLError from './XDLError';\n\nexport async function constructBundleUrlAsync(\n  projectRoot: string,\n  opts: any,\n  requestHostname?: string\n) {\n  return constructUrlAsync(projectRoot, opts, true, requestHostname);\n}\n\nexport async function constructManifestUrlAsync(\n  projectRoot: string,\n  opts: any,\n  requestHostname?: string\n) {\n  return constructUrlAsync(projectRoot, opts, false, requestHostname);\n}\n\n// gets the base manifest URL and removes the scheme\nexport async function constructHostUriAsync(projectRoot: string, requestHostname?: string) {\n  let urlString = await constructUrlAsync(projectRoot, null, false, requestHostname);\n  // we need to use node's legacy urlObject api since the newer one doesn't like empty protocols\n  let urlObj = url.parse(urlString);\n  urlObj.protocol = '';\n  urlObj.slashes = false;\n  return url.format(urlObj);\n}\n\nexport async function constructLogUrlAsync(projectRoot: string, requestHostname?: string) {\n  let baseUrl = await constructUrlAsync(projectRoot, { urlType: 'http' }, false, requestHostname);\n  return `${baseUrl}/logs`;\n}\n\nexport async function constructUrlWithExtensionAsync(\n  projectRoot: string,\n  entryPoint: string,\n  ext: string,\n  requestHostname?: string,\n  opts?: Object\n) {\n  const defaultOpts = {\n    dev: false,\n    minify: true,\n  };\n  opts = opts || defaultOpts;\n  let bundleUrl = await constructBundleUrlAsync(\n    projectRoot,\n    {\n      hostType: 'localhost',\n      urlType: 'http',\n    },\n    requestHostname\n  );\n\n  let mainModulePath = guessMainModulePath(entryPoint);\n  bundleUrl += `/${mainModulePath}.${ext}`;\n\n  let queryParams = await constructBundleQueryParamsAsync(projectRoot, opts, requestHostname);\n  return `${bundleUrl}?${queryParams}`;\n}\n\nexport async function constructPublishUrlAsync(\n  projectRoot: string,\n  entryPoint: string,\n  requestHostname?: string,\n  opts?: Object\n) {\n  return await constructUrlWithExtensionAsync(\n    projectRoot,\n    entryPoint,\n    'bundle',\n    requestHostname,\n    opts\n  );\n}\n\nexport async function constructSourceMapUrlAsync(\n  projectRoot: string,\n  entryPoint: string,\n  requestHostname?: string\n) {\n  return await constructUrlWithExtensionAsync(projectRoot, entryPoint, 'map', requestHostname);\n}\n\nexport async function constructAssetsUrlAsync(\n  projectRoot: string,\n  entryPoint: string,\n  requestHostname?: string\n) {\n  return await constructUrlWithExtensionAsync(projectRoot, entryPoint, 'assets', requestHostname);\n}\n\nexport async function constructDebuggerHostAsync(projectRoot: string, requestHostname?: string) {\n  return constructUrlAsync(\n    projectRoot,\n    {\n      urlType: 'no-protocol',\n    },\n    true,\n    requestHostname\n  );\n}\n\nexport async function constructBundleQueryParamsAsync(projectRoot: string, opts: any) {\n  let queryParams = `dev=${encodeURIComponent(!!opts.dev)}`;\n\n  if (opts.hasOwnProperty('strict')) {\n    queryParams += `&strict=${encodeURIComponent(!!opts.strict)}`;\n  }\n\n  if (opts.hasOwnProperty('minify')) {\n    queryParams += `&minify=${encodeURIComponent(!!opts.minify)}`;\n  }\n\n  queryParams += '&hot=false';\n\n  let { exp } = await ProjectUtils.readConfigJsonAsync(projectRoot);\n\n  // SDK11 to SDK32 require us to inject hashAssetFiles through the params, but this is not\n  // needed with SDK33+\n  let supportsAssetPlugins = Versions.gteSdkVersion(exp, '11.0.0');\n  let usesAssetPluginsQueryParam = supportsAssetPlugins && Versions.lteSdkVersion(exp, '32.0.0');\n  if (usesAssetPluginsQueryParam) {\n    // Use an absolute path here so that we can not worry about symlinks/relative requires\n    let pluginModule = ConfigUtils.resolveModule('expo/tools/hashAssetFiles', projectRoot, exp);\n    queryParams += `&assetPlugin=${encodeURIComponent(pluginModule)}`;\n  } else if (!supportsAssetPlugins) {\n    // Only sdk-10.1.0+ supports the assetPlugin parameter. We use only the\n    // major version in the sdkVersion field, so check for 11.0.0 to be sure.\n    if (!supportsAssetPlugins) {\n      queryParams += '&includeAssetFileHashes=true';\n    }\n  }\n\n  return queryParams;\n}\n\nexport async function constructWebAppUrlAsync(projectRoot) {\n  let packagerInfo = await ProjectSettings.readPackagerInfoAsync(projectRoot);\n  if (!packagerInfo.webpackServerPort) {\n    return null;\n  }\n\n  const host = ip.address();\n\n  const { https } = await ProjectSettings.readAsync(projectRoot);\n  let urlType = 'http';\n  if (https === true) {\n    urlType = 'https';\n  }\n\n  return `${urlType}://${host}:${packagerInfo.webpackServerPort}`;\n}\n\nexport async function constructUrlAsync(\n  projectRoot: string,\n  opts: any,\n  isPackager: boolean,\n  requestHostname?: string\n) {\n  if (opts) {\n    let schema = joi.object().keys({\n      urlType: joi.any().valid('exp', 'http', 'redirect', 'no-protocol'),\n      lanType: joi.any().valid('ip', 'hostname'),\n      hostType: joi.any().valid('localhost', 'lan', 'tunnel'),\n      dev: joi.boolean(),\n      strict: joi.boolean(),\n      minify: joi.boolean(),\n      urlRandomness: joi\n        .string()\n        .optional()\n        .allow(null),\n    });\n\n    const { error } = joi.validate(opts, schema);\n    if (error) {\n      throw new XDLError('INVALID_OPTIONS', error.toString());\n    }\n  }\n\n  let defaultOpts = await ProjectSettings.getPackagerOptsAsync(projectRoot);\n  if (!opts) {\n    opts = defaultOpts;\n  } else {\n    opts = Object.assign({}, defaultOpts, opts);\n  }\n\n  let packagerInfo = await ProjectSettings.readPackagerInfoAsync(projectRoot);\n\n  let protocol;\n  if (opts.urlType === 'http') {\n    protocol = 'http';\n  } else if (opts.urlType === 'no-protocol') {\n    protocol = null;\n  } else {\n    protocol = 'exp';\n\n    let { exp } = await ProjectUtils.readConfigJsonAsync(projectRoot);\n    if (exp.detach) {\n      if (exp.scheme && Versions.gteSdkVersion(exp, '27.0.0')) {\n        protocol = exp.scheme;\n      } else if (exp.detach.scheme) {\n        // must keep this fallback in place for older projects\n        // and those detached with an older version of xdl\n        protocol = exp.detach.scheme;\n      }\n    }\n  }\n\n  let hostname;\n  let port;\n\n  const proxyURL = isPackager\n    ? process.env.EXPO_PACKAGER_PROXY_URL\n    : process.env.EXPO_MANIFEST_PROXY_URL;\n  if (proxyURL) {\n    const parsedProxyURL = url.parse(proxyURL);\n    hostname = parsedProxyURL.hostname;\n    port = parsedProxyURL.port;\n    if (parsedProxyURL.protocol === 'https:') {\n      if (protocol === 'http') {\n        protocol = 'https';\n      }\n      if (!port) {\n        port = '443';\n      }\n    }\n  } else if (opts.hostType === 'localhost' || requestHostname === 'localhost') {\n    hostname = '127.0.0.1';\n    port = isPackager ? packagerInfo.packagerPort : packagerInfo.expoServerPort;\n  } else if (opts.hostType === 'lan' || Config.offline) {\n    if (process.env.EXPO_PACKAGER_HOSTNAME) {\n      hostname = process.env.EXPO_PACKAGER_HOSTNAME.trim();\n    } else if (process.env.REACT_NATIVE_PACKAGER_HOSTNAME) {\n      hostname = process.env.REACT_NATIVE_PACKAGER_HOSTNAME.trim();\n    } else if (opts.lanType === 'ip') {\n      if (requestHostname) {\n        hostname = requestHostname;\n      } else {\n        hostname = ip.address();\n      }\n    } else {\n      // Some old versions of OSX work with hostname but not local ip address.\n      hostname = os.hostname();\n    }\n    port = isPackager ? packagerInfo.packagerPort : packagerInfo.expoServerPort;\n  } else {\n    let ngrokUrl = isPackager ? packagerInfo.packagerNgrokUrl : packagerInfo.expoServerNgrokUrl;\n    if (!ngrokUrl) {\n      ProjectUtils.logWarning(\n        projectRoot,\n        'expo',\n        'Tunnel URL not found, falled back to LAN URL.',\n        'tunnel-url-not-found'\n      );\n      return constructUrlAsync(\n        projectRoot,\n        { ...opts, hostType: 'lan' },\n        isPackager,\n        requestHostname\n      );\n    } else {\n      ProjectUtils.clearNotification(projectRoot, 'tunnel-url-not-found');\n      let pnu = url.parse(ngrokUrl);\n      hostname = pnu.hostname;\n      port = pnu.port;\n    }\n  }\n\n  let url_ = '';\n  if (protocol) {\n    url_ += `${protocol}://`;\n  }\n\n  if (!hostname) {\n    throw new Error('Hostname cannot be inferred.');\n  }\n\n  url_ += hostname;\n\n  if (port) {\n    url_ += `:${port}`;\n  } else {\n    // Android HMR breaks without this :|\n    url_ += ':80';\n  }\n\n  if (opts.urlType === 'redirect') {\n    return `https://exp.host/--/to-exp/${encodeURIComponent(url_)}`;\n  }\n\n  return url_;\n}\n\nexport function guessMainModulePath(entryPoint: string) {\n  return entryPoint.replace(/\\.js$/, '');\n}\n\nexport function randomIdentifier(length: number = 6) {\n  let alphabet = '23456789qwertyuipasdfghjkzxcvbnm';\n  let result = '';\n  for (let i = 0; i < length; i++) {\n    let j = Math.floor(Math.random() * alphabet.length);\n    let c = alphabet.substr(j, 1);\n    result += c;\n  }\n  return result;\n}\n\nexport function sevenDigitIdentifier() {\n  return `${randomIdentifier(3)}-${randomIdentifier(4)}`;\n}\n\nexport function randomIdentifierForUser(username: string) {\n  return `${username}-${randomIdentifier(3)}-${randomIdentifier(2)}`;\n}\n\nexport function someRandomness() {\n  return [randomIdentifier(2), randomIdentifier(3)].join('-');\n}\n\nexport function domainify(s: string) {\n  return s\n    .toLowerCase()\n    .replace(/[^a-z0-9-]/g, '-')\n    .replace(/^-+/, '')\n    .replace(/-+$/, '');\n}\n\nexport function getPlatformSpecificBundleUrl(url: string, platform: string) {\n  if (url.includes(Exp.ENTRY_POINT_PLATFORM_TEMPLATE_STRING)) {\n    return url.replace(Exp.ENTRY_POINT_PLATFORM_TEMPLATE_STRING, platform);\n  } else {\n    return url;\n  }\n}\n\nexport async function isHttps(url) {\n  return validator.isURL(url, { protocols: ['https'] });\n}\n"],"sourceRoot":"/@expo/xdl@55.0.14/src"}