{"version":3,"sources":["detach/IosIcons.js"],"names":["_getAppleIconQualifier","iconSize","iconResolution","let","iconQualifier","async","_saveDefaultIconToPathAsync","context","path","type","data","exp","icon","await","saveImageToPathAsync","projectPath","Error","manifest","ios","iconUrl","saveUrlToPathAsync","createAndWriteIconsToPathAsync","destinationIconPath","defaultIconFilename","join","e","logger","warn","message","iconSizes","Promise","all","map","iconResolutions","iconKey","rawIconFilename","usesDefault","hasOwnProperty","iconFilename","iconSizePx","spawnAsyncThrowError","stdio","cwd","resizeImageAsync","dims","getImageDimensionsAsync","width","height"],"mappings":"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","file":"../../detach/IosIcons.js","sourcesContent":["/**\n *  @flow\n */\nimport path from 'path';\n\nimport { saveImageToPathAsync, saveUrlToPathAsync, spawnAsyncThrowError } from './ExponentTools';\nimport StandaloneContext from './StandaloneContext';\nimport { getImageDimensionsAsync, resizeImageAsync } from '../tools/ImageUtils';\nimport logger from './Logger';\n\nfunction _getAppleIconQualifier(iconSize: number, iconResolution: number): string {\n  let iconQualifier;\n  if (iconResolution !== 1) {\n    // e.g. \"29x29@3x\"\n    iconQualifier = `${iconSize}x${iconSize}@${iconResolution}x`;\n  } else {\n    iconQualifier = `${iconSize}x${iconSize}`;\n  }\n  if (iconSize === 76 || iconSize === 83.5) {\n    // ipad sizes require ~ipad at the end\n    iconQualifier = `${iconQualifier}~ipad`;\n  }\n  return iconQualifier;\n}\n\nasync function _saveDefaultIconToPathAsync(context: StandaloneContext, path: string) {\n  if (context.type === 'user') {\n    if (context.data.exp.icon) {\n      await saveImageToPathAsync(context.data.projectPath, context.data.exp.icon, path);\n    } else {\n      throw new Error('Cannot save icon because app.json has no exp.icon key.');\n    }\n  } else {\n    if (context.data.manifest.ios && context.data.manifest.ios.iconUrl) {\n      await saveUrlToPathAsync(context.data.manifest.ios.iconUrl, path);\n    } else if (context.data.manifest.iconUrl) {\n      await saveUrlToPathAsync(context.data.manifest.iconUrl, path);\n    } else {\n      throw new Error('Cannot save icon because manifest has no iconUrl or ios.iconUrl key.');\n    }\n  }\n}\n\n/**\n * Based on keys in the given context.config,\n * ensure that the proper iOS icon images exist -- assuming Info.plist already\n * points at them under CFBundleIcons.CFBundlePrimaryIcon.CFBundleIconFiles.\n *\n * This only works on MacOS (as far as I know) because it uses the sips utility.\n */\nasync function createAndWriteIconsToPathAsync(\n  context: StandaloneContext,\n  destinationIconPath: string\n) {\n  let defaultIconFilename = 'exp-icon.png';\n  try {\n    await _saveDefaultIconToPathAsync(context, path.join(destinationIconPath, defaultIconFilename));\n  } catch (e) {\n    defaultIconFilename = null;\n    logger.warn(e.message);\n  }\n\n  const iconSizes = [1024, 20, 29, 40, 60, 76, 83.5];\n\n  await Promise.all(\n    iconSizes.map(async iconSize => {\n      let iconResolutions;\n      if (iconSize === 76) {\n        // iPad has 1x and 2x icons for this size only\n        iconResolutions = [1, 2];\n      } else if (iconSize === 1024) {\n        // marketing icon is weird\n        iconResolutions = [1];\n      } else if (iconSize === 83.5) {\n        iconResolutions = [2];\n      } else {\n        iconResolutions = [2, 3];\n      }\n\n      // We need to wait for all of these to finish!\n      await Promise.all(\n        iconResolutions.map(async iconResolution => {\n          let iconQualifier = _getAppleIconQualifier(iconSize, iconResolution);\n          let iconKey = `iconUrl${iconQualifier}`;\n          let rawIconFilename;\n          let usesDefault = false;\n          if (context.type === 'service') {\n            // TODO(nikki): Support local paths for these icons\n            const manifest = context.data.manifest;\n            if (manifest.ios && manifest.ios.hasOwnProperty(iconKey)) {\n              // manifest specifies an image just for this size/resolution, use that\n              rawIconFilename = `exp-icon${iconQualifier}.png`;\n              await saveUrlToPathAsync(\n                manifest.ios[iconKey],\n                `${destinationIconPath}/${rawIconFilename}`\n              );\n            }\n          }\n          if (!rawIconFilename) {\n            // use default iconUrl\n            usesDefault = true;\n            if (defaultIconFilename) {\n              rawIconFilename = defaultIconFilename;\n            } else {\n              logger.warn(\n                `Project does not specify ios.${iconKey} nor a default iconUrl. Bundle will use the Expo logo.`\n              );\n              return;\n            }\n          }\n\n          let iconFilename = `AppIcon${iconQualifier}.png`;\n          let iconSizePx = iconSize * iconResolution;\n          await spawnAsyncThrowError('/bin/cp', [rawIconFilename, iconFilename], {\n            stdio: 'inherit',\n            cwd: destinationIconPath,\n          });\n          try {\n            await resizeImageAsync(iconSizePx, iconFilename, destinationIconPath);\n          } catch (e) {\n            throw new Error(`Failed to resize image: ${iconFilename}. (${e})`);\n          }\n\n          // reject non-square icons (because Apple will if we don't)\n          const dims = await getImageDimensionsAsync(destinationIconPath, iconFilename);\n          if (!dims) {\n            throw new Error(`Unable to read the dimensions of ${iconFilename}`);\n          } else if (dims.width !== dims.height) {\n            throw new Error(\n              `iOS icons must be square, the dimensions of ${iconFilename} are ${dims}`\n            );\n          }\n\n          if (!usesDefault) {\n            // non-default icon used, clean up the downloaded version\n            await spawnAsyncThrowError('/bin/rm', [\n              path.join(destinationIconPath, rawIconFilename),\n            ]);\n          }\n        })\n      );\n    })\n  );\n\n  // clean up default icon\n  if (defaultIconFilename) {\n    await spawnAsyncThrowError('/bin/rm', [path.join(destinationIconPath, defaultIconFilename)]);\n  }\n}\n\nexport { createAndWriteIconsToPathAsync };\n"],"sourceRoot":"/@expo/xdl@55.0.14/src"}