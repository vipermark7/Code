{"version":3,"sources":["detach/installPackagesAsync.js"],"names":["async","installPackagesAsync","projectDir","packages","options","any","let","packageManager","packageLockJsonExists","boolean","await","fs","pathExists","path","join","yarnExists","yarnExistsAsync","logger","info","spawnAsync","cwd","stdio","version","stdout","trim","semver","valid","e"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;AACA;;AAEA;;;;AAEeA,eAAeC,oBAAfD,CACbE,UADaF,EAEbG,QAFaH,EAGbI,OAAUC,GAAM,EAHHL,EAIE;AACfM,MAAIC,cAAAA,GAAiB,KAArBD;;AACA,MAAIF,OAAO,CAACG,cAAZ,EAA4B;AAC1BA,IAAAA,cAAAA,GAAiBH,OAAO,CAACG,cAAzBA;AACF,GAFA,MAEO;AACL,UAAMC,qBAAuBC,GAAUC,MAAMC,iBAAGC,UAAHD,CAC3CE,cAAKC,IAALD,CAAUX,UAAVW,EAAsB,mBAAtBA,CAD2CF,CAA7C;AAGA,UAAMI,UAAAA,GAAaL,MAAMM,eAAe,EAAxC;AACAT,IAAAA,cAAAA,GAAiBQ,UAAAA,IAAc,CAACP,qBAAfO,GAAuC,MAAvCA,GAAgD,KAAjER;AACF;;AAEA,MAAIA,cAAAA,KAAmB,MAAvB,EAA+B;AAC7BU,oBAAOC,IAAPD,CAAa,uCAAbA;;AACAP,UAAMS,yBAAW,SAAXA,EAAsB,CAAC,KAAD,EAAQ,UAAR,EAAoB,GAAGhB,QAAvB,CAAtBgB,EAAwD;AAC5DC,MAAAA,GAAG,EAAElB,UADuD;AAE5DmB,MAAAA,KAAK,EAAE;AAFqD,KAAxDF,CAANT;AAIF,GANA,MAMO;AACLO,oBAAOC,IAAPD,CAAa,sCAAbA;;AACA,QAAI,EAAEP,MAAMC,iBAAGC,UAAHD,CAAcE,cAAKC,IAALD,CAAUX,UAAVW,EAAsB,cAAtBA,CAAdF,CAAR,CAAJ,EAAmE;AACjED,YAAMS,yBAAW,KAAXA,EAAkB,CAAC,SAAD,EAAY,YAAZ,EAA0B,OAA1B,CAAlBA,EAAsD;AAC1DC,QAAAA,GAAG,EAAElB,UADqD;AAE1DmB,QAAAA,KAAK,EAAE;AAFmD,OAAtDF,CAANT;AAIF;;AACAA,UAAMS,yBAAW,KAAXA,EAAkB,CAAC,SAAD,EAAY,QAAZ,EAAsB,YAAtB,EAAoC,OAApC,EAA6C,GAAGhB,QAAhD,CAAlBgB,EAA6E;AACjFC,MAAAA,GAAG,EAAElB,UAD4E;AAEjFmB,MAAAA,KAAK,EAAE;AAF0E,KAA7EF,CAANT;AAIF;AACF;;AAEAV,eAAegB,eAAfhB,GAAiC;AAC/B,MAAI;AACFM,QAAIgB,OAAAA,GAAU,CAACZ,MAAMS,yBAAW,SAAXA,EAAsB,CAAC,WAAD,CAAtBA,CAAP,EAA6CI,MAA7C,CAAoDC,IAApD,EAAdlB;AACA,WAAO,CAAC,CAACmB,gBAAOC,KAAPD,CAAaH,OAAbG,CAAT;AACF,GAHA,CAGE,OAAOE,CAAP,EAAU;AACV,WAAO,KAAP;AACF;AACF","file":"../../detach/installPackagesAsync.js","sourcesContent":["// @flow\n\nimport spawnAsync from '@expo/spawn-async';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport semver from 'semver';\n\nimport logger from './Logger';\n\nexport default async function installPackagesAsync(\n  projectDir: string,\n  packages: string[],\n  options?: any = {}\n): Promise<void> {\n  let packageManager = 'npm';\n  if (options.packageManager) {\n    packageManager = options.packageManager;\n  } else {\n    const packageLockJsonExists: boolean = await fs.pathExists(\n      path.join(projectDir, 'package-lock.json')\n    );\n    const yarnExists = await yarnExistsAsync();\n    packageManager = yarnExists && !packageLockJsonExists ? 'yarn' : 'npm';\n  }\n\n  if (packageManager === 'yarn') {\n    logger.info(`Installing dependencies using Yarn...`);\n    await spawnAsync('yarnpkg', ['add', '--silent', ...packages], {\n      cwd: projectDir,\n      stdio: 'inherit',\n    });\n  } else {\n    logger.info(`Installing dependencies using npm...`);\n    if (!(await fs.pathExists(path.join(projectDir, 'node_modules')))) {\n      await spawnAsync('npm', ['install', '--loglevel', 'error'], {\n        cwd: projectDir,\n        stdio: 'inherit',\n      });\n    }\n    await spawnAsync('npm', ['install', '--save', '--loglevel', 'error', ...packages], {\n      cwd: projectDir,\n      stdio: 'inherit',\n    });\n  }\n}\n\nasync function yarnExistsAsync() {\n  try {\n    let version = (await spawnAsync('yarnpkg', ['--version'])).stdout.trim();\n    return !!semver.valid(version);\n  } catch (e) {\n    return false;\n  }\n}\n"],"sourceRoot":"/@expo/xdl@55.0.14/src"}