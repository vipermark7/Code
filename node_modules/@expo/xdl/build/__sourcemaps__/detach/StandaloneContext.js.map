{"version":3,"sources":["detach/StandaloneContext.ts"],"names":["StandaloneContext","type","config","projectPath","exp","publishedUrl","context","data","published","url","releaseChannel","build","StandaloneBuildFlags","createEmpty","expoSourcePath","archivePath","manifest","privateConfig","testEnvironment","shellAppSdkVersion"],"mappings":";;;;;;;AAAA;;;;;;AA4BA,MAAMA,iBAAN,CAAwB;AAAA;AAAA,yCAiER,MAAM;AAClB,aAAO,KAAKC,IAAL,KAAc,SAAd,IAA2B,CAAC,KAAKC,MAAxC;AACD,KAnEqB;AAAA;;AAAA;;gBAAlBF,iB,uBAUuB,CACzBG,WADyB,EAEzBC,GAFyB,EAGzBC,YAHyB,KAIH;AACtB,MAAIC,OAAO,GAAG,IAAIN,iBAAJ,EAAd;AACAM,EAAAA,OAAO,CAACL,IAAR,GAAe,MAAf;AACAK,EAAAA,OAAO,CAACC,IAAR,GAAe;AACbJ,IAAAA,WADa;AAEbC,IAAAA;AAFa,GAAf;AAIAE,EAAAA,OAAO,CAACJ,MAAR,GAAiBE,GAAjB;AACAE,EAAAA,OAAO,CAACE,SAAR,GAAoB;AAClBC,IAAAA,GAAG,EAAEJ,YADa;AAElBK,IAAAA,cAAc,EAAE;AAFE,GAApB,CARsB,CAYtB;;AACAJ,EAAAA,OAAO,CAACK,KAAR,GAAgBC,8BAAqBC,WAArB,EAAhB;AACA,SAAOP,OAAP;AACD,C;;gBA7BGN,iB,0BA+B0B,CAC5Bc,cAD4B,EAE5BC,WAF4B,EAG5BC,QAH4B,EAI5BC,aAJ4B,EAK5BC,eAL4B,EAM5BP,KAN4B,EAO5BN,YAP4B,EAQ5BK,cAR4B,EAS5BS,kBAT4B,KAUN;AACtB,MAAIb,OAAO,GAAG,IAAIN,iBAAJ,EAAd;AACAM,EAAAA,OAAO,CAACL,IAAR,GAAe,SAAf;AACAK,EAAAA,OAAO,CAACC,IAAR,GAAe;AACbO,IAAAA,cADa;AAEbC,IAAAA,WAFa;AAGbC,IAAAA,QAHa;AAIbC,IAAAA,aAJa;AAKbC,IAAAA,eALa;AAMbC,IAAAA;AANa,GAAf;AAQAb,EAAAA,OAAO,CAACJ,MAAR,GAAiBc,QAAjB;AACAV,EAAAA,OAAO,CAACK,KAAR,GAAgBA,KAAhB;AACAL,EAAAA,OAAO,CAACE,SAAR,GAAoB;AAClBC,IAAAA,GAAG,EAAEJ,YADa;AAElBK,IAAAA,cAAc,EAAEA,cAAc,GAAGA,cAAH,GAAoB;AAFhC,GAApB;AAIA,SAAOJ,OAAP;AACD,C;;eAWYN,iB","sourcesContent":["import StandaloneBuildFlags from './StandaloneBuildFlags';\n\ntype StandaloneContextDataType = 'user' | 'service';\n\ntype StandaloneContextTestEnvironment = 'none' | 'local' | 'ci';\n\n/**\n *  A user context is used when we are configuring a standalone app locally on a user's machine,\n *  such as during `exp detach`.\n */\ntype StandaloneContextDataUser = {\n  projectPath: string;\n  exp: any;\n};\n\n/**\n *  A service context is used when we are generating a standalone app remotely on an Expo\n *  service machine, such as during `exp build`.\n */\ntype StandaloneContextDataService = {\n  expoSourcePath: string;\n  archivePath: string | null;\n  manifest: any;\n  privateConfig: any;\n  testEnvironment: StandaloneContextTestEnvironment;\n  shellAppSdkVersion: string;\n};\n\nclass StandaloneContext {\n  type?: StandaloneContextDataType;\n  data?: StandaloneContextDataUser | StandaloneContextDataService;\n  config: any; // same as underlying app.json or manifest\n  published?: {\n    url?: string;\n    releaseChannel: string;\n  };\n  build?: StandaloneBuildFlags;\n\n  static createUserContext = (\n    projectPath: string,\n    exp: any,\n    publishedUrl?: string\n  ): StandaloneContext => {\n    let context = new StandaloneContext();\n    context.type = 'user';\n    context.data = {\n      projectPath,\n      exp,\n    };\n    context.config = exp;\n    context.published = {\n      url: publishedUrl,\n      releaseChannel: 'default',\n    };\n    // we never expect to handle the build step for user contexts right now\n    context.build = StandaloneBuildFlags.createEmpty();\n    return context;\n  };\n\n  static createServiceContext = (\n    expoSourcePath: string,\n    archivePath: string | null,\n    manifest: any,\n    privateConfig: any,\n    testEnvironment: StandaloneContextTestEnvironment,\n    build: StandaloneBuildFlags,\n    publishedUrl: string,\n    releaseChannel: string,\n    shellAppSdkVersion: string\n  ): StandaloneContext => {\n    let context = new StandaloneContext();\n    context.type = 'service';\n    context.data = {\n      expoSourcePath,\n      archivePath,\n      manifest,\n      privateConfig,\n      testEnvironment,\n      shellAppSdkVersion,\n    };\n    context.config = manifest;\n    context.build = build;\n    context.published = {\n      url: publishedUrl,\n      releaseChannel: releaseChannel ? releaseChannel : 'default',\n    };\n    return context;\n  };\n\n  /**\n   *  On iOS we begin configuring standalone apps before we have any information about the\n   *  project's manifest.\n   */\n  isAnonymous = () => {\n    return this.type === 'service' && !this.config;\n  };\n}\n\nexport default StandaloneContext;\n"],"file":"../../detach/StandaloneContext.js","sourceRoot":"/@expo/xdl@55.0.14/src"}