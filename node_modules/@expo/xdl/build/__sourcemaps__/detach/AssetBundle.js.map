{"version":3,"sources":["detach/AssetBundle.js"],"names":["EXPO_DOMAINS","ASSETS_DIR_DEFAULT_URL","async","bundleAsync","context","assets","dest","oldFormat","boolean","reduce","res","cur","concat","fileHashes","map","h","type","await","fs","ensureDir","urlResolver","createAssetsUrlResolver","batches","_","chunk","batch","Promise","all","asset","extensionIndex","lastIndexOf","prefixLength","length","hash","substring","saveUrlToPathAsync","path","join","let","assetsDirUrl","assetUrlOverride","config","publishedUrl","published","url","hostname","parse","maybeExpoDomain","takeRight","split","includes","resolve"],"mappings":";;;;;;;AAKA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;AAXA;AAaA,MAAMA,YAAAA,GAAe,CAAC,SAAD,EAAY,UAAZ,EAAwB,WAAxB,EAAqC,WAArC,CAArB;AACA,MAAMC,sBAAAA,GAAyB,+CAA/B;;AAEOC,eAAeC,WAAfD,CACLE,OADKF,EAELG,MAFKH,EAGLI,IAHKJ,EAILK,SAAWC,GAAU,KAJhBN,EAKU;AACf,MAAI,CAACG,MAAL,EAAa;AACX;AACF,GAHe,CAIf;;;AACA,MAAI,OAAOA,MAAM,CAAC,CAAD,CAAb,KAAqB,QAAzB,EAAmC;AACjCA,IAAAA,MAAAA,GAASA,MAAM,CAACI,MAAPJ,CACP,CAACK,GAAD,EAAMC,GAAN,KACED,GAAG,CAACE,MAAJF,CAAWC,GAAG,CAACE,UAAJF,CAAeG,GAAfH,CAAmBI,CAAAA,IAAK,WAAWA,CAAX,IAAgBJ,GAAG,CAACK,IAAJL,GAAW,MAAMA,GAAG,CAACK,IAArBL,GAA4B,EAA5C,CAAxBA,CAAXD,CAFKL,EAGP,EAHOA,CAATA;AAKF;;AAEAY,QAAMC,iBAAGC,SAAHD,CAAaZ,IAAbY,CAAND;AAEA,QAAMG,WAAAA,GAAcC,uBAAuB,CAACjB,OAAD,CAA3C;;AAEA,QAAMkB,OAAAA,GAAUC,gBAAEC,KAAFD,CAAQlB,MAARkB,EAAgB,CAAhBA,CAAhB;;AACA,OAAK,MAAME,KAAX,IAAoBH,OAApB,EAA6B;AAC3BL,UAAMS,OAAO,CAACC,GAARD,CACJD,KAAK,CAACX,GAANW,CAAUvB,MAAM0B,KAAN1B,IAAe;AACvB,YAAM2B,cAAAA,GAAiBD,KAAK,CAACE,WAANF,CAAkB,GAAlBA,CAAvB;AACA,YAAMG,YAAAA,GAAe,SAASC,MAA9B;AACA,YAAMC,IAAAA,GACJJ,cAAAA,IAAkB,CAAlBA,GACID,KAAK,CAACM,SAANN,CAAgBG,YAAhBH,EAA8BC,cAA9BD,CADJC,GAEID,KAAK,CAACM,SAANN,CAAgBG,YAAhBH,CAHN;AAIAX,YAAMkB,uCACJf,WAAW,CAACa,IAAD,CADPE,EAEJ;AACAC,oBAAKC,IAALD,CAAU9B,IAAV8B,EAAgB7B,SAAAA,GAAY0B,IAAZ1B,GAAmBqB,KAAnCQ,CAHID,CAANlB;AAKD,KAZDQ,CADIC,CAANT;AAeF;AACF;;AAEA,SAASI,uBAAT,CAAiCjB,OAAjC,EAA0C;AACxCkC,MAAIC,YAAAA,GAAetC,sBAAnBqC;;AACA,MAAIlC,OAAJ,EAAa;AACX,UAAM;AAAEoC,MAAAA,gBAAAA,GAAmB;AAArB,QAAoCpC,OAAO,CAACqC,MAAlD;AACA,UAAMC,YAAAA,GAAetC,OAAO,CAACuC,SAARvC,CAAkBwC,GAAvC;;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAeD,aAAIE,KAAJF,CAAUF,YAAVE,CAArB;;AACA,UAAMG,eAAAA,GAAkBxB,gBAAEyB,SAAFzB,CAAYsB,QAAQ,CAACI,KAATJ,CAAe,GAAfA,CAAZtB,EAAiC,CAAjCA,EAAoCc,IAApCd,CAAyC,GAAzCA,CAAxB;;AACA,QAAI,CAACA,gBAAE2B,QAAF3B,CAAWvB,YAAXuB,EAAyBwB,eAAzBxB,CAAL,EAAgD;AAC9CgB,MAAAA,YAAAA,GAAeK,aAAIO,OAAJP,CAAYF,YAAZE,EAA0BJ,gBAA1BI,CAAfL;AACF;AACF;;AACA,SAAON,IAAAA,IAAS,GAAEM,YAAa,IAAGN,IAAK,EAAvC;AACF","file":"../../detach/AssetBundle.js","sourcesContent":["// Copyright 2015-present 650 Industries. All rights reserved.\n/**\n * @flow\n */\n\nimport _ from 'lodash';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport url from 'url';\n\nimport { saveUrlToPathAsync } from './ExponentTools';\nimport StandaloneContext from './StandaloneContext';\n\nconst EXPO_DOMAINS = ['expo.io', 'exp.host', 'expo.test', 'localhost'];\nconst ASSETS_DIR_DEFAULT_URL = 'https://d1wp6m56sqw74a.cloudfront.net/~assets';\n\nexport async function bundleAsync(\n  context: StandaloneContext,\n  assets: ?(Array<string> | Array<Object>),\n  dest: string,\n  oldFormat: boolean = false\n): Promise<void> {\n  if (!assets) {\n    return;\n  }\n  // Compat with exp 46.x.x, can remove when this version is phasing out.\n  if (typeof assets[0] === 'object') {\n    assets = assets.reduce(\n      (res, cur) =>\n        res.concat(cur.fileHashes.map(h => 'asset_' + h + (cur.type ? '.' + cur.type : ''))),\n      []\n    );\n  }\n\n  await fs.ensureDir(dest);\n\n  const urlResolver = createAssetsUrlResolver(context);\n\n  const batches = _.chunk(assets, 5);\n  for (const batch of batches) {\n    await Promise.all(\n      batch.map(async asset => {\n        const extensionIndex = asset.lastIndexOf('.');\n        const prefixLength = 'asset_'.length;\n        const hash =\n          extensionIndex >= 0\n            ? asset.substring(prefixLength, extensionIndex)\n            : asset.substring(prefixLength);\n        await saveUrlToPathAsync(\n          urlResolver(hash),\n          // For sdk24 the runtime expects only the hash as the filename.\n          path.join(dest, oldFormat ? hash : asset)\n        );\n      })\n    );\n  }\n}\n\nfunction createAssetsUrlResolver(context) {\n  let assetsDirUrl = ASSETS_DIR_DEFAULT_URL;\n  if (context) {\n    const { assetUrlOverride = './assets' } = context.config;\n    const publishedUrl = context.published.url;\n    const { hostname } = url.parse(publishedUrl);\n    const maybeExpoDomain = _.takeRight(hostname.split('.'), 2).join('.');\n    if (!_.includes(EXPO_DOMAINS, maybeExpoDomain)) {\n      assetsDirUrl = url.resolve(publishedUrl, assetUrlOverride);\n    }\n  }\n  return hash => `${assetsDirUrl}/${hash}`;\n}\n"],"sourceRoot":"/@expo/xdl@55.0.14/src"}