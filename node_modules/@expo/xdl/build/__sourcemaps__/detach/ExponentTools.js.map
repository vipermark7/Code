{"version":3,"sources":["detach/ExponentTools.ts"],"names":["request","Request","defaults","resolveWithFullResponse","_getFilesizeInBytes","path","stats","fs","statSync","fileSizeInBytes","parseSdkMajorVersion","expSdkVersion","Infinity","sdkMajorVersion","versionComponents","split","map","number","parseInt","_","saveUrlToPathAsync","url","Promise","resolve","reject","stream","createWriteStream","on","Error","timeout","pipe","saveImageToPathAsync","projectRoot","pathOrURL","outPath","localPath","existsSync","createReadStream","getManifestAsync","headers","options","buildPhaseLogger","logger","LoggerDetach","withFields","buildPhase","requestOptions","replace","response","_retryPromise","err","error","responseBody","body","info","manifest","JSON","parse","e","fn","retries","spawnAsyncThrowError","command","args","stdio","cwd","process","pipeToLogger","promise","child","streams","stdout","stderr","loggerFields","spawnAsync","message","createSpawner","lastArg","last","optionsFromArg","isObject","pop","transformFileContentsAsync","filename","transform","fileString","readFile","newFileString","writeFile","manifestUsesSplashApi","platform","splash","ios","android","rimrafDontThrow","directory","removeSync","removeIfExists","file","remove","isDirectory","dir","getResolvedLocalesAsync","exp","locales","undefined","lang","Object","entries","s","XDLError","stringify","regexFileAsync","regex","toString","deleteLinesInFileAsync","startRegex","endRegex","lines","filteredLines","inDeleteRange","i","length","match","push","join"],"mappings":"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","sourcesContent":["import path from 'path';\nimport { Readable } from 'stream';\n\nimport fs from 'fs-extra';\nimport Request from 'request-promise-native';\n// `request-promise-native` discourages using pipe. Noticed some issues with\n// error handling so when using pipe use the original request lib instead.\nimport pipeRequest from 'request';\nimport spawnAsyncQuiet, { SpawnResult, SpawnOptions } from '@expo/spawn-async';\nimport _ from 'lodash';\nimport { ExpoConfig, Platform } from '@expo/config';\n\nimport LoggerDetach, { pipeOutputToLogger, Logger } from './Logger';\nimport XDLError from '../XDLError';\n\nconst request = Request.defaults({\n  resolveWithFullResponse: true,\n});\n\nfunction _getFilesizeInBytes(path: string) {\n  let stats = fs.statSync(path);\n  let fileSizeInBytes = stats['size'];\n  return fileSizeInBytes;\n}\n\nfunction parseSdkMajorVersion(expSdkVersion: string) {\n  // We assume that the unversioned SDK is the latest\n  if (expSdkVersion === 'UNVERSIONED') {\n    return Infinity;\n  }\n\n  let sdkMajorVersion = 0;\n  try {\n    let versionComponents = expSdkVersion.split('.').map(number => parseInt(number, 10));\n    sdkMajorVersion = versionComponents[0];\n  } catch (_) {}\n  return sdkMajorVersion;\n}\n\nfunction saveUrlToPathAsync(url: string, path: string) {\n  return new Promise(function(resolve, reject) {\n    let stream = fs.createWriteStream(path);\n    stream.on('close', () => {\n      if (_getFilesizeInBytes(path) < 10) {\n        reject(new Error(`${url} is too small`));\n      }\n      resolve();\n    });\n    stream.on('error', reject);\n    pipeRequest({ url, timeout: 20000 })\n      .on('error', reject)\n      .pipe(stream);\n  });\n}\n\nfunction saveImageToPathAsync(projectRoot: string, pathOrURL: string, outPath: string) {\n  const localPath = path.resolve(projectRoot, pathOrURL);\n  return new Promise(function(resolve, reject) {\n    let stream = fs.createWriteStream(outPath);\n    stream.on('close', () => {\n      if (_getFilesizeInBytes(outPath) < 10) {\n        throw new Error(`{filename} is too small`);\n      }\n      resolve();\n    });\n    stream.on('error', reject);\n    if (fs.existsSync(localPath)) {\n      fs.createReadStream(localPath).pipe(stream);\n    } else {\n      pipeRequest(pathOrURL).pipe(stream);\n    }\n  });\n}\n\nasync function getManifestAsync(url: string, headers: any, options: any = {}) {\n  const buildPhaseLogger =\n    options.logger || LoggerDetach.withFields({ buildPhase: 'reading manifest' });\n  const requestOptions = {\n    url: url.replace('exp://', 'http://'),\n    headers,\n  };\n\n  let response;\n  try {\n    response = await _retryPromise(() => request(requestOptions));\n  } catch (err) {\n    buildPhaseLogger.error(err);\n    throw new Error('Failed to fetch manifest from www');\n  }\n  const responseBody = response.body;\n  buildPhaseLogger.info('Using manifest:', responseBody);\n  let manifest;\n  try {\n    manifest = JSON.parse(responseBody);\n  } catch (e) {\n    throw new Error(`Unable to parse manifest: ${e}`);\n  }\n\n  return manifest;\n}\n\nasync function _retryPromise<T>(fn: (...args: any[]) => T, retries = 5): Promise<T> {\n  try {\n    return await fn();\n  } catch (err) {\n    if (retries-- > 0) {\n      return await _retryPromise(fn, retries);\n    } else {\n      throw err;\n    }\n  }\n}\n\nasync function spawnAsyncThrowError(\n  command: string,\n  args: string[],\n  options: SpawnOptions & {\n    loggerFields?: any;\n    pipeToLogger?: boolean | { stdout?: boolean; stderr?: boolean };\n    stdoutOnly?: boolean;\n    dontShowStdout?: boolean;\n  } = {\n    stdio: 'inherit',\n    cwd: process.cwd(),\n  }\n): Promise<SpawnResult> {\n  const { pipeToLogger } = options;\n  if (pipeToLogger) {\n    options.stdio = 'pipe';\n    options.cwd = options.cwd || process.cwd();\n  }\n  const promise = spawnAsyncQuiet(command, args, options);\n  if (pipeToLogger && promise.child) {\n    let streams: { stdout?: Readable | null; stderr?: Readable | null } = {};\n    if (pipeToLogger === true || pipeToLogger.stdout) {\n      streams.stdout = promise.child.stdout;\n    }\n    if (pipeToLogger === true || pipeToLogger.stderr) {\n      streams.stderr = promise.child.stderr;\n    }\n    pipeOutputToLogger(streams, options.loggerFields, options);\n  }\n  return promise;\n}\n\nasync function spawnAsync(\n  command: string,\n  args: string[],\n  options: SpawnOptions\n): Promise<SpawnResult | void> {\n  try {\n    return await spawnAsyncThrowError(command, args, options);\n  } catch (e) {\n    LoggerDetach.error(e.message);\n  }\n}\n\nfunction createSpawner(buildPhase: string, logger: Logger) {\n  return (command: string, ...args: any[]) => {\n    const lastArg = _.last(args);\n    const optionsFromArg = _.isObject(lastArg) ? args.pop() : {};\n\n    const options = { ...optionsFromArg, pipeToLogger: true };\n    if (buildPhase) {\n      options.loggerFields = options.loggerFields ? options.loggerFields : {};\n      options.loggerFields = { ...options.loggerFields, buildPhase };\n    }\n\n    if (logger) {\n      logger.info('Executing command:', command, ...args);\n    }\n    return spawnAsyncThrowError(command, args, options);\n  };\n}\n\nasync function transformFileContentsAsync(\n  filename: string,\n  transform: (input: string) => string | null\n) {\n  let fileString = await fs.readFile(filename, 'utf8');\n  let newFileString = transform(fileString);\n  if (newFileString !== null) {\n    await fs.writeFile(filename, newFileString);\n  }\n}\n\nfunction manifestUsesSplashApi(manifest: ExpoConfig, platform: Platform) {\n  if (platform === 'ios') {\n    return manifest.splash || (manifest.ios && manifest.ios.splash);\n  }\n  if (platform === 'android') {\n    return manifest.splash || (manifest.android && manifest.android.splash);\n  }\n  return false;\n}\n\nfunction rimrafDontThrow(directory: string) {\n  fs.removeSync(directory);\n}\n\nasync function removeIfExists(file: string) {\n  await fs.remove(file);\n}\n\nfunction isDirectory(dir: string) {\n  try {\n    if (fs.statSync(dir).isDirectory()) {\n      return true;\n    }\n\n    return false;\n  } catch (e) {\n    return false;\n  }\n}\n\ntype LocaleMap = { [lang: string]: any };\n\nasync function getResolvedLocalesAsync(exp: ExpoConfig): Promise<LocaleMap> {\n  const locales: LocaleMap = {};\n  if (exp.locales !== undefined) {\n    for (const [lang, path] of Object.entries(exp.locales)) {\n      const s = await fs.readFile(path as string, 'utf8');\n      try {\n        locales[lang] = JSON.parse(s);\n      } catch (e) {\n        throw new XDLError('INVALID_JSON', JSON.stringify(e));\n      }\n    }\n  }\n  return locales;\n}\n\nasync function regexFileAsync(regex: RegExp, replace: string, filename: string): Promise<void> {\n  let file = await fs.readFile(filename);\n  let fileString = file.toString();\n  await fs.writeFile(filename, fileString.replace(regex, replace));\n}\n\n// Matches sed /d behavior\nasync function deleteLinesInFileAsync(\n  startRegex: RegExp,\n  endRegex: RegExp,\n  filename: string\n): Promise<void> {\n  let file = await fs.readFile(filename);\n  let fileString = file.toString();\n  let lines = fileString.split(/\\r?\\n/);\n  let filteredLines = [];\n  let inDeleteRange = false;\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].match(startRegex)) {\n      inDeleteRange = true;\n    }\n\n    if (!inDeleteRange) {\n      filteredLines.push(lines[i]);\n    }\n\n    if (inDeleteRange && lines[i].match(endRegex)) {\n      inDeleteRange = false;\n    }\n  }\n  await fs.writeFile(filename, filteredLines.join('\\n'));\n}\n\nexport {\n  isDirectory,\n  parseSdkMajorVersion,\n  saveUrlToPathAsync,\n  saveImageToPathAsync,\n  getManifestAsync,\n  rimrafDontThrow,\n  removeIfExists,\n  spawnAsyncThrowError,\n  spawnAsync,\n  transformFileContentsAsync,\n  manifestUsesSplashApi,\n  getResolvedLocalesAsync,\n  regexFileAsync,\n  deleteLinesInFileAsync,\n  createSpawner,\n};\n"],"file":"../../detach/ExponentTools.js","sourceRoot":"/@expo/xdl@55.0.14/src"}