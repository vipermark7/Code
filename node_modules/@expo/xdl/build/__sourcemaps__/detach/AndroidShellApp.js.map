{"version":3,"sources":["detach/AndroidShellApp.js"],"names":["getManifestAsync","saveUrlToPathAsync","spawnAsyncThrowError","spawnAsync","regexFileAsync","deleteLinesInFileAsync","parseSdkMajorVersion","ExponentTools","imageKeys","exponentDirectory","workingDir","process","env","EXPO_UNIVERSE_DIR","path","join","xmlWeirdAndroidEscape","original","let","noAmps","replaceString","noLt","noGt","noApos","exports","updateAndroidShellAppAsync","async","args","url","sdkVersion","releaseChannel","manifest","await","Accept","fullManifestUrl","replace","bundleUrl","shellPath","fs","remove","writeFileSync","JSON","stringify","getRemoteOrLocalUrl","key","isDetached","_","get","backgroundImagesForApp","basePath","splash","results","reduce","acc","imageKey","push","length","getSplashScreenBackgroundColor","backgroundColor","android","shouldShowLoadingView","resizeMode","copyInitialShellAppFilesAsync","androidSrcPath","pipeToLogger","loggerFields","buildPhase","cwd","copyToShellApp","fileName","copy","e","code","Error","message","createAndroidShellAppAsync","privateConfigFile","configuration","keystore","alias","keystorePassword","keyPassword","outputFile","modules","buildType","buildMode","exponentDir","ensureDir","logger","withFields","info","privateConfig","privateConfigContents","readFile","parse","config","androidBuildConfiguration","keyAlias","buildFlags","StandaloneBuildFlags","createAndroid","context","StandaloneContext","createServiceContext","removeObsoleteSdks","runShellAppModificationsAsync","prepareEnabledModules","skipBuild","buildShellAppAsync","shellPathForContext","type","data","projectPath","expoSourcePath","fnLogger","string","published","isRunningInUserContext","versionCode","javaPackage","package","name","scheme","detach","isFullManifest","version","backgroundImages","splashBackgroundColor","updatesDisabled","updates","enabled","appBuildGradle","settingsGradle","writeFile","runShPath","pathExists","buildGradleFile","readFileSync","androidVersion","match","randomID","uuid","v4","newScheme","newSchemeSuffix","intentFilters","renderIntentFilters","searchLine","permissions","whitelist","forEach","s","includes","blacklist","filter","p","map","createAndWriteIconsToPathAsync","globby","absolute","filePath","removeSync","Promise","all","image","resolve","AssetBundle","bundleAsync","bundledAssets","certificateHash","googleAndroidApiKey","branch","fabric","googleMaps","googleSignIn","apiKey","buildSecret","googleServicesFile","googleServicesFileContents","ext","isRelease","build","debugOrRelease","devOrProd","debugOrReleaseL","devOrProdL","shellFile","shellUnalignedFile","outputDirPath","gradleBuildCommand","outputPath","removeIfExists","gradleArgs","GRADLE_DAEMON_DISABLED","unshift","ANDROID_KEY_ALIAS","ANDROID_KEY_PASSWORD","ANDROID_KEYSTORE_PATH","ANDROID_KEYSTORE_PASSWORD","addDetachedConfigToExp","exp","console","warn","assetsDirectory","publishBundlePath","relative","publishManifestPath","removeInvalidSdkLinesWhenPreparingShell","majorSdkVersion","RegExp","requiredSdkVersion","filePathsToTransform","expoviewBuildGradle","settingsBuildGradle","multipleVersionReactNativeActivity","constants","appAndroidManifest","effectiveSdkVersion","Object","values","enabledModulesDir","packagesDir","ensureSymlink","mkdirp","mod","dirname"],"mappings":"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","file":"../../detach/AndroidShellApp.js","sourcesContent":["// Copyright 2015-present 650 Industries. All rights reserved.\n/**\n * @flow\n */\n\n'use strict';\n\nimport fs from 'fs-extra';\nimport path from 'path';\nimport replaceString from 'replace-string';\nimport _ from 'lodash';\nimport globby from 'globby';\nimport uuid from 'uuid';\n\nimport { createAndWriteIconsToPathAsync } from './AndroidIcons';\nimport * as AssetBundle from './AssetBundle';\nimport * as ExponentTools from './ExponentTools';\nimport StandaloneBuildFlags from './StandaloneBuildFlags';\nimport StandaloneContext from './StandaloneContext';\nimport renderIntentFilters from './AndroidIntentFilters';\nimport logger from './Logger';\n\nconst {\n  getManifestAsync,\n  saveUrlToPathAsync,\n  spawnAsyncThrowError,\n  spawnAsync,\n  regexFileAsync,\n  deleteLinesInFileAsync,\n  parseSdkMajorVersion,\n} = ExponentTools;\n\nconst imageKeys = ['mdpi', 'hdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi'];\n\n// Do not call this from anything used by detach\nfunction exponentDirectory(workingDir) {\n  if (workingDir) {\n    return workingDir;\n  } else if (process.env.EXPO_UNIVERSE_DIR) {\n    return path.join(process.env.EXPO_UNIVERSE_DIR, 'exponent');\n  } else {\n    return null;\n  }\n}\n\nfunction xmlWeirdAndroidEscape(original) {\n  let noAmps = replaceString(original, '&', '&amp;');\n  let noLt = replaceString(noAmps, '<', '&lt;');\n  let noGt = replaceString(noLt, '>', '&gt;');\n  let noApos = replaceString(noGt, '\"', '\\\\\"');\n  return replaceString(noApos, \"'\", \"\\\\'\");\n}\n\nexports.updateAndroidShellAppAsync = async function updateAndroidShellAppAsync(args: any) {\n  let { url, sdkVersion, releaseChannel, workingDir } = args;\n\n  releaseChannel = releaseChannel ? releaseChannel : 'default';\n  let manifest = await getManifestAsync(url, {\n    'Exponent-SDK-Version': sdkVersion,\n    'Exponent-Platform': 'android',\n    'Expo-Release-Channel': releaseChannel,\n    Accept: 'application/expo+json,application/json',\n  });\n\n  let fullManifestUrl = url.replace('exp://', 'https://');\n  let bundleUrl = manifest.bundleUrl;\n\n  let shellPath = path.join(exponentDirectory(workingDir), 'android-shell-app');\n\n  await fs.remove(path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'));\n  await fs.writeFileSync(\n    path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'),\n    JSON.stringify(manifest)\n  );\n  await fs.remove(path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle'));\n  await saveUrlToPathAsync(\n    bundleUrl,\n    path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle')\n  );\n\n  await deleteLinesInFileAsync(\n    `START EMBEDDED RESPONSES`,\n    `END EMBEDDED RESPONSES`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  await regexFileAsync(\n    '// ADD EMBEDDED RESPONSES HERE',\n    `\n    // ADD EMBEDDED RESPONSES HERE\n    // START EMBEDDED RESPONSES\n    embeddedResponses.add(new Constants.EmbeddedResponse(\"${fullManifestUrl}\", \"assets://shell-app-manifest.json\", \"application/json\"));\n    embeddedResponses.add(new Constants.EmbeddedResponse(\"${bundleUrl}\", \"assets://shell-app.bundle\", \"application/javascript\"));\n    // END EMBEDDED RESPONSES`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  await regexFileAsync(\n    'RELEASE_CHANNEL = \"default\"',\n    `RELEASE_CHANNEL = \"${releaseChannel}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n};\n\nfunction getRemoteOrLocalUrl(manifest, key, isDetached) {\n  // in detached apps, `manifest` is actually just app.json, so there are no remote url fields\n  // we should return a local url starting with file:// instead\n  if (isDetached) {\n    return _.get(manifest, key);\n  }\n  return _.get(manifest, `${key}Url`);\n}\n\nfunction backgroundImagesForApp(shellPath, manifest, isDetached) {\n  // returns an array like:\n  // [\n  //   {url: 'urlToDownload', path: 'pathToSaveTo'},\n  //   {url: 'anotherURlToDownload', path: 'anotherPathToSaveTo'},\n  // ]\n  let basePath = path.join(shellPath, 'app', 'src', 'main', 'res');\n  if (_.get(manifest, 'android.splash')) {\n    const splash = _.get(manifest, 'android.splash');\n    const results = _.reduce(\n      imageKeys,\n      function(acc, imageKey) {\n        let url = getRemoteOrLocalUrl(splash, imageKey, isDetached);\n        if (url) {\n          acc.push({\n            url,\n            path: path.join(basePath, `drawable-${imageKey}`, 'shell_launch_background_image.png'),\n          });\n        }\n\n        return acc;\n      },\n      []\n    );\n\n    // No splash screen images declared in 'android.splash' configuration, proceed to general one\n    if (results.length !== 0) {\n      return results;\n    }\n  }\n\n  let url = getRemoteOrLocalUrl(manifest, 'splash.image', isDetached);\n  if (url) {\n    return [\n      {\n        url,\n        path: path.join(basePath, 'drawable-xxxhdpi', 'shell_launch_background_image.png'),\n      },\n    ];\n  }\n\n  return [];\n}\n\nfunction getSplashScreenBackgroundColor(manifest) {\n  let backgroundColor;\n  if (manifest.android && manifest.android.splash && manifest.android.splash.backgroundColor) {\n    backgroundColor = manifest.android.splash.backgroundColor;\n  } else if (manifest.splash && manifest.splash.backgroundColor) {\n    backgroundColor = manifest.splash.backgroundColor;\n  }\n\n  // Default to white\n  if (!backgroundColor) {\n    backgroundColor = '#FFFFFF';\n  }\n  return backgroundColor;\n}\n\n/*\n  if resizeMode is 'contain' or 'cover' (since SDK33) or 'cover' (prior to SDK33) we should show LoadingView\n  that is presenting splash image in ImageView what allows full control over image sizing unlike\n  ImageDrawable that is provided by Android native splash screen API\n*/\nfunction shouldShowLoadingView(manifest, sdkVersion) {\n  const resizeMode =\n    (manifest.android && manifest.android.splash && manifest.android.splash.resizeMode) ||\n    (manifest.splash && manifest.splash.resizeMode);\n\n  return (\n    resizeMode &&\n    (parseSdkMajorVersion(sdkVersion) >= 33\n      ? resizeMode === 'contain' || resizeMode === 'cover'\n      : resizeMode === 'cover')\n  );\n}\n\nexport async function copyInitialShellAppFilesAsync(\n  androidSrcPath,\n  shellPath,\n  isDetached: boolean,\n  sdkVersion: ?string\n) {\n  if (androidSrcPath && !isDetached) {\n    // check if Android template files exist\n    // since we take out the prebuild step later on\n    // and we should have generated those files earlier\n    await spawnAsyncThrowError('../../tools-public/check-dynamic-macros-android.sh', [], {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'confirming that dynamic macros exist' },\n      cwd: path.join(androidSrcPath, 'app'),\n      env: process.env,\n    });\n  }\n\n  const copyToShellApp = async fileName => {\n    try {\n      await fs.copy(path.join(androidSrcPath, fileName), path.join(shellPath, fileName));\n    } catch (e) {\n      // android.iml is only available locally, not on the builders, so don't crash when this happens\n      if (e.code === 'ENOENT') {\n        // Some files are not included in all ExpoKit versions, so this error can be ignored.\n      } else {\n        throw new Error(`Could not copy ${fileName} to shell app directory: ${e.message}`);\n      }\n    }\n  };\n\n  if (!isDetached) {\n    await copyToShellApp('expoview');\n    await copyToShellApp('versioned-abis');\n    await copyToShellApp('ReactCommon');\n    await copyToShellApp('ReactAndroid');\n  }\n\n  await copyToShellApp('android.iml');\n  await copyToShellApp('app');\n  await copyToShellApp('build.gradle');\n  await copyToShellApp('gradle');\n  await copyToShellApp('gradle.properties');\n  await copyToShellApp('gradlew');\n  await copyToShellApp('settings.gradle');\n  await copyToShellApp('debug.keystore');\n  await copyToShellApp('run.sh');\n  await copyToShellApp('maven'); // this is a symlink\n\n  // kernel.android.bundle isn't ever used in standalone apps (at least in kernel v32)\n  // but in order to not change behavior in older SDKs, we'll remove the file only in 32+.\n  if (parseSdkMajorVersion(sdkVersion) >= 32) {\n    try {\n      await fs.remove(path.join(shellPath, 'app/src/main/assets/kernel.android.bundle'));\n    } catch (e) {\n      // let's hope it's just not present in the shell app template\n    }\n  }\n}\n\nexports.createAndroidShellAppAsync = async function createAndroidShellAppAsync(args: any) {\n  let {\n    url,\n    sdkVersion,\n    releaseChannel,\n    privateConfigFile,\n    configuration,\n    keystore,\n    alias,\n    keystorePassword,\n    keyPassword,\n    outputFile,\n    workingDir,\n    modules,\n    buildType,\n    buildMode,\n  } = args;\n\n  const exponentDir = exponentDirectory(workingDir);\n  let androidSrcPath = path.join(exponentDir, 'android');\n  let shellPath = path.join(exponentDir, 'android-shell-app');\n\n  await fs.remove(shellPath);\n  await fs.ensureDir(shellPath);\n\n  releaseChannel = releaseChannel ? releaseChannel : 'default';\n  let manifest;\n  if (args.manifest) {\n    manifest = args.manifest;\n    logger\n      .withFields({ buildPhase: 'reading manifest' })\n      .info('Using manifest:', JSON.stringify(manifest));\n  } else {\n    manifest = await getManifestAsync(url, {\n      'Exponent-SDK-Version': sdkVersion,\n      'Exponent-Platform': 'android',\n      'Expo-Release-Channel': releaseChannel,\n      Accept: 'application/expo+json,application/json',\n    });\n  }\n\n  configuration = configuration ? configuration : 'Release';\n\n  let privateConfig;\n  if (privateConfigFile) {\n    let privateConfigContents = await fs.readFile(privateConfigFile, 'utf8');\n    privateConfig = JSON.parse(privateConfigContents);\n  } else if (manifest.android) {\n    privateConfig = manifest.android.config;\n  }\n\n  let androidBuildConfiguration;\n  if (keystore && alias && keystorePassword && keyPassword) {\n    androidBuildConfiguration = {\n      keystore,\n      keystorePassword,\n      keyAlias: alias,\n      keyPassword,\n      outputFile,\n    };\n  }\n\n  let buildFlags = StandaloneBuildFlags.createAndroid(configuration, androidBuildConfiguration);\n  let context = StandaloneContext.createServiceContext(\n    androidSrcPath,\n    null,\n    manifest,\n    privateConfig,\n    /* testEnvironment */ 'none',\n    buildFlags,\n    url,\n    releaseChannel\n  );\n\n  await copyInitialShellAppFilesAsync(androidSrcPath, shellPath, false, sdkVersion);\n  await removeObsoleteSdks(shellPath, sdkVersion);\n  await runShellAppModificationsAsync(context, sdkVersion);\n  await prepareEnabledModules(shellPath, modules);\n\n  if (!args.skipBuild) {\n    await buildShellAppAsync(context, sdkVersion, buildType, buildMode);\n  }\n};\n\nfunction shellPathForContext(context: StandaloneContext) {\n  if (context.type === 'user') {\n    return path.join(context.data.projectPath, 'android');\n  } else {\n    return path.join(\n      exponentDirectory(\n        context.data.expoSourcePath && path.join(context.data.expoSourcePath, '..')\n      ),\n      'android-shell-app'\n    );\n  }\n}\n\nexport async function runShellAppModificationsAsync(\n  context: StandaloneContext,\n  sdkVersion: ?string\n) {\n  const fnLogger = logger.withFields({ buildPhase: 'running shell app modifications' });\n\n  let shellPath = shellPathForContext(context);\n  let url: string = context.published.url;\n  let manifest = context.config; // manifest or app.json\n  let releaseChannel = context.published.releaseChannel;\n\n  const isRunningInUserContext = context.type === 'user';\n  // In SDK32 we've unified build process for shell and ejected apps\n  const isDetached = ExponentTools.parseSdkMajorVersion(sdkVersion) >= 32 || isRunningInUserContext;\n\n  if (!context.data.privateConfig) {\n    fnLogger.info('No config file specified.');\n  }\n\n  let fullManifestUrl = url.replace('exp://', 'https://');\n\n  let versionCode = 1;\n  let javaPackage = manifest.android.package;\n  if (manifest.android.versionCode) {\n    versionCode = manifest.android.versionCode;\n  }\n\n  if (!javaPackage) {\n    throw new Error(\n      'Must specify androidPackage option (either from manifest or on command line).'\n    );\n  }\n\n  let name = manifest.name;\n  let scheme = manifest.scheme || (manifest.detach && manifest.detach.scheme);\n  let bundleUrl: ?string = manifest.bundleUrl;\n  let isFullManifest = !!bundleUrl;\n  let version = manifest.version ? manifest.version : '0.0.0';\n  let backgroundImages = backgroundImagesForApp(shellPath, manifest, isRunningInUserContext);\n  let splashBackgroundColor = getSplashScreenBackgroundColor(manifest);\n  let updatesDisabled = manifest.updates && manifest.updates.enabled === false;\n\n  // Clean build directories\n  await fs.remove(path.join(shellPath, 'app', 'build'));\n  await fs.remove(path.join(shellPath, 'ReactAndroid', 'build'));\n  await fs.remove(path.join(shellPath, 'expoview', 'build'));\n  await fs.remove(path.join(shellPath, 'app', 'src', 'test'));\n  await fs.remove(path.join(shellPath, 'app', 'src', 'androidTest'));\n\n  if (isDetached) {\n    let appBuildGradle = path.join(shellPath, 'app', 'build.gradle');\n    if (isRunningInUserContext) {\n      await regexFileAsync(/\\/\\* UNCOMMENT WHEN DETACHING/g, '', appBuildGradle);\n      await regexFileAsync(/END UNCOMMENT WHEN DETACHING \\*\\//g, '', appBuildGradle);\n      await deleteLinesInFileAsync(\n        'WHEN_DETACHING_REMOVE_FROM_HERE',\n        'WHEN_DETACHING_REMOVE_TO_HERE',\n        appBuildGradle\n      );\n    }\n    await regexFileAsync(/\\/\\* UNCOMMENT WHEN DISTRIBUTING/g, '', appBuildGradle);\n    await regexFileAsync(/END UNCOMMENT WHEN DISTRIBUTING \\*\\//g, '', appBuildGradle);\n    await deleteLinesInFileAsync(\n      'WHEN_DISTRIBUTING_REMOVE_FROM_HERE',\n      'WHEN_DISTRIBUTING_REMOVE_TO_HERE',\n      appBuildGradle\n    );\n\n    if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 33) {\n      let settingsGradle = path.join(shellPath, 'settings.gradle');\n      await deleteLinesInFileAsync(\n        'WHEN_DISTRIBUTING_REMOVE_FROM_HERE',\n        'WHEN_DISTRIBUTING_REMOVE_TO_HERE',\n        settingsGradle\n      );\n    } else {\n      // Don't need to compile expoview or ReactAndroid\n      // react-native link looks for a \\n so we need that. See https://github.com/facebook/react-native/blob/master/local-cli/link/android/patches/makeSettingsPatch.js\n      await fs.writeFile(path.join(shellPath, 'settings.gradle'), `include ':app'\\n`);\n    }\n\n    await regexFileAsync(\n      'TEMPLATE_INITIAL_URL',\n      url,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'MainActivity.java'\n      )\n    );\n\n    const runShPath = path.join(shellPath, 'run.sh');\n    if (await fs.pathExists(runShPath)) {\n      await regexFileAsync('host.exp.exponent/', `${javaPackage}/`, runShPath);\n      await regexFileAsync('LauncherActivity', 'MainActivity', runShPath);\n    }\n  }\n\n  // Package\n  await regexFileAsync(\n    `applicationId 'host.exp.exponent'`,\n    `applicationId '${javaPackage}'`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n  await regexFileAsync(\n    `android:name=\"host.exp.exponent\"`,\n    `android:name=\"${javaPackage}\"`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Versions\n  let buildGradleFile = await fs.readFileSync(path.join(shellPath, 'app', 'build.gradle'), 'utf8');\n  let androidVersion = buildGradleFile.match(/versionName '(\\S+)'/)[1];\n  await regexFileAsync(\n    'VERSION_NAME = null',\n    `VERSION_NAME = \"${androidVersion}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n  await deleteLinesInFileAsync(\n    `BEGIN VERSIONS`,\n    `END VERSIONS`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n  await regexFileAsync(\n    '// ADD VERSIONS HERE',\n    `versionCode ${versionCode}\n    versionName '${version}'`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n\n  // Remove Exponent build script, since SDK32 expoview comes precompiled\n  if (parseSdkMajorVersion(sdkVersion) < 32 && !isRunningInUserContext) {\n    await regexFileAsync(\n      `preBuild.dependsOn generateDynamicMacros`,\n      ``,\n      path.join(shellPath, 'expoview', 'build.gradle')\n    );\n  }\n\n  // change javaMaxHeapSize\n  await regexFileAsync(\n    `javaMaxHeapSize \"8g\"`,\n    `javaMaxHeapSize \"6g\"`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n\n  // Push notifications\n  await regexFileAsync(\n    '\"package_name\": \"host.exp.exponent\"',\n    `\"package_name\": \"${javaPackage}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  ); // TODO: actually use the correct file\n\n  // TODO: probably don't need this in both places\n  await regexFileAsync(\n    /host\\.exp\\.exponent\\.permission\\.C2D_MESSAGE/g,\n    `${javaPackage}.permission.C2D_MESSAGE`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n  // Since SDK32 expoview comes precompiled\n  if (parseSdkMajorVersion(sdkVersion) < 32 && !isRunningInUserContext) {\n    await regexFileAsync(\n      /host\\.exp\\.exponent\\.permission\\.C2D_MESSAGE/g,\n      `${javaPackage}.permission.C2D_MESSAGE`,\n      path.join(shellPath, 'expoview', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Set INITIAL_URL, SHELL_APP_SCHEME and SHOW_LOADING_VIEW\n  await regexFileAsync(\n    'INITIAL_URL = null',\n    `INITIAL_URL = \"${url}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n  if (scheme) {\n    await regexFileAsync(\n      'SHELL_APP_SCHEME = null',\n      `SHELL_APP_SCHEME = \"${scheme}\"`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  // Handle 'contain' and 'cover' splashScreen mode by showing only background color and then actual splashScreen image inside AppLoadingView\n  if (shouldShowLoadingView(manifest, sdkVersion)) {\n    await regexFileAsync(\n      'SHOW_LOADING_VIEW_IN_SHELL_APP = false',\n      'SHOW_LOADING_VIEW_IN_SHELL_APP = true',\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n\n    // show only background color if LoadingView will appear\n    await regexFileAsync(\n      /<item>.*<\\/item>/,\n      '',\n      path.join(shellPath, 'app', 'src', 'main', 'res', 'drawable', 'splash_background.xml')\n    );\n  }\n\n  // In SDK32 this field got removed from AppConstants\n  if (parseSdkMajorVersion(sdkVersion) < 32 && isRunningInUserContext) {\n    await regexFileAsync(\n      'IS_DETACHED = false',\n      `IS_DETACHED = true`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n  if (updatesDisabled) {\n    await regexFileAsync(\n      'ARE_REMOTE_UPDATES_ENABLED = true',\n      'ARE_REMOTE_UPDATES_ENABLED = false',\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  // App name\n  await regexFileAsync(\n    '\"app_name\">Expo',\n    `\"app_name\">${xmlWeirdAndroidEscape(name)}`,\n    path.join(shellPath, 'app', 'src', 'main', 'res', 'values', 'strings.xml')\n  );\n\n  // Splash Screen background color\n  await regexFileAsync(\n    '\"splashBackground\">#FFFFFF',\n    `\"splashBackground\">${splashBackgroundColor}`,\n    path.join(shellPath, 'app', 'src', 'main', 'res', 'values', 'colors.xml')\n  );\n\n  // Change stripe schemes and add meta-data\n  const randomID = uuid.v4();\n  const newScheme = `<meta-data android:name=\"standaloneStripeScheme\" android:value=\"${randomID}\" />`;\n  await regexFileAsync(\n    '<!-- ADD HERE STRIPE SCHEME META DATA -->',\n    newScheme,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  const newSchemeSuffix = `expo.modules.payments.stripe.${randomID}\" />`;\n  await regexFileAsync(\n    'expo.modules.payments.stripe\" />',\n    newSchemeSuffix,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Remove exp:// scheme from LauncherActivity\n  await deleteLinesInFileAsync(\n    `START LAUNCHER INTENT FILTERS`,\n    `END LAUNCHER INTENT FILTERS`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Remove LAUNCHER category from HomeActivity\n  await deleteLinesInFileAsync(\n    `START HOME INTENT FILTERS`,\n    `END HOME INTENT FILTERS`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  if (isDetached) {\n    // Add LAUNCHER category to MainActivity\n    await regexFileAsync(\n      '<!-- ADD DETACH INTENT FILTERS HERE -->',\n      `<intent-filter>\n        <action android:name=\"android.intent.action.MAIN\"/>\n\n        <category android:name=\"android.intent.category.LAUNCHER\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  } else {\n    // Add LAUNCHER category to ShellAppActivity\n    await regexFileAsync(\n      '<!-- ADD SHELL INTENT FILTERS HERE -->',\n      `<intent-filter>\n        <action android:name=\"android.intent.action.MAIN\"/>\n\n        <category android:name=\"android.intent.category.LAUNCHER\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Add app-specific intent filters\n  const intentFilters = _.get(manifest, 'android.intentFilters');\n  if (intentFilters) {\n    if (isDetached) {\n      await regexFileAsync(\n        '<!-- ADD DETACH APP SPECIFIC INTENT FILTERS -->',\n        renderIntentFilters(intentFilters).join('\\n'),\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    } else {\n      await regexFileAsync(\n        '<!-- ADD SHELL APP SPECIFIC INTENT FILTERS -->',\n        renderIntentFilters(intentFilters).join('\\n'),\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n  }\n\n  // Add shell app scheme\n  if (scheme) {\n    const searchLine = isDetached\n      ? '<!-- ADD DETACH SCHEME HERE -->'\n      : '<!-- ADD SHELL SCHEME HERE -->';\n    await regexFileAsync(\n      searchLine,\n      `<intent-filter>\n        <data android:scheme=\"${scheme}\"/>\n\n        <action android:name=\"android.intent.action.VIEW\"/>\n\n        <category android:name=\"android.intent.category.DEFAULT\"/>\n        <category android:name=\"android.intent.category.BROWSABLE\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Add permissions\n  if (manifest.android && manifest.android.permissions) {\n    const whitelist = [];\n\n    manifest.android.permissions.forEach(s => {\n      if (s.includes('.')) {\n        whitelist.push(s);\n      } else {\n        // If shorthand form like `WRITE_CONTACTS` is provided, expand it to `android.permission.WRITE_CONTACTS`.\n        whitelist.push(`android.permission.${s}`);\n      }\n    });\n\n    // Permissions we need to remove from the generated manifest\n    const blacklist = [\n      'android.permission.ACCESS_COARSE_LOCATION',\n      'android.permission.ACCESS_FINE_LOCATION',\n      'android.permission.CAMERA',\n      'android.permission.MANAGE_DOCUMENTS',\n      'android.permission.READ_CONTACTS',\n      'android.permission.WRITE_CONTACTS',\n      'android.permission.READ_CALENDAR',\n      'android.permission.WRITE_CALENDAR',\n      'android.permission.READ_EXTERNAL_STORAGE',\n      'android.permission.READ_INTERNAL_STORAGE',\n      'android.permission.READ_PHONE_STATE',\n      'android.permission.RECORD_AUDIO',\n      'android.permission.USE_FINGERPRINT',\n      'android.permission.VIBRATE',\n      'android.permission.WRITE_EXTERNAL_STORAGE',\n      'android.permission.READ_SMS',\n      'com.anddoes.launcher.permission.UPDATE_COUNT',\n      'com.android.launcher.permission.INSTALL_SHORTCUT',\n      'com.google.android.gms.permission.ACTIVITY_RECOGNITION',\n      'com.google.android.providers.gsf.permission.READ_GSERVICES',\n      'com.htc.launcher.permission.READ_SETTINGS',\n      'com.htc.launcher.permission.UPDATE_SHORTCUT',\n      'com.majeur.launcher.permission.UPDATE_BADGE',\n      'com.sec.android.provider.badge.permission.READ',\n      'com.sec.android.provider.badge.permission.WRITE',\n      'com.sonyericsson.home.permission.BROADCAST_BADGE',\n    ].filter(p => !whitelist.includes(p));\n\n    await deleteLinesInFileAsync(\n      `BEGIN OPTIONAL PERMISSIONS`,\n      `END OPTIONAL PERMISSIONS`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n\n    await regexFileAsync(\n      '<!-- ADD PERMISSIONS HERE -->',\n      `\n      ${whitelist.map(p => `<uses-permission android:name=\"${p}\" />`).join('\\n')}\n      ${blacklist\n        .map(p => `<uses-permission android:name=\"${p}\" tools:node=\"remove\" />`)\n        .join('\\n')}\n      `,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // OAuth redirect scheme\n  await regexFileAsync(\n    '<data android:scheme=\"host.exp.exponent\" android:path=\"oauthredirect\"/>',\n    `<data android:scheme=\"${javaPackage}\" android:path=\"oauthredirect\"/>`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Embed manifest and bundle\n  if (isFullManifest) {\n    await fs.writeFileSync(\n      path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'),\n      JSON.stringify(manifest)\n    );\n    await saveUrlToPathAsync(\n      bundleUrl,\n      path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle')\n    );\n\n    await regexFileAsync(\n      '// START EMBEDDED RESPONSES',\n      `\n      // START EMBEDDED RESPONSES\n      embeddedResponses.add(new Constants.EmbeddedResponse(\"${fullManifestUrl}\", \"assets://shell-app-manifest.json\", \"application/json\"));\n      embeddedResponses.add(new Constants.EmbeddedResponse(\"${bundleUrl}\", \"assets://shell-app.bundle\", \"application/javascript\"));`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  await regexFileAsync(\n    'RELEASE_CHANNEL = \"default\"',\n    `RELEASE_CHANNEL = \"${releaseChannel}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  // Icons\n  createAndWriteIconsToPathAsync(\n    context,\n    path.join(shellPath, 'app', 'src', 'main', 'res'),\n    isRunningInUserContext\n  );\n\n  // Splash Background\n  if (backgroundImages && backgroundImages.length > 0) {\n    // Delete the placeholder images\n    (await globby(['**/shell_launch_background_image.png'], {\n      cwd: path.join(shellPath, 'app', 'src', 'main', 'res'),\n      absolute: true,\n    })).forEach(filePath => {\n      fs.removeSync(filePath);\n    });\n\n    await Promise.all(\n      backgroundImages.map(async image => {\n        if (isRunningInUserContext) {\n          // local file so just copy it\n          await fs.copy(path.resolve(context.data.projectPath, image.url), image.path);\n        } else {\n          await saveUrlToPathAsync(image.url, image.path);\n        }\n      })\n    );\n  }\n\n  await AssetBundle.bundleAsync(\n    context,\n    manifest.bundledAssets,\n    `${shellPath}/app/src/main/assets`\n  );\n\n  let certificateHash = '';\n  let googleAndroidApiKey = '';\n  let privateConfig = context.data.privateConfig;\n  if (privateConfig) {\n    let branch = privateConfig.branch;\n    let fabric = privateConfig.fabric;\n    let googleMaps = privateConfig.googleMaps;\n    let googleSignIn = privateConfig.googleSignIn;\n\n    // Branch\n    if (branch) {\n      await regexFileAsync(\n        '<!-- ADD BRANCH CONFIG HERE -->',\n        `<meta-data\n      android:name=\"io.branch.sdk.BranchKey\"\n      android:value=\"${branch.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Fabric\n    if (fabric) {\n      await fs.remove(path.join(shellPath, 'app', 'fabric.properties'));\n      await fs.writeFileSync(\n        path.join(shellPath, 'app', 'fabric.properties'),\n        `apiSecret=${fabric.buildSecret}\\n`\n      );\n\n      await deleteLinesInFileAsync(\n        `BEGIN FABRIC CONFIG`,\n        `END FABRIC CONFIG`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n      await regexFileAsync(\n        '<!-- ADD FABRIC CONFIG HERE -->',\n        `<meta-data\n      android:name=\"io.fabric.ApiKey\"\n      android:value=\"${fabric.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Google Maps\n    if (googleMaps) {\n      await deleteLinesInFileAsync(\n        `BEGIN GOOGLE MAPS CONFIG`,\n        `END GOOGLE MAPS CONFIG`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n      await regexFileAsync(\n        '<!-- ADD GOOGLE MAPS CONFIG HERE -->',\n        `<meta-data\n      android:name=\"com.google.android.geo.API_KEY\"\n      android:value=\"${googleMaps.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Google Login\n    if (googleSignIn) {\n      certificateHash = googleSignIn.certificateHash;\n      googleAndroidApiKey = googleSignIn.apiKey;\n    }\n  }\n\n  if (manifest.android && manifest.android.googleServicesFile) {\n    // google-services.json\n    // Used for configuring FCM\n    let googleServicesFileContents = manifest.android.googleServicesFile;\n    if (isRunningInUserContext) {\n      googleServicesFileContents = await fs.readFile(\n        path.resolve(shellPath, '..', manifest.android.googleServicesFile),\n        'utf8'\n      );\n    }\n    await fs.writeFile(\n      path.join(shellPath, 'app', 'google-services.json'),\n      googleServicesFileContents\n    );\n  } else {\n    await regexFileAsync(\n      'FCM_ENABLED = true',\n      'FCM_ENABLED = false',\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  // Google sign in\n  await regexFileAsync(\n    /\"current_key\": \"(.*?)\"/,\n    `\"current_key\": \"${googleAndroidApiKey}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  );\n  await regexFileAsync(\n    /\"certificate_hash\": \"(.*?)\"/,\n    `\"certificate_hash\": \"${certificateHash}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  );\n}\n\nasync function buildShellAppAsync(\n  context: StandaloneContext,\n  sdkVersion: string,\n  buildType: string,\n  buildMode: 'debug' | 'release'\n) {\n  let shellPath = shellPathForContext(context);\n  const ext = buildType === 'app-bundle' ? 'aab' : 'apk';\n\n  const isRelease = !!context.build.android && buildMode === 'release';\n  // concat on those strings is not very readable, but only alternative here is huge if statement\n  const debugOrRelease = isRelease ? 'Release' : 'Debug';\n  const devOrProd = isRelease ? 'Prod' : 'Dev';\n  const debugOrReleaseL = isRelease ? 'release' : 'debug';\n  const devOrProdL = isRelease ? 'prod' : 'dev';\n\n  const shellFile = `shell.${ext}`;\n  const shellUnalignedFile = `shell-unaligned.${ext}`;\n\n  const outputDirPath = path.join(\n    shellPath,\n    'app',\n    'build',\n    'outputs',\n    buildType === 'app-bundle' ? 'bundle' : 'apk'\n  );\n\n  let gradleBuildCommand;\n  let outputPath;\n  if (buildType === 'app-bundle') {\n    if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 33) {\n      gradleBuildCommand = `bundle${debugOrRelease}`;\n      outputPath = path.join(outputDirPath, debugOrReleaseL, `app.aab`);\n    } else if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 32) {\n      gradleBuildCommand = `bundle${devOrProd}Kernel${debugOrRelease}`;\n      outputPath = path.join(outputDirPath, `${devOrProdL}Kernel${debugOrRelease}`, `app.aab`);\n    } else {\n      // gradleBuildCommand = `bundle${devOrProd}MinSdk${devOrProd}Kernel${debugOrRelease}`;\n      // outputPath = path.join(\n      //   outputDirPath,\n      //   `${devOrProdL}MinSdk${devOrProd}Kernel`,\n      //   debugOrReleaseL,\n      //   `app.aab`\n      // );\n\n      // TODO (wkozyra95) debug building app bundles for sdk 31 and older\n      // for now it has low priority\n      throw new Error('Android App Bundles are not supported for sdk31 and lower');\n    }\n  } else {\n    if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 33) {\n      gradleBuildCommand = `assemble${debugOrRelease}`;\n      outputPath = path.join(outputDirPath, debugOrReleaseL, `app-${debugOrReleaseL}.apk`);\n    } else if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 32) {\n      gradleBuildCommand = `assemble${devOrProd}Kernel${debugOrRelease}`;\n      outputPath = path.join(\n        outputDirPath,\n        `${devOrProdL}Kernel`,\n        debugOrReleaseL,\n        `app-${devOrProdL}Kernel-${debugOrReleaseL}.apk`\n      );\n    } else {\n      gradleBuildCommand = `assemble${devOrProd}MinSdk${devOrProd}Kernel${debugOrRelease}`;\n      outputPath = path.join(\n        outputDirPath,\n        `${devOrProdL}MinSdk${devOrProd}Kernel`,\n        debugOrReleaseL,\n        `app-${devOrProdL}MinSdk-${devOrProdL}Kernel-${debugOrReleaseL}-unsigned.apk`\n      );\n    }\n  }\n\n  await ExponentTools.removeIfExists(shellUnalignedFile);\n  await ExponentTools.removeIfExists(shellFile);\n  await ExponentTools.removeIfExists(outputPath);\n  if (isRelease) {\n    const androidBuildConfiguration = context.build.android;\n\n    const gradleArgs = [gradleBuildCommand];\n    if (process.env.GRADLE_DAEMON_DISABLED) {\n      gradleArgs.unshift('--no-daemon');\n    }\n    await spawnAsyncThrowError(`./gradlew`, gradleArgs, {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'running gradle' },\n      cwd: shellPath,\n      env: {\n        ...process.env,\n        ANDROID_KEY_ALIAS: androidBuildConfiguration.keyAlias,\n        ANDROID_KEY_PASSWORD: androidBuildConfiguration.keyPassword,\n        ANDROID_KEYSTORE_PATH: androidBuildConfiguration.keystore,\n        ANDROID_KEYSTORE_PASSWORD: androidBuildConfiguration.keystorePassword,\n      },\n    });\n\n    if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 32) {\n      await fs.copy(outputPath, shellFile);\n      // -c means \"only verify\"\n      await spawnAsync(`zipalign`, ['-c', '-v', '4', shellFile], {\n        pipeToLogger: true,\n        loggerFields: { buildPhase: 'verifying apk alignment' },\n      });\n    } else {\n      await fs.copy(outputPath, shellUnalignedFile);\n      await spawnAsync(\n        `jarsigner`,\n        [\n          '-verbose',\n          '-sigalg',\n          'SHA1withRSA',\n          '-digestalg',\n          'SHA1',\n          '-storepass',\n          androidBuildConfiguration.keystorePassword,\n          '-keypass',\n          androidBuildConfiguration.keyPassword,\n          '-keystore',\n          androidBuildConfiguration.keystore,\n          shellUnalignedFile,\n          androidBuildConfiguration.keyAlias,\n        ],\n        {\n          pipeToLogger: true,\n          loggerFields: { buildPhase: 'signing created apk' },\n        }\n      );\n      await spawnAsync(`zipalign`, ['-v', '4', shellUnalignedFile, shellFile], {\n        pipeToLogger: true,\n        loggerFields: { buildPhase: 'verifying apk alignment' },\n      });\n      await ExponentTools.removeIfExists(shellUnalignedFile);\n    }\n    await spawnAsync(\n      `jarsigner`,\n      ['-verify', '-verbose', '-certs', '-keystore', androidBuildConfiguration.keystore, shellFile],\n      {\n        pipeToLogger: true,\n        loggerFields: { buildPhase: 'verifying apk' },\n      }\n    );\n    await fs.copy(shellFile, androidBuildConfiguration.outputFile || `/tmp/shell-signed.${ext}`);\n    await ExponentTools.removeIfExists(shellFile);\n  } else {\n    await spawnAsyncThrowError(`./gradlew`, [gradleBuildCommand], {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'running gradle' },\n      cwd: shellPath,\n    });\n    await fs.copy(\n      outputPath,\n      _.get(context, 'build.android.outputFile') || `/tmp/shell-debug.${ext}`\n    );\n    await ExponentTools.removeIfExists(outputPath);\n  }\n}\n\nexport function addDetachedConfigToExp(exp: Object, context: StandaloneContext): Object {\n  if (context.type !== 'user') {\n    console.warn(`Tried to modify exp for a non-user StandaloneContext, ignoring`);\n    return exp;\n  }\n  let shellPath = shellPathForContext(context);\n  let assetsDirectory = path.join(shellPath, 'app', 'src', 'main', 'assets');\n  exp.android.publishBundlePath = path.relative(\n    context.data.projectPath,\n    path.join(assetsDirectory, 'shell-app.bundle')\n  );\n  exp.android.publishManifestPath = path.relative(\n    context.data.projectPath,\n    path.join(assetsDirectory, 'shell-app-manifest.json')\n  );\n  return exp;\n}\n\n/**\n\nSome files in `android` directory have the following patterns of code:\n\n```\n// WHEN_PREPARING_SHELL_REMOVE_FROM_HERE\n\n// BEGIN_SDK_30\nsome SDK 30-specific code\n// END_SDK_30\n\n// BEGIN_SDK_29\nsome SDK 29-specific code\n// END_SDK_29\n\n...\n\n// WHEN_PREPARING_SHELL_REMOVE_TO_HERE\n```\n\nThe following function replaces all `BEGIN_SDK_XX` with `REMOVE_TO_HERE`\nand all `END_SDK_XX` with `REMOVE_FROM_HERE`, so after the change the code above would read:\n\n```\n// WHEN_PREPARING_SHELL_REMOVE_FROM_HERE\n\n// WHEN_PREPARING_SHELL_REMOVE_TO_HERE       <--- changed\nsome SDK 30-specific code\n// WHEN_PREPARING_SHELL_REMOVE_FROM_HERE     <--- changed\n\n// BEGIN_SDK_29\nsome SDK 29-specific code\n// END_SDK_29\n\n...\n\n// WHEN_PREPARING_SHELL_REMOVE_TO_HERE\n```\n\nThis allows us to use `deleteLinesInFileAsync` function to remove obsolete SDKs code easily.\n\n */\nconst removeInvalidSdkLinesWhenPreparingShell = async (majorSdkVersion, filePath) => {\n  await regexFileAsync(\n    new RegExp(`BEGIN_SDK_${majorSdkVersion}`, 'g'),\n    `WHEN_PREPARING_SHELL_REMOVE_TO_HERE`,\n    filePath\n  );\n  await regexFileAsync(\n    new RegExp(`END_SDK_${majorSdkVersion}`, 'g'),\n    `WHEN_PREPARING_SHELL_REMOVE_FROM_HERE`,\n    filePath\n  );\n  await deleteLinesInFileAsync(\n    /WHEN_PREPARING_SHELL_REMOVE_FROM_HERE/g,\n    'WHEN_PREPARING_SHELL_REMOVE_TO_HERE',\n    filePath\n  );\n};\n\nasync function removeObsoleteSdks(shellPath: string, requiredSdkVersion: string) {\n  const filePathsToTransform = {\n    // Remove obsolete `expoview-abiXX_X_X` dependencies\n    appBuildGradle: path.join(shellPath, 'app/build.gradle'),\n    // Remove obsolete `host.exp.exponent:reactandroid:XX.X.X` dependencies from expoview\n    expoviewBuildGradle: path.join(shellPath, 'expoview/build.gradle'),\n    // Remove obsolete includeUnimodulesProjects\n    settingsBuildGradle: path.join(shellPath, 'settings.gradle'),\n    // Remove no-longer-valid interfaces from MultipleVersionReactNativeActivity\n    multipleVersionReactNativeActivity: path.join(\n      shellPath,\n      'expoview/src/main/java/host/exp/exponent/experience/MultipleVersionReactNativeActivity.java'\n    ),\n    // Remove invalid ABI versions from Constants\n    constants: path.join(shellPath, 'expoview/src/main/java/host/exp/exponent/Constants.java'),\n    // Remove non-existent DevSettingsActivities\n    appAndroidManifest: path.join(shellPath, 'app/src/main/AndroidManifest.xml'),\n  };\n\n  const majorSdkVersion = parseSdkMajorVersion(requiredSdkVersion);\n\n  // The single SDK change will happen when transitioning from SDK 30 to 31.\n  // Since SDK 31 there will be no versioned ABIs in shell applications, only unversioned one.\n  // And as such, we will treat the unversioned ABI as the SDK one by assigning TEMPORARY_ABI_VERSION.\n  const effectiveSdkVersion = majorSdkVersion > 30 ? 'UNVERSIONED' : `${majorSdkVersion}`;\n\n  if (effectiveSdkVersion === 'UNVERSIONED') {\n    await regexFileAsync(\n      'TEMPORARY_ABI_VERSION = null;',\n      `TEMPORARY_ABI_VERSION = \"${requiredSdkVersion}\";`,\n      filePathsToTransform.constants\n    );\n  }\n\n  await Promise.all(\n    Object.values(filePathsToTransform).map(filePath =>\n      removeInvalidSdkLinesWhenPreparingShell(effectiveSdkVersion, filePath)\n    )\n  );\n}\n\nasync function prepareEnabledModules(\n  shellPath: string,\n  modules?: Array<{ name: string, version: string, dirname: string }>\n) {\n  const enabledModulesDir = path.join(shellPath, 'enabled-modules');\n  const packagesDir = path.join(shellPath, '..', 'packages');\n  await fs.remove(enabledModulesDir);\n  if (!modules) {\n    await fs.ensureSymlink(packagesDir, enabledModulesDir);\n  } else {\n    await fs.mkdirp(enabledModulesDir);\n    await Promise.all(\n      modules.map(mod =>\n        fs.ensureSymlink(\n          path.join(packagesDir, mod.dirname),\n          path.join(enabledModulesDir, mod.dirname)\n        )\n      )\n    );\n  }\n}\n"],"sourceRoot":"/@expo/xdl@55.0.14/src"}