{"version":3,"sources":["Watchman.js"],"names":["WAIT_FOR_WATCHMAN_VERSION_MS","isPlatformSupported","process","platform","async","addToPathAsync","await","Binaries","unblockAndGetVersionAsync","projectRoot","let","result","_unblockAndVersionAsync","watchmanVersion","JSON","parse","_","trim","stdout","version","e","cancelObject","isDoneWithVersionCheck","Promise","race","_unblockAsync","_versionAsync","isUnblock","delayAsync","Error","Analytics","logEvent","env","TMPDIR","USER","rimraf","sync","path","join","spawnAsync"],"mappings":"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","file":"../Watchman.js","sourcesContent":["/**\n * @flow\n */\n\nimport _ from 'lodash';\nimport spawnAsync from '@expo/spawn-async';\nimport delayAsync from 'delay-async';\nimport rimraf from 'rimraf';\nimport path from 'path';\n\nimport * as Analytics from './Analytics';\nimport * as Binaries from './Binaries';\n\nconst WAIT_FOR_WATCHMAN_VERSION_MS = 3000;\n\nexport function isPlatformSupported() {\n  return process.platform === 'darwin';\n}\n\nexport async function addToPathAsync() {\n  if (!isPlatformSupported()) {\n    return;\n  }\n\n  await Binaries.addToPathAsync('watchman');\n}\n\nexport async function unblockAndGetVersionAsync(projectRoot?: string) {\n  if (!isPlatformSupported()) {\n    return null;\n  }\n\n  try {\n    // `watchman version` returns:\n    // {\n    //  \"version\": \"4.7.0\"\n    // }\n    let result = await _unblockAndVersionAsync(projectRoot);\n    let watchmanVersion = JSON.parse(_.trim(result.stdout)).version;\n    return watchmanVersion;\n  } catch (e) {\n    // TODO: Maybe check to make sure this is ENOENT (which means watchman isn't installed)\n    // We might want to report other errors\n    return null;\n  }\n}\n\nasync function _unblockAndVersionAsync(projectRoot?: string) {\n  let cancelObject = {\n    isDoneWithVersionCheck: false,\n  };\n\n  let result = await Promise.race([\n    _unblockAsync(projectRoot, cancelObject),\n    _versionAsync(cancelObject),\n  ]);\n\n  if (result.isUnblock) {\n    result = await Promise.race([\n      _versionAsync(),\n      async () => {\n        await delayAsync(WAIT_FOR_WATCHMAN_VERSION_MS);\n        throw new Error(`\\`watchman version\\` failed even after \\`launchctl unload\\``);\n      },\n    ]);\n    Analytics.logEvent('version after launchctl unload');\n    return result;\n  } else {\n    return result;\n  }\n}\n\nasync function _unblockAsync(projectRoot?: string, cancelObject) {\n  await delayAsync(WAIT_FOR_WATCHMAN_VERSION_MS);\n\n  if (!cancelObject.isDoneWithVersionCheck) {\n    Analytics.logEvent('launchctl unload');\n    if (process.env.TMPDIR && process.env.USER) {\n      // XDL's copy of watchman:\n      rimraf.sync(path.join(process.env.TMPDIR, `${process.env.USER}-state`));\n      // homebrew's watchman:\n      rimraf.sync(`/usr/local/var/run/watchman/${process.env.USER}-state`);\n    }\n    if (process.platform === 'darwin') {\n      await spawnAsync('launchctl', [\n        'unload',\n        '-F',\n        '~/Library/LaunchAgents/com.github.facebook.watchman.plist',\n      ]);\n    }\n    if (projectRoot) {\n      await spawnAsync('watchman', ['watch-del', projectRoot]);\n      await spawnAsync('watchman', ['watch-project', projectRoot]);\n    }\n  }\n\n  return {\n    isUnblock: true,\n  };\n}\n\nasync function _versionAsync(cancelObject) {\n  let result = await spawnAsync('watchman', ['version']);\n\n  if (cancelObject) {\n    cancelObject.isDoneWithVersionCheck = true;\n  }\n\n  return result;\n}\n"],"sourceRoot":"/@expo/xdl@55.0.14/src"}