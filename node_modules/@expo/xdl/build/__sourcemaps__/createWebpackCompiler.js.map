{"version":3,"sources":["createWebpackCompiler.js"],"names":["CONSOLE_TAG","SHOULD_CLEAR_CONSOLE","shouldWebpackClearLogs","log","projectRoot","message","showInDevtools","ProjectUtils","logInfo","console","logWarning","logError","printInstructions","appName","urls","let","chalk","bold","lanUrlForTerminal","localUrlForTerminal","printPreviewNotice","underline","yellow","createWebpackCompiler","config","nonInteractive","useYarn","webpack","onFinished","compiler","err","process","exit","hooks","invalid","tap","clearConsole","isFirstCompile","done","async","stats","statsData","toJson","all","warnings","errors","messages","formatWebpackMessages","isSuccessful","length","cyan","logEnvironmentInfo","red","join"],"mappings":"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","file":"../createWebpackCompiler.js","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport chalk from 'chalk';\nimport clearConsole from 'react-dev-utils/clearConsole';\nimport formatWebpackMessages from 'react-dev-utils/formatWebpackMessages';\n\nimport * as ProjectUtils from './project/ProjectUtils';\nimport { logEnvironmentInfo, shouldWebpackClearLogs } from './Web';\n\nconst CONSOLE_TAG = 'expo';\n\nconst SHOULD_CLEAR_CONSOLE = shouldWebpackClearLogs();\n\nfunction log(projectRoot, message, showInDevtools = true) {\n  if (showInDevtools) {\n    ProjectUtils.logInfo(projectRoot, CONSOLE_TAG, message);\n  } else {\n    console.log(message);\n  }\n}\n\nfunction logWarning(projectRoot, message) {\n  ProjectUtils.logWarning(projectRoot, CONSOLE_TAG, message);\n}\n\nfunction logError(projectRoot, message) {\n  ProjectUtils.logError(projectRoot, CONSOLE_TAG, message);\n}\n\nfunction printInstructions(projectRoot, appName, urls, showInDevtools) {\n  let message = `You can now view ${chalk.bold(appName)} in the browser.\\n\\n`;\n  if (urls.lanUrlForTerminal) {\n    message += `  ${chalk.bold('Local:')}            ${urls.localUrlForTerminal}\\n`;\n    message += `  ${chalk.bold('On Your Network:')}  ${urls.lanUrlForTerminal}\\n`;\n  } else {\n    message += `  ${urls.localUrlForTerminal}\\n`;\n  }\n\n  message += `\\nNote that the development build is not optimized. To create a production build, use ${chalk.bold(\n    `expo build:web`\n  )}.`;\n  log(projectRoot, message, showInDevtools);\n}\n\nexport function printPreviewNotice(projectRoot, showInDevtools) {\n  log(\n    projectRoot,\n    chalk.underline.yellow(\n      '\\nWeb support in Expo is experimental and subject to breaking changes. Do not use this in production yet.'\n    ),\n    showInDevtools\n  );\n}\n\nexport default function createWebpackCompiler({\n  projectRoot,\n  appName,\n  config,\n  urls,\n  nonInteractive,\n  useYarn,\n  webpack,\n  onFinished,\n}) {\n  // \"Compiler\" is a low-level interface to Webpack.\n  // It lets us listen to some events and provide our own custom messages.\n  let compiler;\n  try {\n    compiler = webpack(config);\n  } catch (err) {\n    logError(projectRoot, '\\nFailed to compile\\n' + err.message || err);\n    process.exit(1);\n  }\n\n  // \"invalid\" event fires when you have changed a file, and Webpack is\n  // recompiling a bundle. WebpackDevServer takes care to pause serving the\n  // bundle, so if you refresh, it'll wait instead of serving the old one.\n  // \"invalid\" is short for \"bundle invalidated\", it doesn't imply any errors.\n  compiler.hooks.invalid.tap('invalid', () => {\n    if (SHOULD_CLEAR_CONSOLE && !nonInteractive) {\n      clearConsole();\n    }\n    log(projectRoot, '\\nCompiling...');\n  });\n\n  let isFirstCompile = true;\n\n  // \"done\" event fires when Webpack has finished recompiling the bundle.\n  // Whether or not you have warnings or errors, you will get this event.\n  compiler.hooks.done.tap('done', async stats => {\n    if (SHOULD_CLEAR_CONSOLE && !nonInteractive) {\n      clearConsole();\n    }\n\n    // We have switched off the default Webpack output in WebpackDevServer\n    // options so we are going to \"massage\" the warnings and errors and present\n    // them in a readable focused way.\n    // We only construct the warnings and errors for speed:\n    // https://github.com/facebook/create-react-app/issues/4492#issuecomment-421959548\n    const statsData = stats.toJson({\n      all: false,\n      warnings: true,\n      errors: true,\n    });\n\n    const messages = formatWebpackMessages(statsData);\n\n    const isSuccessful = !messages.errors.length && !messages.warnings.length;\n    if (isSuccessful) {\n      log(projectRoot, chalk.bold.cyan(`Compiled successfully!`));\n      printPreviewNotice(projectRoot, isFirstCompile);\n      logEnvironmentInfo(projectRoot, CONSOLE_TAG, config);\n    }\n\n    if (isSuccessful && (!nonInteractive || isFirstCompile)) {\n      printInstructions(projectRoot, appName, urls, isFirstCompile);\n    }\n\n    if (!isFirstCompile) {\n      log(\n        projectRoot,\n        `Press ${chalk.bold('?')} to show a list of all available commands.\\n`,\n        false\n      );\n    }\n\n    onFinished();\n    isFirstCompile = false;\n\n    // If errors exist, only show errors.\n    if (messages.errors.length) {\n      // Only keep the first error. Others are often indicative\n      // of the same problem, but confuse the reader with noise.\n      if (messages.errors.length > 1) {\n        messages.errors.length = 1;\n      }\n      logError(projectRoot, chalk.red('Failed to compile.\\n') + messages.errors.join('\\n\\n'));\n      return;\n    }\n\n    // Show warnings if no errors were found.\n    if (messages.warnings.length) {\n      logWarning(\n        projectRoot,\n        chalk.yellow('Compiled with warnings.\\n') + messages.warnings.join('\\n\\n')\n      );\n    }\n  });\n\n  return compiler;\n}\n"],"sourceRoot":"/@expo/xdl@55.0.14/src"}