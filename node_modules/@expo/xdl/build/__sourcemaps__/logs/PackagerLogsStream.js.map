{"version":3,"sources":["logs/PackagerLogsStream.ts"],"names":["PackagerLogsStream","constructor","projectRoot","getCurrentOpenProjectId","updateLogs","onStartBuildBundle","onProgressBuildBundle","onFinishBuildBundle","getSnippetForError","chunk","msg","type","_metroEventType","_handleNewBundleTransformStarted","_bundleBuildChunkID","_handleUpdateBundleTransformProgress","func","_updateLogs","logs","_logsToAdd","length","nextLogs","concat","match","replace","_projectRoot","_getCurrentOpenProjectId","_onStartBuildBundle","_onProgressBuildBundle","_onFinishBuildBundle","_getSnippetForError","_attachLoggerStream","projectId","ProjectUtils","attachLoggerStream","stream","write","tag","_maybeParseMsgJSON","_cleanUpNodeErrors","_handleMetroEvent","_enqueueAppendLogChunk","originalChunk","includes","getenv","boolish","_handleBundleTransformEvent","port","code","error","_formatModuleResolutionError","_formatBundlingError","level","Logger","ERROR","reason","_formatWorkerChunk","JSON","stringify","id","_bundleBuildStart","Date","progressChunk","percentProgress","bundleComplete","bundleBuildEnd","duration","getTime","Math","floor","transformedFileCount","totalFileCount","forEach","log","message","exec","originModulePath","moduleName","relativePath","path","relative","DOCS_PAGE_URL","NODE_STDLIB_MODULES","Array","isArray","errors","description","chalk","red","snippet","origin","lines","split","splice","map","line","join","shouldHide","push","_enqueueFlushLogsToAdd","parsedMsg","parse","e"],"mappings":"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","sourcesContent":["import path from 'path';\n\nimport chalk from 'chalk';\nimport getenv from 'getenv';\nimport idx from 'idx';\nimport { JSONObject } from '@expo/json-file';\n\nimport * as ProjectUtils from '../project/ProjectUtils';\nimport Logger from '../Logger';\n\ntype BuildEventType =\n  | 'METRO_INITIALIZE_STARTED'\n  | 'BUILD_STARTED'\n  | 'BUILD_PROGRESS'\n  | 'BUILD_FAILED'\n  | 'BUILD_DONE';\ntype MetroLogRecord = {\n  tag: 'metro';\n  id: string;\n  shouldHide: boolean;\n  msg: ReportableEvent | string;\n  level: number;\n  _metroEventType?: BuildEventType;\n};\ntype ExpoLogRecord = {\n  tag: 'expo';\n  id: string;\n  shouldHide: boolean;\n  msg: any;\n  level: number;\n};\ntype DeviceLogRecord = {\n  tag: 'device';\n  id: string;\n  shouldHide: boolean;\n  msg: any;\n  level: number;\n};\ntype LogRecord = MetroLogRecord | ExpoLogRecord | DeviceLogRecord;\n\ntype LogUpdater = (logState: Array<LogRecord>) => Array<LogRecord>;\n\ntype ErrorObject = {\n  name?: string;\n  stack?: string;\n  message?: string;\n  code?: string;\n} & JSONObject;\n\ntype MetroError =\n  | {\n      originModulePath: string;\n      message: string;\n      errors: Array<Object>;\n    } & ErrorObject\n  | {\n      type: 'TransformError';\n      snippet: string;\n      lineNumber: number;\n      column: number;\n      filename: string;\n      errors: Array<Object>;\n    } & ErrorObject\n  | ErrorObject;\n\n// Metro reporter types\n// https://github.com/facebook/metro/blob/2a327fb19dd62169ab3ae9069011d8a599cfcf3e/packages/metro/src/lib/reporting.js\ntype GlobalCacheDisabledReason = 'too_many_errors' | 'too_many_misses';\ntype BundleDetails = {\n  entryFile: string;\n  platform: string;\n  dev: boolean;\n  minify: boolean;\n  bundleType: string;\n};\ntype ReportableEvent =\n  | {\n      port: number | undefined;\n      projectRoots: ReadonlyArray<string>;\n      type: 'initialize_started';\n    }\n  | {\n      type: 'initialize_done';\n    }\n  | {\n      type: 'initialize_failed';\n      port: number;\n      error: MetroError;\n    }\n  | {\n      buildID: string;\n      type: 'bundle_build_done';\n    }\n  | {\n      buildID: string;\n      type: 'bundle_build_failed';\n    }\n  | {\n      buildID: string;\n      bundleDetails: BundleDetails;\n      type: 'bundle_build_started';\n    }\n  | {\n      error: MetroError;\n      type: 'bundling_error';\n    }\n  | {\n      type: 'dep_graph_loading';\n    }\n  | {\n      type: 'dep_graph_loaded';\n    }\n  | {\n      buildID: string;\n      type: 'bundle_transform_progressed';\n      transformedFileCount: number;\n      totalFileCount: number;\n    }\n  | {\n      type: 'global_cache_error';\n      error: MetroError;\n    }\n  | {\n      type: 'global_cache_disabled';\n      reason: GlobalCacheDisabledReason;\n    }\n  | {\n      type: 'transform_cache_reset';\n    }\n  | {\n      type: 'worker_stdout_chunk';\n      chunk: string;\n    }\n  | {\n      type: 'worker_stderr_chunk';\n      chunk: string;\n    }\n  | {\n      type: 'hmr_client_error';\n      error: MetroError;\n    };\n\ntype StartBuildBundleCallback = (chunk: LogRecord) => void;\ntype ProgressBuildBundleCallback = (progress: number, start: Date | null, chunk: any) => void;\ntype FinishBuildBundleCallback = (\n  error: string | null,\n  start: Date | null,\n  end: Date | null,\n  chunk: MetroLogRecord\n) => void;\n\nexport default class PackagerLogsStream {\n  _projectRoot: string;\n  _getCurrentOpenProjectId: () => any;\n  _updateLogs: (updater: LogUpdater) => void;\n  _logsToAdd: Array<LogRecord> = [];\n  _bundleBuildChunkID: string | null = null;\n  _onStartBuildBundle?: StartBuildBundleCallback;\n  _onProgressBuildBundle?: ProgressBuildBundleCallback;\n  _onFinishBuildBundle?: FinishBuildBundleCallback;\n  _bundleBuildStart: Date | null = null;\n  _getSnippetForError?: (error: MetroError) => string | null;\n\n  constructor({\n    projectRoot,\n    getCurrentOpenProjectId,\n    updateLogs,\n    onStartBuildBundle,\n    onProgressBuildBundle,\n    onFinishBuildBundle,\n    getSnippetForError,\n  }: {\n    projectRoot: string;\n    getCurrentOpenProjectId?: () => any;\n    updateLogs: (updater: LogUpdater) => void;\n    onStartBuildBundle?: StartBuildBundleCallback;\n    onProgressBuildBundle?: ProgressBuildBundleCallback;\n    onFinishBuildBundle?: FinishBuildBundleCallback;\n    getSnippetForError?: (error: MetroError) => string | null;\n  }) {\n    this._projectRoot = projectRoot;\n    this._getCurrentOpenProjectId = getCurrentOpenProjectId || (() => 1);\n    this._updateLogs = updateLogs;\n\n    // Optional properties in case the consumer wants to handle updates on\n    // its own, eg: for a progress bar\n    this._onStartBuildBundle = onStartBuildBundle;\n    this._onProgressBuildBundle = onProgressBuildBundle;\n    this._onFinishBuildBundle = onFinishBuildBundle;\n\n    // Optional function for creating custom code frame snippet\n    // (e.g. with terminal colors) from a syntax error.\n    this._getSnippetForError = getSnippetForError;\n\n    this._attachLoggerStream();\n  }\n\n  _attachLoggerStream() {\n    let projectId = this._getCurrentOpenProjectId();\n\n    ProjectUtils.attachLoggerStream(this._projectRoot, {\n      stream: {\n        write: chunk => {\n          if (chunk.tag !== 'metro' && chunk.tag !== 'expo') {\n            return;\n          } else if (this._getCurrentOpenProjectId() !== projectId) {\n            // TODO: We should be confident that we are properly unsubscribing\n            // from the stream rather than doing a defensive check like this.\n            return;\n          }\n\n          chunk = this._maybeParseMsgJSON(chunk);\n          chunk = this._cleanUpNodeErrors(chunk);\n          if (chunk.tag === 'metro') {\n            this._handleMetroEvent(chunk);\n          } else if (\n            typeof chunk.msg === 'string' &&\n            chunk.msg.match(/\\w/) &&\n            chunk.msg[0] !== '{'\n          ) {\n            this._enqueueAppendLogChunk(chunk);\n          }\n        },\n      },\n      type: 'raw',\n    });\n  }\n\n  _handleMetroEvent(originalChunk: MetroLogRecord) {\n    const chunk = { ...originalChunk };\n    let { msg } = chunk;\n\n    if (typeof msg === 'string') {\n      if ((msg as string).includes('HTTP/1.1') && !getenv.boolish('EXPO_DEBUG', false)) {\n        // Do nothing with this message - we want to filter out network requests logged by Metro.\n      } else {\n        // If Metro crashes for some reason, it may log an error message as a plain string to stderr.\n        this._enqueueAppendLogChunk(chunk);\n      }\n      return;\n    }\n    switch (msg.type) {\n      // Bundle transform events\n      case 'bundle_build_started':\n      case 'bundle_transform_progressed':\n      case 'bundle_build_failed':\n      case 'bundle_build_done':\n        this._handleBundleTransformEvent(chunk);\n        return;\n\n      case 'initialize_started':\n        chunk._metroEventType = 'METRO_INITIALIZE_STARTED';\n        chunk.msg = msg.port\n          ? `Starting Metro Bundler on port ${msg.port}.`\n          : 'Starting Metro Bundler.';\n        break;\n      case 'initialize_done':\n        chunk.msg = `Metro Bundler ready.`;\n        break;\n      case 'initialize_failed': {\n        // SDK <=22\n        // $FlowFixMe\n        let code = msg.error.code;\n        chunk.msg =\n          code === 'EADDRINUSE'\n            ? `Metro Bundler can't listen on port ${msg.port}. The port is in use.`\n            : `Metro Bundler failed to start. (code: ${code})`;\n        break;\n      }\n      case 'bundling_error':\n        chunk.msg =\n          this._formatModuleResolutionError(msg.error) ||\n          this._formatBundlingError(msg.error) ||\n          msg;\n        chunk.level = Logger.ERROR;\n        break;\n      case 'transform_cache_reset':\n        chunk.msg =\n          'Your JavaScript transform cache is empty, rebuilding (this may take a minute).';\n        break;\n      case 'hmr_client_error':\n        chunk.msg = `A WebSocket client got a connection error. Please reload your device to get HMR working again.`;\n        break;\n      case 'global_cache_disabled':\n        if (msg.reason === 'too_many_errors') {\n          chunk.msg =\n            'The global cache is now disabled because it has been failing too many times.';\n        } else if (msg.reason === 'too_many_misses') {\n          chunk.msg = `The global cache is now disabled because it has been missing too many consecutive keys.`;\n        } else {\n          chunk.msg = `The global cache is now disabled. Reason: ${msg.reason}`;\n        }\n        break;\n      case 'worker_stdout_chunk':\n        chunk.msg = this._formatWorkerChunk('stdout', msg.chunk);\n        break;\n      case 'worker_stderr_chunk':\n        chunk.msg = this._formatWorkerChunk('stderr', msg.chunk);\n        break;\n      // Ignored events.\n      case 'dep_graph_loading':\n      case 'dep_graph_loaded':\n      case 'global_cache_error':\n        return;\n      default:\n        chunk.msg = `Unrecognized event: ${JSON.stringify(msg)}`;\n        break;\n    }\n    this._enqueueAppendLogChunk(chunk);\n  }\n\n  // Any event related to bundle building is handled here\n  _handleBundleTransformEvent = (chunk: MetroLogRecord) => {\n    const msg = chunk.msg as ReportableEvent;\n\n    if (msg.type === 'bundle_build_started') {\n      chunk._metroEventType = 'BUILD_STARTED';\n      this._handleNewBundleTransformStarted(chunk);\n    } else if (msg.type === 'bundle_transform_progressed') {\n      chunk._metroEventType = 'BUILD_PROGRESS';\n      if (this._bundleBuildChunkID) {\n        this._handleUpdateBundleTransformProgress(chunk);\n      } else {\n        this._handleNewBundleTransformStarted(chunk);\n      }\n    } else if (msg.type === 'bundle_build_failed') {\n      chunk._metroEventType = 'BUILD_FAILED';\n      if (!this._bundleBuildChunkID) {\n        // maybe?\n      } else {\n        this._handleUpdateBundleTransformProgress(chunk);\n      }\n    } else if (msg.type === 'bundle_build_done') {\n      chunk._metroEventType = 'BUILD_DONE';\n      if (!this._bundleBuildChunkID) {\n        // maybe?\n      } else {\n        this._handleUpdateBundleTransformProgress(chunk);\n      }\n    }\n  };\n\n  _handleNewBundleTransformStarted(chunk: MetroLogRecord) {\n    if (this._bundleBuildChunkID) {\n      return;\n    }\n\n    this._bundleBuildChunkID = chunk.id;\n    this._bundleBuildStart = new Date();\n    chunk.msg = 'Building JavaScript bundle';\n\n    if (this._onStartBuildBundle) {\n      this._onStartBuildBundle(chunk);\n    } else {\n      this._enqueueAppendLogChunk(chunk);\n    }\n  }\n\n  _handleUpdateBundleTransformProgress(progressChunk: MetroLogRecord) {\n    const msg = progressChunk.msg as ReportableEvent;\n\n    let percentProgress;\n    let bundleComplete = false;\n    let bundleBuildEnd = null;\n\n    if (msg.type === 'bundle_build_done') {\n      percentProgress = 100;\n      bundleComplete = true;\n      bundleBuildEnd = new Date();\n      if (this._bundleBuildStart) {\n        const duration = bundleBuildEnd.getTime() - this._bundleBuildStart.getTime();\n        progressChunk.msg = `Building JavaScript bundle: finished in ${duration}ms.`;\n      } else {\n        progressChunk.msg = `Building JavaScript bundle: finished.`;\n      }\n    } else if (msg.type === 'bundle_build_failed') {\n      percentProgress = -1;\n      bundleComplete = true;\n      bundleBuildEnd = new Date();\n      progressChunk.msg = `Building JavaScript bundle: error`;\n      progressChunk.level = Logger.ERROR;\n    } else if (msg.type === 'bundle_transform_progressed') {\n      percentProgress = Math.floor((msg.transformedFileCount / msg.totalFileCount) * 100);\n      progressChunk.msg = `Building JavaScript bundle: ${percentProgress}%`;\n    } else {\n      return;\n    }\n\n    if (this._bundleBuildChunkID) {\n      progressChunk.id = this._bundleBuildChunkID;\n    }\n\n    if (this._onProgressBuildBundle) {\n      this._onProgressBuildBundle(percentProgress, this._bundleBuildStart, progressChunk);\n\n      if (bundleComplete) {\n        if (this._onFinishBuildBundle) {\n          const error = msg.type === 'bundle_build_failed' ? 'Build failed' : null;\n          this._onFinishBuildBundle(error, this._bundleBuildStart, bundleBuildEnd, progressChunk);\n        }\n        this._bundleBuildStart = null;\n        this._bundleBuildChunkID = null;\n      }\n    } else {\n      this._updateLogs(logs => {\n        if (!logs || !logs.length) {\n          return [];\n        }\n\n        logs.forEach(log => {\n          if (log.id === this._bundleBuildChunkID) {\n            log.msg = progressChunk.msg;\n          }\n        });\n\n        if (bundleComplete) {\n          this._bundleBuildChunkID = null;\n        }\n\n        return [...logs];\n      });\n    }\n  }\n\n  _formatModuleResolutionError(error: MetroError): string | null {\n    if (!error.message) {\n      return null;\n    }\n    const match = /^Unable to resolve module `(.+?)`/.exec(error.message);\n    const originModulePath = error.originModulePath as (string | null);\n    if (!match || !originModulePath) {\n      return null;\n    }\n    const moduleName = match[1];\n    const relativePath = path.relative(this._projectRoot, originModulePath);\n\n    const DOCS_PAGE_URL =\n      'https://docs.expo.io/versions/latest/introduction/faq/#can-i-use-nodejs-packages-with-expo';\n\n    if (NODE_STDLIB_MODULES.includes(moduleName)) {\n      if (originModulePath.includes('node_modules')) {\n        return `The package at \"${relativePath}\" attempted to import the Node standard library module \"${moduleName}\". It failed because React Native does not include the Node standard library. Read more at ${DOCS_PAGE_URL}`;\n      } else {\n        return `You attempted attempted to import the Node standard library module \"${moduleName}\" from \"${relativePath}\". It failed because React Native does not include the Node standard library. Read more at ${DOCS_PAGE_URL}`;\n      }\n    }\n    return `Unable to resolve \"${moduleName}\" from \"${relativePath}\"`;\n  }\n\n  _formatBundlingError(error: MetroError): string | null {\n    let message = error.message;\n    if (!message && Array.isArray(error.errors) && error.errors.length) {\n      message = (error.errors[0] as any).description;\n    }\n    if (!message) {\n      return null;\n    }\n\n    message = chalk.red(message);\n\n    let snippet = (this._getSnippetForError && this._getSnippetForError(error)) || error.snippet;\n    if (snippet) {\n      message += `\\n${snippet}`;\n    }\n    return message;\n  }\n\n  _formatWorkerChunk(origin: 'stdout' | 'stderr', chunk: string) {\n    const lines = chunk.split('\\n');\n    if (lines.length >= 1 && lines[lines.length - 1] === '') {\n      lines.splice(lines.length - 1, 1);\n    }\n    return lines.map(line => `transform[${origin}]: ${line}`).join('\\n');\n  }\n\n  _enqueueAppendLogChunk(chunk: LogRecord) {\n    if (!chunk.shouldHide) {\n      this._logsToAdd.push(chunk);\n      this._enqueueFlushLogsToAdd();\n    }\n  }\n\n  _enqueueFlushLogsToAdd = () => {\n    let func = () => {\n      this._updateLogs(logs => {\n        if (this._logsToAdd.length === 0) {\n          return logs;\n        }\n\n        let nextLogs = logs.concat(this._logsToAdd);\n        this._logsToAdd = [];\n        return nextLogs;\n      });\n    };\n    func();\n  };\n\n  _maybeParseMsgJSON(chunk: LogRecord) {\n    try {\n      let parsedMsg = JSON.parse(chunk.msg);\n      chunk.msg = parsedMsg;\n    } catch (e) {\n      // non-JSON message\n    }\n\n    return chunk;\n  }\n\n  _cleanUpNodeErrors = (chunk: LogRecord) => {\n    if (typeof chunk.msg === 'object') {\n      return chunk;\n    }\n\n    if (chunk.msg.match(/\\(node:.\\d*\\)/)) {\n      // Example: (node:13817) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): SyntaxError: SyntaxError /Users/brent/universe/apps/new-project-template/main.js: Unexpected token (10:6)\n      // The first part of this is totally useless, so let's remove it.\n      if (chunk.msg.match(/UnhandledPromiseRejectionWarning/)) {\n        chunk.msg = chunk.msg.replace(/\\(node:.*\\(rejection .*\\):/, '');\n        if (chunk.msg.match(/SyntaxError: SyntaxError/)) {\n          chunk.msg = chunk.msg.replace('SyntaxError: ', '');\n        }\n      } else if (chunk.msg.match(/DeprecationWarning/)) {\n        chunk.msg = '';\n      }\n    }\n\n    return chunk;\n  };\n}\n\nconst NODE_STDLIB_MODULES = [\n  'assert',\n  'async_hooks',\n  'buffer',\n  'child_process',\n  'cluster',\n  'crypto',\n  'dgram',\n  'dns',\n  'domain',\n  'events',\n  'fs',\n  'http',\n  'https',\n  'net',\n  'os',\n  'path',\n  'punycode',\n  'querystring',\n  'readline',\n  'repl',\n  'stream',\n  'string_decoder',\n  'tls',\n  'tty',\n  'url',\n  'util',\n  'v8',\n  'vm',\n  'zlib',\n];\n"],"file":"../../logs/PackagerLogsStream.js","sourceRoot":"/@expo/xdl@55.0.14/src"}