{"version":3,"sources":["__tests__/project/ProjectUtils-test.js"],"names":["jest","mock","mockfs","require","slugify","packageJson","name","version","expJson","sdkVersion","slug","appJson","expo","packageJsonWithExp","exp","expJsonWithNodeModulesPath","nodeModulesPath","setupDirs","fs","packageJsonString","JSON","stringify","__configureFs","describe","beforeEach","async","afterEach","restore","it","pkg","await","ProjectUtils","readConfigJsonAsync","expect","toEqual"],"mappings":"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","file":"../../../__tests__/project/ProjectUtils-test.js","sourcesContent":["import * as ProjectUtils from '../../project/ProjectUtils';\n\njest.mock('analytics-node');\njest.mock('fs');\n\nconst mockfs = require('mock-fs');\nconst slugify = require('slugify');\n\nconst packageJson = {\n  name: 'testing123',\n  version: '0.5.0',\n};\n\n// these are intentionally different from package.json -- easy way to test fallbacks\nconst expJson = {\n  sdkVersion: '12.0.0',\n  name: 'My New Project',\n  slug: 'my-new-project',\n  version: '1.0.0',\n};\n\nconst appJson = {\n  expo: {\n    sdkVersion: '12.0.0',\n  },\n};\n\nconst packageJsonWithExp = {\n  name: 'testing456',\n  version: '0.7.0',\n  exp: expJson,\n};\n\nconst expJsonWithNodeModulesPath = {\n  sdkVersion: '12.0.0',\n  name: 'My New Project',\n  slug: 'my-new-project',\n  version: '1.0.0',\n  nodeModulesPath: 'node-modules-path',\n};\n\nfunction setupDirs() {\n  const fs = require('fs');\n\n  const packageJsonString = JSON.stringify(packageJson, null, 2);\n  fs.__configureFs({\n    '/home/mocky/appjson/package.json': packageJsonString,\n    '/home/mocky/appjson/app.json': JSON.stringify(appJson, null, 2),\n    '/home/mocky/expjson/package.json': packageJsonString,\n    '/home/mocky/expjson/exp.json': JSON.stringify(expJson, null, 2),\n    '/home/mocky/nojson/package.json': JSON.stringify(packageJsonWithExp, null, 2),\n    '/home/mocky/expjson-with-node-modules/exp.json': JSON.stringify(\n      expJsonWithNodeModulesPath,\n      null,\n      2\n    ),\n    '/home/mocky/expjson-with-node-modules/node-modules-path/package.json': packageJsonString,\n  });\n}\n\ndescribe('readConfigJsonAsync', () => {\n  beforeEach(async () => {\n    setupDirs();\n  });\n\n  afterEach(() => {\n    mockfs.restore();\n  });\n\n  it('parses a project root with a normal exp.json', async () => {\n    const { exp, pkg } = await ProjectUtils.readConfigJsonAsync('/home/mocky/expjson');\n\n    expect(exp).toEqual(expJson);\n    expect(pkg).toEqual(packageJson);\n  });\n\n  it('parses a project root with only a package.json', async () => {\n    const { exp, pkg } = await ProjectUtils.readConfigJsonAsync('/home/mocky/nojson');\n\n    expect(exp).toEqual(expJson);\n    expect(pkg).toEqual(packageJsonWithExp);\n  });\n\n  it('parses a project root with an app.json relying on package.json fallbacks', async () => {\n    const { exp, pkg } = await ProjectUtils.readConfigJsonAsync('/home/mocky/appjson');\n\n    expect(exp.sdkVersion).toEqual(appJson.expo.sdkVersion);\n    expect(exp.version).toEqual(packageJson.version);\n    expect(exp.name).toEqual(packageJson.name);\n    expect(exp.slug).toEqual(slugify(packageJson.name));\n\n    expect(pkg).toEqual(packageJson);\n  });\n\n  it('reads package.json at nodeModulesPath', async () => {\n    const { exp, pkg } = await ProjectUtils.readConfigJsonAsync(\n      '/home/mocky/expjson-with-node-modules'\n    );\n\n    expect(exp).toEqual(expJsonWithNodeModulesPath);\n    expect(pkg).toEqual(packageJson);\n  });\n});\n"],"sourceRoot":"/@expo/xdl@55.0.14/src"}