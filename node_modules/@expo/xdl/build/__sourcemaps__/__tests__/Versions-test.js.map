{"version":3,"sources":["__tests__/Versions-test.js"],"names":["jest","mock","request","require","Versions","__setMockResponse","body","iosVersion","androidVersion","sdkVersions","expoReactNativeTag","facebookReactNativeVersion","describe","it","async","let","facebookReactNativeVersions","await","facebookReactNativeVersionsAsync","expect","toEqual","expoVersion","facebookReactNativeVersionToExpoVersionAsync"],"mappings":"AAAA;;AAEAA,IAAI,CAACC,IAALD,CAAU,gBAAVA;AACAA,IAAI,CAACC,IAALD,CAAU,IAAVA;AACAA,IAAI,CAACC,IAALD,CAAU,QAAVA;AACAA,IAAI,CAACC,IAALD,CAAU,SAAVA;;AAEA,MAAME,OAAAA,GAAUC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,QAAAA,GAAWD,OAAO,CAAC,aAAD,CAAxB;;AAEAD,OAAO,CAACG,iBAARH,CAA0B;AACxBI,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,OADR;AAEJC,IAAAA,cAAc,EAAE,OAFZ;AAGJC,IAAAA,WAAW,EAAE;AACX,eAAS;AACPC,QAAAA,kBAAkB,EAAE,WADb;AAEPC,QAAAA,0BAA0B,EAAE;AAFrB,OADE;AAKX,eAAS;AACPD,QAAAA,kBAAkB,EAAE,WADb;AAEPC,QAAAA,0BAA0B,EAAE;AAFrB,OALE;AASX,eAAS;AACPD,QAAAA,kBAAkB,EAAE,WADb;AAEPC,QAAAA,0BAA0B,EAAE;AAFrB;AATE;AAHT;AADkB,CAA1BT;;AAqBAU,QAAQ,CAAC,kCAAD,EAAqC,MAAM;AACjDC,EAAAA,EAAE,CAAC,oCAAD,EAAuCC,YAAY;AACnDC,QAAIC,2BAAAA,GAA8BC,MAAMb,QAAQ,CAACc,gCAATd,EAAxCW;AACAI,IAAAA,MAAM,CAACH,2BAAD,CAANG,CAAoCC,OAApCD,CAA4C,CAAC,QAAD,EAAW,QAAX,CAA5CA;AACD,GAHC,CAAFN;AAID,CALO,CAARD;AAOAA,QAAQ,CAAC,8CAAD,EAAiD,MAAM;AAC7DC,EAAAA,EAAE,CAAC,qCAAD,EAAwCC,YAAY;AACpDC,QAAIM,WAAAA,GAAcJ,MAAMb,QAAQ,CAACkB,4CAATlB,CAAsD,QAAtDA,CAAxBW;AACAI,IAAAA,MAAM,CAACE,WAAD,CAANF,CAAoBC,OAApBD,CAA4B,OAA5BA;AACD,GAHC,CAAFN;AAKAA,EAAAA,EAAE,CAAC,0DAAD,EAA6DC,YAAY;AACzEC,QAAIM,WAAAA,GAAcJ,MAAMb,QAAQ,CAACkB,4CAATlB,CAAsD,QAAtDA,CAAxBW;AACAI,IAAAA,MAAM,CAACE,WAAD,CAANF,CAAoBC,OAApBD,CAA4B,OAA5BA;AACD,GAHC,CAAFN;AAKAA,EAAAA,EAAE,CAAC,uBAAD,EAA0BC,YAAY;AACtCC,QAAIM,WAAAA,GAAcJ,MAAMb,QAAQ,CAACkB,4CAATlB,CAAsD,QAAtDA,CAAxBW;AACAI,IAAAA,MAAM,CAACE,WAAD,CAANF,CAAoBC,OAApBD,CAA4B,OAA5BA;AACD,GAHC,CAAFN;AAKAA,EAAAA,EAAE,CAAC,8CAAD,EAAiDC,YAAY;AAC7DC,QAAIM,WAAAA,GAAcJ,MAAMb,QAAQ,CAACkB,4CAATlB,CAAsD,QAAtDA,CAAxBW;AACAI,IAAAA,MAAM,CAACE,WAAD,CAANF,CAAoBC,OAApBD,CAA4B,IAA5BA;AACD,GAHC,CAAFN;AAID,CApBO,CAARD","file":"../../__tests__/Versions-test.js","sourcesContent":["'use strict';\n\njest.mock('analytics-node');\njest.mock('fs');\njest.mock('../Env');\njest.mock('request');\n\nconst request = require('request');\nconst Versions = require('../Versions');\n\nrequest.__setMockResponse({\n  body: {\n    iosVersion: '1.6.0',\n    androidVersion: '1.6.0',\n    sdkVersions: {\n      '5.0.0': {\n        expoReactNativeTag: 'sdk-5.0.0',\n        facebookReactNativeVersion: '0.24.0',\n      },\n      '6.0.0': {\n        expoReactNativeTag: 'sdk-6.0.0',\n        facebookReactNativeVersion: '0.27.0',\n      },\n      '7.0.0': {\n        expoReactNativeTag: 'sdk-7.0.0',\n        facebookReactNativeVersion: '0.27.0',\n      },\n    },\n  },\n});\n\ndescribe('facebookReactNativeVersionsAsync', () => {\n  it('checks list of versions is correct', async () => {\n    let facebookReactNativeVersions = await Versions.facebookReactNativeVersionsAsync();\n    expect(facebookReactNativeVersions).toEqual(['0.24.0', '0.27.0']);\n  });\n});\n\ndescribe('facebookReactNativeVersionToExpoVersionAsync', () => {\n  it('returns expo version when available', async () => {\n    let expoVersion = await Versions.facebookReactNativeVersionToExpoVersionAsync('0.24.0');\n    expect(expoVersion).toEqual('5.0.0');\n  });\n\n  it('returns newest expo version when multiple versions exist', async () => {\n    let expoVersion = await Versions.facebookReactNativeVersionToExpoVersionAsync('0.27.0');\n    expect(expoVersion).toEqual('7.0.0');\n  });\n\n  it('ignores patch version', async () => {\n    let expoVersion = await Versions.facebookReactNativeVersionToExpoVersionAsync('0.27.3');\n    expect(expoVersion).toEqual('7.0.0');\n  });\n\n  it('returns null when no matching version exists', async () => {\n    let expoVersion = await Versions.facebookReactNativeVersionToExpoVersionAsync('0.23.0');\n    expect(expoVersion).toEqual(null);\n  });\n});\n"],"sourceRoot":"/@expo/xdl@55.0.14/src"}