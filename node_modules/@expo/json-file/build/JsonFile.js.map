{"version":3,"file":"JsonFile.js","sourceRoot":"","sources":["../src/JsonFile.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from 'fs';\nimport { promisify } from 'util';\n\nimport get from 'lodash/get';\nimport has from 'lodash/has';\nimport set from 'lodash/set';\nimport JSON5 from 'json5';\nimport writeFileAtomic from 'write-file-atomic';\nimport { codeFrameColumns } from '@babel/code-frame';\n\nimport JsonFileError from './JsonFileError';\n\nconst readFileAsync = promisify(fs.readFile);\nconst writeFileAtomicAsync: (\n  filename: string,\n  data: string | Buffer,\n  options: writeFileAtomic.Options\n) => void = promisify(writeFileAtomic);\n\nexport type JSONValue = boolean | number | string | null | JSONArray | JSONObject;\nexport interface JSONArray extends Array<JSONValue> {}\nexport interface JSONObject {\n  [key: string]: JSONValue | undefined;\n}\n\ntype Defined<T> = T extends undefined ? never : T;\n\ntype Options<TJSONObject extends JSONObject> = {\n  badJsonDefault?: TJSONObject;\n  jsonParseErrorDefault?: TJSONObject;\n  cantReadFileDefault?: TJSONObject;\n  default?: TJSONObject;\n  json5?: boolean;\n  space?: number;\n};\n\nconst DEFAULT_OPTIONS = {\n  badJsonDefault: undefined,\n  jsonParseErrorDefault: undefined,\n  cantReadFileDefault: undefined,\n  default: undefined,\n  json5: false,\n  space: 2,\n};\n\n/**\n * The JsonFile class represents the contents of json file.\n *\n * It's polymorphic on \"JSONObject\", which is a simple type representing\n * and object with string keys and either objects or primitive types as values.\n * @type {[type]}\n */\nexport default class JsonFile<TJSONObject extends JSONObject> {\n  file: string;\n  options: Options<TJSONObject>;\n\n  static readAsync = readAsync;\n  static writeAsync = writeAsync;\n  static getAsync = getAsync;\n  static setAsync = setAsync;\n  static mergeAsync = mergeAsync;\n  static deleteKeyAsync = deleteKeyAsync;\n  static deleteKeysAsync = deleteKeysAsync;\n  static rewriteAsync = rewriteAsync;\n\n  constructor(file: string, options: Options<TJSONObject> = {}) {\n    this.file = file;\n    this.options = options;\n  }\n\n  async readAsync(options?: Options<TJSONObject>): Promise<TJSONObject> {\n    return readAsync(this.file, this._getOptions(options));\n  }\n\n  async writeAsync(object: TJSONObject, options?: Options<TJSONObject>) {\n    return writeAsync(this.file, object, this._getOptions(options));\n  }\n\n  async getAsync<K extends keyof TJSONObject, TDefault extends TJSONObject[K] | null>(\n    key: K,\n    defaultValue: TDefault,\n    options?: Options<TJSONObject>\n  ): Promise<Defined<TJSONObject[K]> | TDefault> {\n    return getAsync(this.file, key, defaultValue, this._getOptions(options));\n  }\n\n  async setAsync(key: string, value: unknown, options?: Options<TJSONObject>) {\n    return setAsync(this.file, key, value, this._getOptions(options));\n  }\n\n  async mergeAsync(\n    sources: Partial<TJSONObject> | Array<Partial<TJSONObject>>,\n    options?: Options<TJSONObject>\n  ): Promise<TJSONObject> {\n    return mergeAsync<TJSONObject>(this.file, sources, this._getOptions(options));\n  }\n\n  async deleteKeyAsync(key: string, options?: Options<TJSONObject>) {\n    return deleteKeyAsync(this.file, key, this._getOptions(options));\n  }\n\n  async deleteKeysAsync(keys: Array<string>, options?: Options<TJSONObject>) {\n    return deleteKeysAsync(this.file, keys, this._getOptions(options));\n  }\n\n  async rewriteAsync(options?: Options<TJSONObject>) {\n    return rewriteAsync(this.file, this._getOptions(options));\n  }\n\n  _getOptions(options?: Options<TJSONObject>): Options<TJSONObject> {\n    return {\n      ...this.options,\n      ...options,\n    };\n  }\n}\n\nasync function readAsync<TJSONObject extends JSONObject>(\n  file: string,\n  options?: Options<TJSONObject>\n): Promise<TJSONObject> {\n  let json;\n  try {\n    json = await readFileAsync(file, 'utf8');\n  } catch (error) {\n    let defaultValue = cantReadFileDefault(options);\n    if (defaultValue === undefined) {\n      throw new JsonFileError(`Can't read JSON file: ${file}`, error, error.code);\n    } else {\n      return defaultValue;\n    }\n  }\n  try {\n    if (_getOption(options, 'json5')) {\n      return JSON5.parse(json);\n    } else {\n      return JSON.parse(json);\n    }\n  } catch (e) {\n    let defaultValue = jsonParseErrorDefault(options);\n    if (defaultValue === undefined) {\n      let location = locationFromSyntaxError(e, json);\n      if (location) {\n        let codeFrame = codeFrameColumns(json, { start: location });\n        e.codeFrame = codeFrame;\n        e.message += `\\n${codeFrame}`;\n      }\n      throw new JsonFileError(`Error parsing JSON file: ${file}`, e, 'EJSONPARSE');\n    } else {\n      return defaultValue;\n    }\n  }\n}\n\nasync function getAsync<TJSONObject extends JSONObject, K extends keyof TJSONObject, DefaultValue>(\n  file: string,\n  key: K,\n  defaultValue: DefaultValue,\n  options?: Options<TJSONObject>\n): Promise<any> {\n  const object = await readAsync(file, options);\n  if (defaultValue === undefined && !has(object, key)) {\n    throw new JsonFileError(`No value at key path \"${key}\" in JSON object from: ${file}`);\n  }\n  return get(object, key, defaultValue);\n}\n\nasync function writeAsync<TJSONObject extends JSONObject>(\n  file: string,\n  object: TJSONObject,\n  options?: Options<TJSONObject>\n): Promise<TJSONObject> {\n  const space = _getOption(options, 'space');\n  const json5 = _getOption(options, 'json5');\n  let json;\n  try {\n    if (json5) {\n      json = JSON5.stringify(object, null, space);\n    } else {\n      json = JSON.stringify(object, null, space);\n    }\n  } catch (e) {\n    throw new JsonFileError(`Couldn't JSON.stringify object for file: ${file}`, e);\n  }\n  await writeFileAtomicAsync(file, json, {});\n  return object;\n}\n\nasync function setAsync<TJSONObject extends JSONObject>(\n  file: string,\n  key: string,\n  value: unknown,\n  options?: Options<TJSONObject>\n): Promise<TJSONObject> {\n  // TODO: Consider implementing some kind of locking mechanism, but\n  // it's not critical for our use case, so we'll leave it out for now\n  let object = await readAsync(file, options);\n  object = set(object, key, value);\n  return writeAsync(file, object, options);\n}\n\nasync function mergeAsync<TJSONObject extends JSONObject>(\n  file: string,\n  sources: Partial<TJSONObject> | Array<Partial<TJSONObject>>,\n  options?: Options<TJSONObject>\n): Promise<TJSONObject> {\n  const object = await readAsync(file, options);\n  if (Array.isArray(sources)) {\n    Object.assign(object, ...sources);\n  } else {\n    Object.assign(object, sources);\n  }\n  return writeAsync(file, object, options);\n}\n\nasync function deleteKeyAsync<TJSONObject extends JSONObject>(\n  file: string,\n  key: string,\n  options?: Options<TJSONObject>\n): Promise<TJSONObject> {\n  return deleteKeysAsync(file, [key], options);\n}\n\nasync function deleteKeysAsync<TJSONObject extends JSONObject>(\n  file: string,\n  keys: Array<string>,\n  options?: Options<TJSONObject>\n): Promise<TJSONObject> {\n  const object = await readAsync(file, options);\n  let didDelete = false;\n\n  for (let i = 0; i < keys.length; i++) {\n    let key = keys[i];\n    if (object.hasOwnProperty(key)) {\n      delete object[key];\n      didDelete = true;\n    }\n  }\n\n  if (didDelete) {\n    return writeAsync(file, object, options);\n  }\n  return object;\n}\n\nasync function rewriteAsync<TJSONObject extends JSONObject>(\n  file: string,\n  options?: Options<TJSONObject>\n): Promise<TJSONObject> {\n  const object = await readAsync(file, options);\n  return writeAsync(file, object, options);\n}\n\nfunction jsonParseErrorDefault<TJSONObject extends JSONObject>(\n  options: Options<TJSONObject> = {}\n): TJSONObject | void {\n  if (options.jsonParseErrorDefault === undefined) {\n    return options.default;\n  } else {\n    return options.jsonParseErrorDefault;\n  }\n}\n\nfunction cantReadFileDefault<TJSONObject extends JSONObject>(\n  options: Options<TJSONObject> = {}\n): TJSONObject | void {\n  if (options.cantReadFileDefault === undefined) {\n    return options.default;\n  } else {\n    return options.cantReadFileDefault;\n  }\n}\n\nfunction _getOption<TJSONObject extends JSONObject, K extends keyof Options<TJSONObject>>(\n  options: Options<TJSONObject> | undefined,\n  field: K\n): Options<TJSONObject>[K] {\n  if (options) {\n    if (options[field] !== undefined) {\n      return options[field];\n    }\n  }\n  return DEFAULT_OPTIONS[field];\n}\n\nfunction locationFromSyntaxError(error: any, sourceString: string) {\n  // JSON5 SyntaxError has lineNumber and columnNumber.\n  if ('lineNumber' in error && 'columnNumber' in error) {\n    return { line: error.lineNumber, column: error.columnNumber };\n  }\n  // JSON SyntaxError only includes the index in the message.\n  let match = /at position (\\d+)/.exec(error.message);\n  if (match) {\n    let index = parseInt(match[1], 10);\n    let lines = sourceString.slice(0, index + 1).split('\\n');\n    return { line: lines.length, column: lines[lines.length - 1].length };\n  }\n\n  return null;\n}\n"]}