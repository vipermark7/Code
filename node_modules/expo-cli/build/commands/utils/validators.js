'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.existingFile = exports.nonEmptyInput = undefined;

var _regenerator;

function _load_regenerator() {
  return _regenerator = _interopRequireDefault(require('babel-runtime/regenerator'));
}

var _asyncToGenerator2;

function _load_asyncToGenerator() {
  return _asyncToGenerator2 = _interopRequireDefault(require('babel-runtime/helpers/asyncToGenerator'));
}

var _fsExtra;

function _load_fsExtra() {
  return _fsExtra = _interopRequireDefault(require('fs-extra'));
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var nonEmptyInput = function nonEmptyInput(val) {
  return val !== '';
};

var existingFile = function () {
  var _ref = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee(filePath) {
    var verbose = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    var stats;
    return (_regenerator || _load_regenerator()).default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            _context.next = 3;
            return (_fsExtra || _load_fsExtra()).default.stat(filePath);

          case 3:
            stats = _context.sent;
            return _context.abrupt('return', stats.isFile());

          case 7:
            _context.prev = 7;
            _context.t0 = _context['catch'](0);

            if (verbose) {
              console.log('\nFile does not exist.');
            }
            return _context.abrupt('return', false);

          case 11:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined, [[0, 7]]);
  }));

  return function existingFile(_x) {
    return _ref.apply(this, arguments);
  };
}();

exports.nonEmptyInput = nonEmptyInput;
exports.existingFile = existingFile;
//# sourceMappingURL=../../__sourcemaps__/commands/utils/validators.js.map
