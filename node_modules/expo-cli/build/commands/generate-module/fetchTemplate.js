'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator;

function _load_regenerator() {
  return _regenerator = _interopRequireDefault(require('babel-runtime/regenerator'));
}

var _asyncToGenerator2;

function _load_asyncToGenerator() {
  return _asyncToGenerator2 = _interopRequireDefault(require('babel-runtime/helpers/asyncToGenerator'));
}

var _path = _interopRequireDefault(require('path'));

var _fsExtra;

function _load_fsExtra() {
  return _fsExtra = _interopRequireDefault(require('fs-extra'));
}

var _pacote;

function _load_pacote() {
  return _pacote = _interopRequireDefault(require('pacote'));
}

var _chalk;

function _load_chalk() {
  return _chalk = _interopRequireDefault(require('chalk'));
}

var _xdl;

function _load_xdl() {
  return _xdl = require('@expo/xdl');
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DEFAULT_TEMPLATE = 'expo-module-template@latest';

/**
 * Fetches directory from npm or given templateDirectory into destinationPath
 * @param {path} destinationPath - destination for fetched template
 * @param {string?} template - optional template provided as npm package or local directory
 */

exports.default = function () {
  var _ref = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee(destinationPath, template) {
    return (_regenerator || _load_regenerator()).default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.t0 = template;

            if (!_context.t0) {
              _context.next = 5;
              break;
            }

            _context.next = 4;
            return (_fsExtra || _load_fsExtra()).default.exists(_path.default.resolve(template));

          case 4:
            _context.t0 = _context.sent;

          case 5:
            if (!_context.t0) {
              _context.next = 11;
              break;
            }

            // local template
            (_xdl || _load_xdl()).Logger.global.info('Using local template: ' + (_chalk || _load_chalk()).default.bold(_path.default.resolve(template)) + '.');
            _context.next = 9;
            return (_fsExtra || _load_fsExtra()).default.copy(_path.default.resolve(template), destinationPath);

          case 9:
            _context.next = 20;
            break;

          case 11:
            if (!(template && isNpmPackage(template))) {
              _context.next = 17;
              break;
            }

            // npm package
            (_xdl || _load_xdl()).Logger.global.info('Using NPM package as template: ' + (_chalk || _load_chalk()).default.bold(template));
            _context.next = 15;
            return (_pacote || _load_pacote()).default.extract(template, destinationPath);

          case 15:
            _context.next = 20;
            break;

          case 17:
            // default npm packge
            (_xdl || _load_xdl()).Logger.global.info('Using default NPM package as template: ' + (_chalk || _load_chalk()).default.bold(DEFAULT_TEMPLATE));
            _context.next = 20;
            return (_pacote || _load_pacote()).default.extract(DEFAULT_TEMPLATE, destinationPath);

          case 20:
            _context.next = 22;
            return (_fsExtra || _load_fsExtra()).default.pathExists(_path.default.join(destinationPath, 'template-unimodule.json'));

          case 22:
            if (!_context.sent) {
              _context.next = 25;
              break;
            }

            _context.next = 25;
            return (_fsExtra || _load_fsExtra()).default.move(_path.default.join(destinationPath, 'template-unimodule.json'), _path.default.join(destinationPath, 'unimodule.json'));

          case 25:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  function fetchTemplate(_x, _x2) {
    return _ref.apply(this, arguments);
  }

  return fetchTemplate;
}();

function isNpmPackage(template) {
  return !template.match(/^\./) && // don't start with .
  !template.match(/^_/) && // don't start with _
  template.toLowerCase() === template && // only lowercase
  !/[~'!()*]/.test(template.split('/').slice(-1)[0]) && // don't contain any character from [~'!()*]
  template.match(/^(@([^/]+?)\/)?([^/@]+)(@(\d\.\d\.\d)(-[^/@]+)?)?$/) // has shape (@scope/)?actual-package-name(@0.1.1(-tag.1)?)?
  ;
}
module.exports = exports['default'];
//# sourceMappingURL=../../__sourcemaps__/commands/generate-module/fetchTemplate.js.map
