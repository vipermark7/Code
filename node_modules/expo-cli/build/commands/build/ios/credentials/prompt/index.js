'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2;

function _load_defineProperty() {
  return _defineProperty2 = _interopRequireDefault(require('babel-runtime/helpers/defineProperty'));
}

var _regenerator;

function _load_regenerator() {
  return _regenerator = _interopRequireDefault(require('babel-runtime/regenerator'));
}

var _extends3;

function _load_extends() {
  return _extends3 = _interopRequireDefault(require('babel-runtime/helpers/extends'));
}

var _objectWithoutProperties2;

function _load_objectWithoutProperties() {
  return _objectWithoutProperties2 = _interopRequireDefault(require('babel-runtime/helpers/objectWithoutProperties'));
}

var _values;

function _load_values() {
  return _values = _interopRequireDefault(require('babel-runtime/core-js/object/values'));
}

var _slicedToArray2;

function _load_slicedToArray() {
  return _slicedToArray2 = _interopRequireDefault(require('babel-runtime/helpers/slicedToArray'));
}

var _keys;

function _load_keys() {
  return _keys = _interopRequireDefault(require('babel-runtime/core-js/object/keys'));
}

var _asyncToGenerator2;

function _load_asyncToGenerator() {
  return _asyncToGenerator2 = _interopRequireDefault(require('babel-runtime/helpers/asyncToGenerator'));
}

var prompt = function () {
  var _ref = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee(appleCtx, options, missingCredentials) {
    var credentialsFromParams, stillMissingCredentials, names, _ref2, _ref3, answers, metadata, reused, userCredentialsIds, metadataFromReused, toGenerate, credentialsFromAnswers, mergedCredentials, metadataToReturn;

    return (_regenerator || _load_regenerator()).default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return (0, (_getFromParams || _load_getFromParams()).default)(options);

          case 2:
            credentialsFromParams = _context.sent;
            stillMissingCredentials = (0, (_difference || _load_difference()).default)(missingCredentials, (0, (_keys || _load_keys()).default)(credentialsFromParams));

            if (!(stillMissingCredentials.length === 0)) {
              _context.next = 6;
              break;
            }

            return _context.abrupt('return', {
              credentials: _flattenObject(credentialsFromParams),
              metadata: {}
            });

          case 6:
            names = stillMissingCredentials.map(function (id) {
              return (_constants || _load_constants()).CREDENTIALS[id].name;
            }).join(', ');

            (_log || _load_log()).default.warn('We do not have some credentials for you: ' + names);

            _context.next = 10;
            return _shouldExpoGenerateCerts();

          case 10:
            if (!_context.sent) {
              _context.next = 16;
              break;
            }

            _context.next = 13;
            return (0, (_promptForOverrides || _load_promptForOverrides()).default)(appleCtx, stillMissingCredentials);

          case 13:
            _context.t0 = _context.sent;
            _context.next = 19;
            break;

          case 16:
            _context.next = 18;
            return (0, (_promptForCredentials || _load_promptForCredentials()).default)(appleCtx, stillMissingCredentials);

          case 18:
            _context.t0 = _context.sent;

          case 19:
            _ref2 = _context.t0;
            _ref3 = (0, (_slicedToArray2 || _load_slicedToArray()).default)(_ref2, 2);
            answers = _ref3[0];
            metadata = _ref3[1];
            reused = (0, (_values || _load_values()).default)(answers).filter(function (i) {
              return (0, (_isObject || _load_isObject()).default)(i) && 'reuse' in i;
            }).map(function (i) {
              return i.reuse;
            });
            userCredentialsIds = reused.map(function (i) {
              return i.userCredentialsId;
            });
            metadataFromReused = reused.reduce(function (acc, _ref4) {
              var userCredentialsId = _ref4.userCredentialsId,
                  rest = (0, (_objectWithoutProperties2 || _load_objectWithoutProperties()).default)(_ref4, ['userCredentialsId']);
              return (0, (_extends3 || _load_extends()).default)({}, acc, rest);
            }, {});
            toGenerate = (0, (_keys || _load_keys()).default)(answers).filter(function (key) {
              return answers[key] === (_constants || _load_constants()).EXPO_WILL_GENERATE;
            });
            credentialsFromAnswers = (0, (_pickBy || _load_pickBy()).default)(answers, function (val) {
              return val !== (_constants || _load_constants()).EXPO_WILL_GENERATE && !((0, (_isObject || _load_isObject()).default)(val) && 'reuse' in val);
            });
            mergedCredentials = (0, (_merge || _load_merge()).default)({}, credentialsFromParams, credentialsFromAnswers);
            metadataToReturn = (0, (_extends3 || _load_extends()).default)({}, metadata, metadataFromReused);
            return _context.abrupt('return', {
              credentials: _flattenObject(mergedCredentials),
              userCredentialsIds: userCredentialsIds,
              metadata: metadataToReturn,
              toGenerate: toGenerate
            });

          case 31:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function prompt(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();

var _shouldExpoGenerateCerts = function () {
  var _ref5 = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee2() {
    var _ref6, expoShouldGenerateCerts;

    return (_regenerator || _load_regenerator()).default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return (0, (_prompt2 || _load_prompt()).default)({
              type: 'list',
              name: 'expoShouldGenerateCerts',
              message: 'How would you like to upload your credentials?',
              choices: [{
                name: 'Expo handles all credentials, you can still provide overrides',
                value: true
              }, {
                name: 'I will provide all the credentials and files needed, Expo does limited validation',
                value: false
              }]
            });

          case 2:
            _ref6 = _context2.sent;
            expoShouldGenerateCerts = _ref6.expoShouldGenerateCerts;
            return _context2.abrupt('return', expoShouldGenerateCerts);

          case 5:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function _shouldExpoGenerateCerts() {
    return _ref5.apply(this, arguments);
  };
}();

var _difference;

function _load_difference() {
  return _difference = _interopRequireDefault(require('lodash/difference'));
}

var _isObject;

function _load_isObject() {
  return _isObject = _interopRequireDefault(require('lodash/isObject'));
}

var _pickBy;

function _load_pickBy() {
  return _pickBy = _interopRequireDefault(require('lodash/pickBy'));
}

var _merge;

function _load_merge() {
  return _merge = _interopRequireDefault(require('lodash/merge'));
}

var _getFromParams;

function _load_getFromParams() {
  return _getFromParams = _interopRequireDefault(require('./getFromParams'));
}

var _promptForCredentials;

function _load_promptForCredentials() {
  return _promptForCredentials = _interopRequireDefault(require('./promptForCredentials'));
}

var _promptForOverrides;

function _load_promptForOverrides() {
  return _promptForOverrides = _interopRequireDefault(require('./promptForOverrides'));
}

var _constants;

function _load_constants() {
  return _constants = _interopRequireWildcard(require('../constants'));
}

var _log;

function _load_log() {
  return _log = _interopRequireDefault(require('../../../../../log'));
}

var _prompt2;

function _load_prompt() {
  return _prompt2 = _interopRequireDefault(require('../../../../../prompt'));
}

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _flattenObject = function _flattenObject(obj) {
  return (0, (_keys || _load_keys()).default)(obj).reduce(function (acc, key) {
    var value = obj[key];
    if ((0, (_isObject || _load_isObject()).default)(value)) {
      return (0, (_extends3 || _load_extends()).default)({}, acc, _flattenObject(value));
    } else {
      return (0, (_extends3 || _load_extends()).default)({}, acc, (0, (_defineProperty2 || _load_defineProperty()).default)({}, key, value));
    }
  }, {});
};

exports.default = prompt;
module.exports = exports['default'];
//# sourceMappingURL=../../../../../__sourcemaps__/commands/build/ios/credentials/prompt/index.js.map
