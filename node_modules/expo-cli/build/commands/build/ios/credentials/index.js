'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.prompt = exports.determineMissingCredentials = exports.revoke = exports.clear = exports.generate = exports.update = exports.getDistributionCertSerialNumber = exports.fetch = undefined;

var _regenerator;

function _load_regenerator() {
  return _regenerator = _interopRequireDefault(require('babel-runtime/regenerator'));
}

var _extends2;

function _load_extends() {
  return _extends2 = _interopRequireDefault(require('babel-runtime/helpers/extends'));
}

var _asyncToGenerator2;

function _load_asyncToGenerator() {
  return _asyncToGenerator2 = _interopRequireDefault(require('babel-runtime/helpers/asyncToGenerator'));
}

var fetch = function () {
  var _ref = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee(projectMetadata) {
    var decrypt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var query;
    return (_regenerator || _load_regenerator()).default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            query = (0, (_extends2 || _load_extends()).default)({}, projectMetadata, {
              platform: (_constants || _load_constants()).PLATFORMS.IOS
            });

            if (!decrypt) {
              _context.next = 7;
              break;
            }

            _context.next = 4;
            return (_xdl || _load_xdl()).Credentials.getCredentialsForPlatform(query);

          case 4:
            _context.t0 = _context.sent;
            _context.next = 10;
            break;

          case 7:
            _context.next = 9;
            return (_xdl || _load_xdl()).Credentials.getEncryptedCredentialsForPlatformAsync(query);

          case 9:
            _context.t0 = _context.sent;

          case 10:
            return _context.abrupt('return', _context.t0);

          case 11:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function fetch(_x) {
    return _ref.apply(this, arguments);
  };
}();

var getDistributionCertSerialNumber = function () {
  var _ref2 = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee2(projectMetadata) {
    var _ref3, certP12, certPassword;

    return (_regenerator || _load_regenerator()).default.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return fetch(projectMetadata, true);

          case 2:
            _ref3 = _context2.sent;
            certP12 = _ref3.certP12;
            certPassword = _ref3.certPassword;

            if (!(certP12 && certPassword)) {
              _context2.next = 9;
              break;
            }

            return _context2.abrupt('return', (_xdl || _load_xdl()).IosCodeSigning.findP12CertSerialNumber(certP12, certPassword));

          case 9:
            return _context2.abrupt('return', null);

          case 10:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function getDistributionCertSerialNumber(_x3) {
    return _ref2.apply(this, arguments);
  };
}();

var update = function () {
  var _ref4 = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee3(projectMetadata, credentials, userCredentialsIds) {
    return (_regenerator || _load_regenerator()).default.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return (_xdl || _load_xdl()).Credentials.updateCredentialsForPlatform((_constants || _load_constants()).PLATFORMS.IOS, credentials, userCredentialsIds, projectMetadata);

          case 2:
            (_log || _load_log()).default.warn('Encrypted credentials and saved to the Expo servers');

          case 3:
          case 'end':
            return _context3.stop();
        }
      }
    }, _callee3, this);
  }));

  return function update(_x4, _x5, _x6) {
    return _ref4.apply(this, arguments);
  };
}();

var clear = function () {
  var _ref5 = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee4(_ref6, only) {
    var username = _ref6.username,
        experienceName = _ref6.experienceName,
        bundleIdentifier = _ref6.bundleIdentifier;
    return (_regenerator || _load_regenerator()).default.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _context4.next = 2;
            return (_xdl || _load_xdl()).Credentials.removeCredentialsForPlatform((_constants || _load_constants()).PLATFORMS.IOS, {
              username: username,
              experienceName: experienceName,
              bundleIdentifier: bundleIdentifier,
              only: only
            });

          case 2:
            (_log || _load_log()).default.warn('Removed existing credentials from expo servers');

          case 3:
          case 'end':
            return _context4.stop();
        }
      }
    }, _callee4, this);
  }));

  return function clear(_x7, _x8) {
    return _ref5.apply(this, arguments);
  };
}();

var _xdl;

function _load_xdl() {
  return _xdl = require('@expo/xdl');
}

var _prompt;

function _load_prompt() {
  return _prompt = _interopRequireDefault(require('./prompt'));
}

var _revoke;

function _load_revoke() {
  return _revoke = _interopRequireDefault(require('./revoke'));
}

var _generate;

function _load_generate() {
  return _generate = require('./generate');
}

var _constants;

function _load_constants() {
  return _constants = require('../../constants');
}

var _log;

function _load_log() {
  return _log = _interopRequireDefault(require('../../../../log'));
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.fetch = fetch;
exports.getDistributionCertSerialNumber = getDistributionCertSerialNumber;
exports.update = update;
exports.generate = (_generate || _load_generate()).generate;
exports.clear = clear;
exports.revoke = (_revoke || _load_revoke()).default;
exports.determineMissingCredentials = (_generate || _load_generate()).determineMissingCredentials;
exports.prompt = (_prompt || _load_prompt()).default;
//# sourceMappingURL=../../../../__sourcemaps__/commands/build/ios/credentials/index.js.map
