'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EXPO_WILL_GENERATE = exports.REQUIRED_CREDENTIALS = exports.CREDENTIALS = exports.PROVISIONING_PROFILE = exports.PUSH_CERT = exports.PUSH_KEY = exports.DISTRIBUTION_CERT = undefined;

var _defineProperty2;

function _load_defineProperty() {
  return _defineProperty2 = _interopRequireDefault(require('babel-runtime/helpers/defineProperty'));
}

var _CREDENTIALS;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DISTRIBUTION_CERT = 'distributionCert';
var PUSH_KEY = 'pushKey';
var PUSH_CERT = 'pushCert';
var PROVISIONING_PROFILE = 'provisioningProfile';

var CREDENTIALS = (_CREDENTIALS = {}, (0, (_defineProperty2 || _load_defineProperty()).default)(_CREDENTIALS, DISTRIBUTION_CERT, {
  id: DISTRIBUTION_CERT,
  canReuse: true,
  name: 'Apple Distribution Certificate',
  required: ['certP12', 'certPassword'],
  questions: {
    certP12: {
      question: 'Path to P12 file:',
      type: 'file',
      base64Encode: true
    },
    certPassword: {
      type: 'password',
      question: 'P12 password:'
    }
  }
}), (0, (_defineProperty2 || _load_defineProperty()).default)(_CREDENTIALS, PUSH_KEY, {
  id: PUSH_KEY,
  canReuse: true,
  name: 'Apple Push Notifications service key',
  required: ['apnsKeyP8', 'apnsKeyId'],
  questions: {
    apnsKeyP8: {
      type: 'file',
      question: 'Path to P8 file:'
    },
    apnsKeyId: {
      type: 'string',
      question: 'Key ID:'
    }
  }
}), (0, (_defineProperty2 || _load_defineProperty()).default)(_CREDENTIALS, PROVISIONING_PROFILE, {
  id: PROVISIONING_PROFILE,
  name: 'Apple Provisioning Profile',
  required: ['provisioningProfile'],
  dependsOn: DISTRIBUTION_CERT,
  questions: {
    provisioningProfile: {
      type: 'file',
      question: 'Path to .mobile provisioning profile:',
      base64Encode: true
    }
  }
}), (0, (_defineProperty2 || _load_defineProperty()).default)(_CREDENTIALS, PUSH_CERT, {
  id: PUSH_CERT,
  name: 'Apple Push Notifications certificate',
  required: ['pushP12', 'pushPassword'],
  deprecated: true,
  migrationDocs: 'https://docs.expo.io/versions/latest/distribution/building-standalone-apps/#switch-to-push-notification-key-on-ios'
}), _CREDENTIALS);

// Order of elements in the following array matters.
// We have to generate Distribution Certificate prior to generating Provisioning Profile.
var REQUIRED_CREDENTIALS = [CREDENTIALS.distributionCert, { or: [CREDENTIALS.pushKey, CREDENTIALS.pushCert] }, CREDENTIALS.provisioningProfile];

var EXPO_WILL_GENERATE = 'EXPO_PLEASE_GENERATE_THIS_FOR_ME';

exports.DISTRIBUTION_CERT = DISTRIBUTION_CERT;
exports.PUSH_KEY = PUSH_KEY;
exports.PUSH_CERT = PUSH_CERT;
exports.PROVISIONING_PROFILE = PROVISIONING_PROFILE;
exports.CREDENTIALS = CREDENTIALS;
exports.REQUIRED_CREDENTIALS = REQUIRED_CREDENTIALS;
exports.EXPO_WILL_GENERATE = EXPO_WILL_GENERATE;
//# sourceMappingURL=../../../../__sourcemaps__/commands/build/ios/credentials/constants.js.map
