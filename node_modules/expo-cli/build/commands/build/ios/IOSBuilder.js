'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _assign;

function _load_assign() {
  return _assign = _interopRequireDefault(require('babel-runtime/core-js/object/assign'));
}

var _keys;

function _load_keys() {
  return _keys = _interopRequireDefault(require('babel-runtime/core-js/object/keys'));
}

var _extends2;

function _load_extends() {
  return _extends2 = _interopRequireDefault(require('babel-runtime/helpers/extends'));
}

var _regenerator;

function _load_regenerator() {
  return _regenerator = _interopRequireDefault(require('babel-runtime/regenerator'));
}

var _asyncToGenerator2;

function _load_asyncToGenerator() {
  return _asyncToGenerator2 = _interopRequireDefault(require('babel-runtime/helpers/asyncToGenerator'));
}

var _getPrototypeOf;

function _load_getPrototypeOf() {
  return _getPrototypeOf = _interopRequireDefault(require('babel-runtime/core-js/object/get-prototype-of'));
}

var _classCallCheck2;

function _load_classCallCheck() {
  return _classCallCheck2 = _interopRequireDefault(require('babel-runtime/helpers/classCallCheck'));
}

var _createClass2;

function _load_createClass() {
  return _createClass2 = _interopRequireDefault(require('babel-runtime/helpers/createClass'));
}

var _possibleConstructorReturn2;

function _load_possibleConstructorReturn() {
  return _possibleConstructorReturn2 = _interopRequireDefault(require('babel-runtime/helpers/possibleConstructorReturn'));
}

var _inherits2;

function _load_inherits() {
  return _inherits2 = _interopRequireDefault(require('babel-runtime/helpers/inherits'));
}

var _isEmpty;

function _load_isEmpty() {
  return _isEmpty = _interopRequireDefault(require('lodash/isEmpty'));
}

var _pickBy;

function _load_pickBy() {
  return _pickBy = _interopRequireDefault(require('lodash/pickBy'));
}

var _get;

function _load_get() {
  return _get = _interopRequireDefault(require('lodash/get'));
}

var _xdl;

function _load_xdl() {
  return _xdl = require('@expo/xdl');
}

var _BaseBuilder2;

function _load_BaseBuilder() {
  return _BaseBuilder2 = _interopRequireDefault(require('../BaseBuilder'));
}

var _constants;

function _load_constants() {
  return _constants = require('../constants');
}

var _constants2;

function _load_constants2() {
  return _constants2 = _interopRequireWildcard(require('./credentials/constants'));
}

var _utils;

function _load_utils() {
  return _utils = _interopRequireWildcard(require('../utils'));
}

var _credentials;

function _load_credentials() {
  return _credentials = _interopRequireWildcard(require('./credentials'));
}

var _appleApi;

function _load_appleApi() {
  return _appleApi = _interopRequireWildcard(require('./appleApi'));
}

var _image;

function _load_image() {
  return _image = require('./utils/image');
}

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var IOSBuilder = function (_BaseBuilder) {
  (0, (_inherits2 || _load_inherits()).default)(IOSBuilder, _BaseBuilder);

  function IOSBuilder() {
    (0, (_classCallCheck2 || _load_classCallCheck()).default)(this, IOSBuilder);
    return (0, (_possibleConstructorReturn2 || _load_possibleConstructorReturn()).default)(this, (IOSBuilder.__proto__ || (0, (_getPrototypeOf || _load_getPrototypeOf()).default)(IOSBuilder)).apply(this, arguments));
  }

  (0, (_createClass2 || _load_createClass()).default)(IOSBuilder, [{
    key: 'run',
    value: function () {
      var _ref = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee() {
        var publishedExpIds;
        return (_regenerator || _load_regenerator()).default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.validateProject();

              case 2:
                _context.next = 4;
                return this.checkForBuildInProgress();

              case 4:
                if (!(this.options.type === 'archive')) {
                  _context.next = 7;
                  break;
                }

                _context.next = 7;
                return this.prepareCredentials();

              case 7:
                _context.next = 9;
                return this.ensureProjectIsPublished();

              case 9:
                publishedExpIds = _context.sent;

                if (this.options.publicUrl) {
                  _context.next = 13;
                  break;
                }

                _context.next = 13;
                return this.checkStatusBeforeBuild();

              case 13:
                _context.next = 15;
                return this.build(publishedExpIds);

              case 15:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function run() {
        return _ref.apply(this, arguments);
      }

      return run;
    }()
  }, {
    key: 'validateProject',
    value: function () {
      var _ref2 = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee2() {
        var bundleIdentifier, sdkVersion;
        return (_regenerator || _load_regenerator()).default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                bundleIdentifier = (0, (_get || _load_get()).default)(this.manifest, 'ios.bundleIdentifier');
                sdkVersion = this.manifest.sdkVersion;
                _context2.next = 4;
                return this.validateIcon();

              case 4:
                if (bundleIdentifier) {
                  _context2.next = 6;
                  break;
                }

                throw new (_xdl || _load_xdl()).XDLError('INVALID_OPTIONS', 'Your project must have a bundleIdentifier set in app.json.\nSee https://docs.expo.io/versions/latest/distribution/building-standalone-apps/#2-configure-appjson');

              case 6:
                _context2.next = 8;
                return (_utils || _load_utils()).checkIfSdkIsSupported(sdkVersion, (_constants || _load_constants()).PLATFORMS.IOS);

              case 8:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function validateProject() {
        return _ref2.apply(this, arguments);
      }

      return validateProject;
    }()
  }, {
    key: 'getAppleCtx',
    value: function () {
      var _ref3 = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee3(_ref4) {
        var bundleIdentifier = _ref4.bundleIdentifier,
            username = _ref4.username,
            experienceName = _ref4.experienceName;
        var authData;
        return (_regenerator || _load_regenerator()).default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (this.appleCtx) {
                  _context3.next = 7;
                  break;
                }

                _context3.next = 3;
                return (_appleApi || _load_appleApi()).setup();

              case 3:
                _context3.next = 5;
                return (_appleApi || _load_appleApi()).authenticate(this.options);

              case 5:
                authData = _context3.sent;

                this.appleCtx = (0, (_extends2 || _load_extends()).default)({}, authData, { bundleIdentifier: bundleIdentifier, username: username, experienceName: experienceName });

              case 7:
                return _context3.abrupt('return', this.appleCtx);

              case 8:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function getAppleCtx(_x) {
        return _ref3.apply(this, arguments);
      }

      return getAppleCtx;
    }()
  }, {
    key: 'prepareCredentials',
    value: function () {
      var _ref5 = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee4() {
        var projectMetadata, existingCredentials, missingCredentials;
        return (_regenerator || _load_regenerator()).default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                projectMetadata = {
                  username: this.user.username,
                  experienceName: '@' + this.user.username + '/' + this.manifest.slug,
                  sdkVersion: this.manifest.sdkVersion,
                  bundleIdentifier: (0, (_get || _load_get()).default)(this.manifest, 'ios.bundleIdentifier')
                };
                _context4.next = 3;
                return this.clearAndRevokeCredentialsIfRequested(projectMetadata);

              case 3:
                _context4.next = 5;
                return (_credentials || _load_credentials()).fetch(projectMetadata);

              case 5:
                existingCredentials = _context4.sent;
                missingCredentials = (_credentials || _load_credentials()).determineMissingCredentials(existingCredentials);

                if (!missingCredentials) {
                  _context4.next = 10;
                  break;
                }

                _context4.next = 10;
                return this.produceMissingCredentials(projectMetadata, missingCredentials);

              case 10:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function prepareCredentials() {
        return _ref5.apply(this, arguments);
      }

      return prepareCredentials;
    }()
  }, {
    key: 'clearAndRevokeCredentialsIfRequested',
    value: function () {
      var _ref6 = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee5(projectMetadata) {
        var _options, clearCredentials, clearDistCert, clearPushKey, clearPushCert, clearProvisioningProfile, shouldClearAnything, credsToClear;

        return (_regenerator || _load_regenerator()).default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _options = this.options, clearCredentials = _options.clearCredentials, clearDistCert = _options.clearDistCert, clearPushKey = _options.clearPushKey, clearPushCert = _options.clearPushCert, clearProvisioningProfile = _options.clearProvisioningProfile;
                shouldClearAnything = clearCredentials || clearDistCert || clearPushKey || clearPushCert || clearProvisioningProfile;

                if (!shouldClearAnything) {
                  _context5.next = 14;
                  break;
                }

                _context5.next = 5;
                return this.clearCredentialsIfRequested(projectMetadata);

              case 5:
                credsToClear = _context5.sent;

                if (!(credsToClear && this.options.revokeCredentials)) {
                  _context5.next = 14;
                  break;
                }

                _context5.t0 = _credentials || _load_credentials();
                _context5.next = 10;
                return this.getAppleCtx(projectMetadata);

              case 10:
                _context5.t1 = _context5.sent;
                _context5.t2 = (0, (_keys || _load_keys()).default)(credsToClear);
                _context5.next = 14;
                return _context5.t0.revoke.call(_context5.t0, _context5.t1, _context5.t2);

              case 14:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function clearAndRevokeCredentialsIfRequested(_x2) {
        return _ref6.apply(this, arguments);
      }

      return clearAndRevokeCredentialsIfRequested;
    }()
  }, {
    key: 'clearCredentialsIfRequested',
    value: function () {
      var _ref7 = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee6(projectMetadata) {
        var credsToClear;
        return (_regenerator || _load_regenerator()).default.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                credsToClear = this.determineCredentialsToClear();

                if (!credsToClear) {
                  _context6.next = 4;
                  break;
                }

                _context6.next = 4;
                return (_credentials || _load_credentials()).clear(projectMetadata, credsToClear);

              case 4:
                return _context6.abrupt('return', credsToClear);

              case 5:
              case 'end':
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function clearCredentialsIfRequested(_x3) {
        return _ref7.apply(this, arguments);
      }

      return clearCredentialsIfRequested;
    }()
  }, {
    key: 'determineCredentialsToClear',
    value: function determineCredentialsToClear() {
      var _options2 = this.options,
          clearCredentials = _options2.clearCredentials,
          clearDistCert = _options2.clearDistCert,
          clearPushKey = _options2.clearPushKey,
          clearPushCert = _options2.clearPushCert,
          clearProvisioningProfile = _options2.clearProvisioningProfile;

      var credsToClearAll = {
        distributionCert: Boolean(clearCredentials || clearDistCert),
        pushKey: Boolean(clearCredentials || clearPushKey),
        // TODO: backward compatibility, remove when all users migrate to push keys
        pushCert: Boolean(clearCredentials || clearPushCert),
        provisioningProfile: Boolean(clearCredentials || clearProvisioningProfile)
      };
      var credsToClear = (0, (_pickBy || _load_pickBy()).default)(credsToClearAll);
      return (0, (_isEmpty || _load_isEmpty()).default)(credsToClear) ? null : credsToClear;
    }
  }, {
    key: 'produceMissingCredentials',
    value: function () {
      var _ref8 = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee7(projectMetadata, missingCredentials) {
        var appleCtx, metadata, _ref9, userCredentialsIds, userProvidedCredentials, toGenerate, metadataFromPrompt, generatedCredentials, newCredentials;

        return (_regenerator || _load_regenerator()).default.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return this.getAppleCtx(projectMetadata);

              case 2:
                appleCtx = _context7.sent;
                metadata = {};

                if (!(missingCredentials.includes((_constants2 || _load_constants2()).PROVISIONING_PROFILE) && !missingCredentials.includes((_constants2 || _load_constants2()).DISTRIBUTION_CERT))) {
                  _context7.next = 8;
                  break;
                }

                _context7.next = 7;
                return (_credentials || _load_credentials()).getDistributionCertSerialNumber(projectMetadata);

              case 7:
                metadata.distCertSerialNumber = _context7.sent;

              case 8:
                _context7.next = 10;
                return (_credentials || _load_credentials()).prompt(appleCtx, this.options, missingCredentials);

              case 10:
                _ref9 = _context7.sent;
                userCredentialsIds = _ref9.userCredentialsIds;
                userProvidedCredentials = _ref9.credentials;
                toGenerate = _ref9.toGenerate;
                metadataFromPrompt = _ref9.metadata;


                (0, (_assign || _load_assign()).default)(metadata, metadataFromPrompt);

                _context7.next = 18;
                return (_credentials || _load_credentials()).generate(appleCtx, toGenerate, metadata);

              case 18:
                generatedCredentials = _context7.sent;
                newCredentials = (0, (_extends2 || _load_extends()).default)({}, userProvidedCredentials, generatedCredentials, {
                  teamId: appleCtx.team.id
                });
                _context7.next = 22;
                return (_credentials || _load_credentials()).update(projectMetadata, newCredentials, userCredentialsIds);

              case 22:
              case 'end':
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function produceMissingCredentials(_x4, _x5) {
        return _ref8.apply(this, arguments);
      }

      return produceMissingCredentials;
    }()
  }, {
    key: 'ensureProjectIsPublished',
    value: function () {
      var _ref10 = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee8() {
        return (_regenerator || _load_regenerator()).default.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                if (!this.options.publicUrl) {
                  _context8.next = 4;
                  break;
                }

                return _context8.abrupt('return', undefined);

              case 4:
                _context8.next = 6;
                return this.ensureReleaseExists((_constants || _load_constants()).PLATFORMS.IOS);

              case 6:
                return _context8.abrupt('return', _context8.sent);

              case 7:
              case 'end':
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function ensureProjectIsPublished() {
        return _ref10.apply(this, arguments);
      }

      return ensureProjectIsPublished;
    }()
  }, {
    key: 'platform',
    value: function platform() {
      return (_constants || _load_constants()).PLATFORMS.IOS;
    }

    // validates whether the icon doesn't have transparency

  }, {
    key: 'validateIcon',
    value: function () {
      var _ref11 = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee9() {
        var icon;
        return (_regenerator || _load_regenerator()).default.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                _context9.prev = 0;
                icon = (0, (_get || _load_get()).default)(this.manifest, 'ios.icon', this.manifest.icon);
                _context9.next = 4;
                return (0, (_image || _load_image()).ensurePNGIsNotTransparent)(icon);

              case 4:
                _context9.next = 12;
                break;

              case 6:
                _context9.prev = 6;
                _context9.t0 = _context9['catch'](0);

                if (!(_context9.t0 instanceof (_xdl || _load_xdl()).XDLError)) {
                  _context9.next = 12;
                  break;
                }

                throw _context9.t0;

              case 12:
              case 'end':
                return _context9.stop();
            }
          }
        }, _callee9, this, [[0, 6]]);
      }));

      function validateIcon() {
        return _ref11.apply(this, arguments);
      }

      return validateIcon;
    }()
  }]);
  return IOSBuilder;
}((_BaseBuilder2 || _load_BaseBuilder()).default);

exports.default = IOSBuilder;
module.exports = exports['default'];
//# sourceMappingURL=../../../__sourcemaps__/commands/build/ios/IOSBuilder.js.map
