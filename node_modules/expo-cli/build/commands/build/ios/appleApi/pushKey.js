'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator;

function _load_regenerator() {
  return _regenerator = _interopRequireDefault(require('babel-runtime/regenerator'));
}

var _asyncToGenerator2;

function _load_asyncToGenerator() {
  return _asyncToGenerator2 = _interopRequireDefault(require('babel-runtime/helpers/asyncToGenerator'));
}

var _get;

function _load_get() {
  return _get = _interopRequireDefault(require('lodash/get'));
}

var _dateformat;

function _load_dateformat() {
  return _dateformat = _interopRequireDefault(require('dateformat'));
}

var _chalk;

function _load_chalk() {
  return _chalk = _interopRequireDefault(require('chalk'));
}

var _fastlane;

function _load_fastlane() {
  return _fastlane = require('./fastlane');
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var APPLE_KEYS_TOO_MANY_GENERATED_ERROR = '\nYou can have only ' + (_chalk || _load_chalk()).default.underline('two') + ' Apple Keys generated on your Apple Developer account.\nPlease revoke the old ones or reuse existing from your other apps.\nPlease remember that Apple Keys are not application specific!\n';

var createManager = function createManager(_ref) {
  var appleId = _ref.appleId,
      appleIdPassword = _ref.appleIdPassword,
      team = _ref.team;
  return {
    list: function list() {
      var _this = this;

      return (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee() {
        var args, _ref2, keys;

        return (_regenerator || _load_regenerator()).default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                args = ['list', appleId, appleIdPassword, team.id];
                _context.next = 3;
                return (0, (_fastlane || _load_fastlane()).runAction)((_fastlane || _load_fastlane()).travelingFastlane.managePushKeys, args);

              case 3:
                _ref2 = _context.sent;
                keys = _ref2.keys;
                return _context.abrupt('return', keys);

              case 6:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, _this);
      }))();
    },
    create: function create(metadata) {
      var _this2 = this;

      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Expo Push Notifications Key ' + (0, (_dateformat || _load_dateformat()).default)('yyyymmddHHMMss');
      return (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee2() {
        var args, userString, error;
        return (_regenerator || _load_regenerator()).default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.prev = 0;
                args = ['create', appleId, appleIdPassword, team.id, name];
                _context2.next = 4;
                return (0, (_fastlane || _load_fastlane()).runAction)((_fastlane || _load_fastlane()).travelingFastlane.managePushKeys, args);

              case 4:
                return _context2.abrupt('return', _context2.sent);

              case 7:
                _context2.prev = 7;
                _context2.t0 = _context2['catch'](0);
                userString = (0, (_get || _load_get()).default)(_context2.t0, 'rawDump.userString');

                if (!(userString && userString.match(/maximum allowed number of Keys/))) {
                  _context2.next = 14;
                  break;
                }

                error = new Error(APPLE_KEYS_TOO_MANY_GENERATED_ERROR);

                error.code = 'APPLE_KEYS_TOO_MANY_GENERATED_ERROR';
                throw error;

              case 14:
                throw _context2.t0;

              case 15:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, _this2, [[0, 7]]);
      }))();
    },
    revoke: function revoke(ids) {
      var _this3 = this;

      return (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee3() {
        var args;
        return (_regenerator || _load_regenerator()).default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                args = ['revoke', appleId, appleIdPassword, team.id, ids.join(',')];
                _context3.next = 3;
                return (0, (_fastlane || _load_fastlane()).runAction)((_fastlane || _load_fastlane()).travelingFastlane.managePushKeys, args);

              case 3:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, _this3);
      }))();
    },
    format: function format(_ref3) {
      var id = _ref3.id,
          name = _ref3.name;

      return name + ' - ID: ' + id;
    }
  };
};

exports.default = createManager;
module.exports = exports['default'];
//# sourceMappingURL=../../../../__sourcemaps__/commands/build/ios/appleApi/pushKey.js.map
