'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator;

function _load_regenerator() {
  return _regenerator = _interopRequireDefault(require('babel-runtime/regenerator'));
}

var _slicedToArray2;

function _load_slicedToArray() {
  return _slicedToArray2 = _interopRequireDefault(require('babel-runtime/helpers/slicedToArray'));
}

var _asyncToGenerator2;

function _load_asyncToGenerator() {
  return _asyncToGenerator2 = _interopRequireDefault(require('babel-runtime/helpers/asyncToGenerator'));
}

var setup = function () {
  var _ref = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee() {
    var _release$match, _release$match2, version;

    return (_regenerator || _load_regenerator()).default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (!setupCompleted) {
              _context.next = 2;
              break;
            }

            return _context.abrupt('return');

          case 2:
            if (!(process.platform === 'win32')) {
              _context.next = 14;
              break;
            }

            _release$match = (0, _os.release)().match(/\d./), _release$match2 = (0, (_slicedToArray2 || _load_slicedToArray()).default)(_release$match, 1), version = _release$match2[0];

            if (!(version !== '10')) {
              _context.next = 6;
              break;
            }

            throw new Error('Must be on at least Windows version 10 for WSL support to work');

          case 6:
            _context.prev = 6;
            _context.next = 9;
            return (_fsExtra || _load_fsExtra()).default.access((_fastlane || _load_fastlane()).WSL_BASH_PATH, (_fsExtra || _load_fsExtra()).default.constants.F_OK);

          case 9:
            _context.next = 14;
            break;

          case 11:
            _context.prev = 11;
            _context.t0 = _context['catch'](6);
            throw new Error(ENABLE_WSL);

          case 14:

            setupCompleted = true;

          case 15:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this, [[6, 11]]);
  }));

  return function setup() {
    return _ref.apply(this, arguments);
  };
}();

var _os = require('os');

var _fsExtra;

function _load_fsExtra() {
  return _fsExtra = _interopRequireDefault(require('fs-extra'));
}

var _fastlane;

function _load_fastlane() {
  return _fastlane = require('./fastlane');
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ENABLE_WSL = '\nDoes not seem like WSL is enabled on this machine. Download from\nthe Windows app store a distribution of Linux, then in an admin powershell run:\n\nEnable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux\n\nand run the new Linux installation at least once\n';

var setupCompleted = false;

exports.default = setup;
module.exports = exports['default'];
//# sourceMappingURL=../../../../__sourcemaps__/commands/build/ios/appleApi/setup.js.map
