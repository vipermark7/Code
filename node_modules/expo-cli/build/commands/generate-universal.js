'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getIterator2;

function _load_getIterator() {
  return _getIterator2 = _interopRequireDefault(require('babel-runtime/core-js/get-iterator'));
}

var _toConsumableArray2;

function _load_toConsumableArray() {
  return _toConsumableArray2 = _interopRequireDefault(require('babel-runtime/helpers/toConsumableArray'));
}

var _regenerator;

function _load_regenerator() {
  return _regenerator = _interopRequireDefault(require('babel-runtime/regenerator'));
}

var _promise;

function _load_promise() {
  return _promise = _interopRequireDefault(require('babel-runtime/core-js/promise'));
}

var _asyncToGenerator2;

function _load_asyncToGenerator() {
  return _asyncToGenerator2 = _interopRequireDefault(require('babel-runtime/helpers/asyncToGenerator'));
}

var _path = _interopRequireDefault(require('path'));

var _child_process = _interopRequireDefault(require('child_process'));

var _targz;

function _load_targz() {
  return _targz = _interopRequireDefault(require('targz'));
}

var _fsExtra;

function _load_fsExtra() {
  return _fsExtra = _interopRequireDefault(require('fs-extra'));
}

var _klawSync;

function _load_klawSync() {
  return _klawSync = _interopRequireDefault(require('klaw-sync'));
}

var _jsonFile;

function _load_jsonFile() {
  return _jsonFile = _interopRequireDefault(require('@expo/json-file'));
}

var _CommandError;

function _load_CommandError() {
  return _CommandError = _interopRequireDefault(require('../CommandError'));
}

var _prompt;

function _load_prompt() {
  return _prompt = _interopRequireDefault(require('../prompt'));
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NPM_TEMPLATE_VERSION = '^1.0.1';
var TEMP_DIR_NAME = 'temp-expo-module-template';
var archive = void 0;

var decompress = function () {
  var _ref = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee() {
    return (_regenerator || _load_regenerator()).default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            return _context.abrupt('return', new (_promise || _load_promise()).default(function (resolve, reject) {
              (_targz || _load_targz()).default.decompress({
                src: archive,
                dest: TEMP_DIR_NAME
              }, function (error) {
                if (error) {
                  reject(error);
                } else {
                  resolve(null);
                }
              });
            }));

          case 1:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined);
  }));

  return function decompress() {
    return _ref.apply(this, arguments);
  };
}();

exports.default = function (program) {
  program.command('generate <template>').description('Generate a module from a template.').asyncAction(function () {
    var _ref2 = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)( /*#__PURE__*/(_regenerator || _load_regenerator()).default.mark(function _callee2(template) {
      var configuration, outputDir, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, file, contents, newContents, javaDir, placeholderPath;

      return (_regenerator || _load_regenerator()).default.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              if (!(template !== 'universal')) {
                _context2.next = 2;
                break;
              }

              throw new (_CommandError || _load_CommandError()).default('UNKNOWN_TEMPLATE', 'Template not found: \'' + template + '\'. Valid options are: universal');

            case 2:
              _context2.next = 4;
              return (0, (_prompt || _load_prompt()).default)([{
                name: 'jsName',
                message: 'How would you like to call your module in JS/npm? (eg. expo-camera)'
              }, {
                name: 'podName',
                message: 'How would you like to call your module in CocoaPods? (eg. EXCamera) (leave empty to not include iOS part)'
              }, {
                name: 'javaModule',
                message: 'How would you like to call your module in Java? (eg. expo.modules.camera)'
              }]);

            case 4:
              configuration = _context2.sent;


              archive = _child_process.default.execSync('npm pack expo-module-template@' + NPM_TEMPLATE_VERSION).toString().slice(0, -1);

              (_fsExtra || _load_fsExtra()).default.mkdirpSync(TEMP_DIR_NAME);
              _context2.next = 9;
              return decompress();

            case 9:

              (_fsExtra || _load_fsExtra()).default.unlinkSync(archive);
              outputDir = _path.default.resolve(configuration.jsName);
              _context2.next = 13;
              return (_fsExtra || _load_fsExtra()).default.copy(_path.default.join(TEMP_DIR_NAME, 'package'), outputDir);

            case 13:
              _context2.next = 15;
              return (_fsExtra || _load_fsExtra()).default.remove(TEMP_DIR_NAME);

            case 15:
              if (!configuration.podName) {
                _context2.next = 23;
                break;
              }

              (_fsExtra || _load_fsExtra()).default.renameSync(_path.default.join(outputDir, 'ios', 'EXModuleTemplate.podspec'), _path.default.join(outputDir, 'ios', configuration.podName + '.podspec'));

              (_fsExtra || _load_fsExtra()).default.renameSync(_path.default.join(outputDir, 'ios', 'EXModuleTemplate', 'EXModuleTemplate.h'), _path.default.join(outputDir, 'ios', 'EXModuleTemplate', configuration.podName + '.h'));

              (_fsExtra || _load_fsExtra()).default.renameSync(_path.default.join(outputDir, 'ios', 'EXModuleTemplate', 'EXModuleTemplate.m'), _path.default.join(outputDir, 'ios', 'EXModuleTemplate', configuration.podName + '.m'));

              (_fsExtra || _load_fsExtra()).default.renameSync(_path.default.join(outputDir, 'ios', 'EXModuleTemplate'), _path.default.join(outputDir, 'ios', '' + configuration.podName));

              (_fsExtra || _load_fsExtra()).default.renameSync(_path.default.join(outputDir, 'ios', 'EXModuleTemplate.xcodeproj'), _path.default.join(outputDir, 'ios', configuration.podName + '.xcodeproj'));
              _context2.next = 25;
              break;

            case 23:
              _context2.next = 25;
              return (_fsExtra || _load_fsExtra()).default.remove(_path.default.join(outputDir, 'ios'));

            case 25:
              _iteratorNormalCompletion = true;
              _didIteratorError = false;
              _iteratorError = undefined;
              _context2.prev = 28;
              _iterator = (0, (_getIterator2 || _load_getIterator()).default)((0, (_klawSync || _load_klawSync()).default)(outputDir, { nodir: true }));

            case 30:
              if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {
                _context2.next = 42;
                break;
              }

              file = _step.value;
              _context2.next = 34;
              return (_fsExtra || _load_fsExtra()).default.readFile(file.path, 'utf8');

            case 34:
              contents = _context2.sent;
              newContents = contents.replace(/expo-module-template/g, configuration.jsName).replace(/expo\.modules\.template/g, configuration.javaModule).replace(/EXModuleTemplate/g, configuration.podName);

              if (!(newContents !== contents)) {
                _context2.next = 39;
                break;
              }

              _context2.next = 39;
              return (_fsExtra || _load_fsExtra()).default.writeFile(file.path, newContents);

            case 39:
              _iteratorNormalCompletion = true;
              _context2.next = 30;
              break;

            case 42:
              _context2.next = 48;
              break;

            case 44:
              _context2.prev = 44;
              _context2.t0 = _context2['catch'](28);
              _didIteratorError = true;
              _iteratorError = _context2.t0;

            case 48:
              _context2.prev = 48;
              _context2.prev = 49;

              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }

            case 51:
              _context2.prev = 51;

              if (!_didIteratorError) {
                _context2.next = 54;
                break;
              }

              throw _iteratorError;

            case 54:
              return _context2.finish(51);

            case 55:
              return _context2.finish(48);

            case 56:
              _context2.next = 58;
              return (_jsonFile || _load_jsonFile()).default.setAsync(_path.default.join(configuration.jsName, 'package.json'), 'version', '1.0.0');

            case 58:
              javaDir = _path.default.join.apply(_path.default, [configuration.jsName, 'android', 'src', 'main', 'java'].concat((0, (_toConsumableArray2 || _load_toConsumableArray()).default)(configuration.javaModule.split('.'))));

              (_fsExtra || _load_fsExtra()).default.mkdirpSync(javaDir);

              placeholderPath = _path.default.join(javaDir, 'Placeholder.java');

              (_fsExtra || _load_fsExtra()).default.appendFileSync(placeholderPath, 'package ' + configuration.javaModule + ';\n');
              (_fsExtra || _load_fsExtra()).default.appendFileSync(placeholderPath, 'class Placeholder {}');

            case 63:
            case 'end':
              return _context2.stop();
          }
        }
      }, _callee2, undefined, [[28, 44, 48, 56], [49,, 51, 55]]);
    }));

    return function (_x) {
      return _ref2.apply(this, arguments);
    };
  }());
};

module.exports = exports['default'];
//# sourceMappingURL=../__sourcemaps__/commands/generate-universal.js.map
