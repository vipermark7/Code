{"version":3,"sources":["Api.js"],"names":["async","url","method","requestBody","requestOptions","returnEntireResponse","clientId","await","Session","clientIdAsync","session","UserManager","getSessionAsync","skipValidationToken","process","env","let","headers","sessionSecret","options","maxContentLength","MAX_CONTENT_LENGTH","data","formData","isNode","convertedFormData","_convertFormDataToBuffer","getHeaders","response","axios","request","Error","responseBody","responseObj","_","isString","JSON","parse","e","ErrorCode","INVALID_JSON","err","ApiError","code","serverError","_callMethodAsync","Promise","resolve","pipe","concat","encoding","outputPath","progressFunction","retryFunction","promptShown","currentProgress","cancel","token","CancelToken","source","warningTimer","setTimeout","TIMER_DURATION","config","timeout","TIMEOUT","responseType","cancelToken","onDownloadProgress","progressEvent","roundedProgress","Math","floor","loaded","total","clearTimeout","fs","writeFile","Buffer","from","tmpPath","totalDownloadSize","downloadProgress","on","chunk","length","createWriteStream","rename","_downloadAsync","message","_isApiError","_rootBaseUrl","Config","api","scheme","host","_apiBaseUrl","rootBaseUrl","port","ApiClient","static","callMethodAsync","methodName","args","encodeURIComponent","stringify","callPathAsync","path","versionsAsync","_versionCache","getAsync","xdlSchemaAsync","sdkVersion","_schemaCaches","hasOwnProperty","join","__dirname","sdkVersionsAsync","sdkVersions","turtleSdkVersionsAsync","turtleSdkVersions","downloadAsync","extract","dotExpoHomeDirectory","UserSettings","Extract","extractAsync","rimraf","sync"],"mappings":"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","file":"../Api.js","sourcesContent":["/**\n * @flow\n */\n\nimport _ from 'lodash';\nimport fs from 'fs-extra';\nimport rimraf from 'rimraf';\nimport path from 'path';\nimport axios from 'axios';\nimport concat from 'concat-stream';\n\nimport { Cacher } from './tools/FsCache';\nimport Config from './Config';\nimport { isNode } from './tools/EnvironmentHelper';\nimport ErrorCode from './ErrorCode';\nimport * as Extract from './Extract';\nimport * as Session from './Session';\nimport UserManager from './User';\nimport UserSettings from './UserSettings';\nimport XDLError from './XDLError';\n\nconst MAX_CONTENT_LENGTH = 100 /* MB */ * 1024 * 1024;\n\nconst TIMER_DURATION = 30000;\nconst TIMEOUT = 3600000;\n\nfunction ApiError(code, message) {\n  let err = new Error(message);\n  // $FlowFixMe error has no property code\n  err.code = code;\n  // $FlowFixMe error has no property _isApiError\n  err._isApiError = true;\n  return err;\n}\n\n// These aren't constants because some commands switch between staging and prod\nfunction _rootBaseUrl() {\n  return `${Config.api.scheme}://${Config.api.host}`;\n}\n\nfunction _apiBaseUrl() {\n  let rootBaseUrl = _rootBaseUrl();\n  if (Config.api.port) {\n    rootBaseUrl += ':' + Config.api.port;\n  }\n  return rootBaseUrl + '/--/api';\n}\n\nasync function _callMethodAsync(\n  url,\n  method,\n  requestBody,\n  requestOptions,\n  returnEntireResponse = false\n): Promise<any> {\n  const clientId = await Session.clientIdAsync();\n  const session = await UserManager.getSessionAsync();\n  const skipValidationToken = process.env['EXPO_SKIP_MANIFEST_VALIDATION_TOKEN'];\n\n  let headers: any = {\n    'Exp-ClientId': clientId,\n  };\n\n  if (skipValidationToken) {\n    headers['Exp-Skip-Manifest-Validation-Token'] = skipValidationToken;\n  }\n\n  if (session) {\n    headers['Expo-Session'] = session.sessionSecret;\n  }\n\n  let options = {\n    url,\n    method: method || 'get',\n    headers,\n    maxContentLength: MAX_CONTENT_LENGTH,\n  };\n\n  if (requestBody) {\n    options = {\n      ...options,\n      data: requestBody,\n    };\n  }\n\n  if (requestOptions) {\n    if (requestOptions.formData) {\n      let data = requestOptions.formData;\n      if (isNode()) {\n        let convertedFormData = await _convertFormDataToBuffer(requestOptions.formData);\n        data = convertedFormData.data;\n        options.headers = {\n          ...options.headers,\n          ...requestOptions.formData.getHeaders(),\n        };\n      }\n      options = { ...options, data };\n    } else {\n      options = { ...options, ...requestOptions };\n    }\n  }\n  let response = await axios.request(options);\n  if (!response) {\n    throw new Error('Unexpected error: Request failed.');\n  }\n  let responseBody = response.data;\n  var responseObj;\n  if (_.isString(responseBody)) {\n    try {\n      responseObj = JSON.parse(responseBody);\n    } catch (e) {\n      throw new XDLError(\n        ErrorCode.INVALID_JSON,\n        'Invalid JSON returned from API: ' + e + '. Response body: ' + responseBody\n      );\n    }\n  } else {\n    responseObj = responseBody;\n  }\n  if (responseObj.err) {\n    let err = ApiError(responseObj.code || 'API_ERROR', 'API Response Error: ' + responseObj.err);\n    // $FlowFixMe can't add arbitrary properties to error\n    err.serverError = responseObj.err;\n    throw err;\n  } else {\n    return returnEntireResponse ? response : responseObj;\n  }\n}\n\nasync function _convertFormDataToBuffer(formData) {\n  return new Promise(resolve => {\n    formData.pipe(concat({ encoding: 'buffer' }, data => resolve({ data })));\n  });\n}\n\nasync function _downloadAsync(url, outputPath, progressFunction, retryFunction) {\n  let promptShown = false;\n  let currentProgress = 0;\n\n  let { cancel, token } = axios.CancelToken.source();\n\n  let warningTimer = setTimeout(() => {\n    if (retryFunction) {\n      retryFunction(cancel);\n    }\n    promptShown = true;\n  }, TIMER_DURATION);\n\n  let config;\n  // Checks if the call is being made in XDE or exp. (If XDE = XHR, if exp = HTTP);\n  if (!isNode()) {\n    config = {\n      timeout: TIMEOUT,\n      responseType: 'arraybuffer',\n      cancelToken: token,\n      onDownloadProgress: progressEvent => {\n        const roundedProgress = Math.floor((progressEvent.loaded / progressEvent.total) * 100);\n        if (currentProgress !== roundedProgress) {\n          currentProgress = roundedProgress;\n          clearTimeout(warningTimer);\n          if (!promptShown) {\n            warningTimer = setTimeout(() => {\n              if (retryFunction) {\n                retryFunction(cancel);\n              }\n              promptShown = true;\n            }, TIMER_DURATION);\n          }\n        }\n        if (progressFunction) {\n          progressFunction(roundedProgress);\n        }\n      },\n    };\n    let response = await axios(url, config);\n    await fs.writeFile(outputPath, Buffer.from(response.data));\n    clearTimeout(warningTimer);\n  } else {\n    const tmpPath = `${outputPath}.download`;\n    config = {\n      timeout: TIMEOUT,\n      responseType: 'stream',\n      cancelToken: token,\n    };\n    let response = await axios(url, config);\n    await new Promise(resolve => {\n      let totalDownloadSize = response.data.headers['content-length'];\n      let downloadProgress = 0;\n      response.data\n        .on('data', chunk => {\n          downloadProgress += chunk.length;\n          const roundedProgress = Math.floor((downloadProgress / totalDownloadSize) * 100);\n          if (currentProgress !== roundedProgress) {\n            currentProgress = roundedProgress;\n            clearTimeout(warningTimer);\n            if (!promptShown) {\n              warningTimer = setTimeout(() => {\n                if (retryFunction) {\n                  retryFunction(cancel);\n                }\n                promptShown = true;\n              }, TIMER_DURATION);\n            }\n            if (progressFunction) {\n              progressFunction(roundedProgress);\n            }\n          }\n        })\n        .on('end', () => {\n          clearTimeout(warningTimer);\n          if (progressFunction && currentProgress !== 100) {\n            progressFunction(100);\n          }\n          resolve();\n        })\n        .pipe(fs.createWriteStream(tmpPath));\n    });\n    await fs.rename(tmpPath, outputPath);\n  }\n}\n\nexport default class ApiClient {\n  static host: string = Config.api.host;\n  static port: number = Config.api.port || 80;\n\n  static _versionCache = new Cacher(\n    () =>\n      ApiClient.callPathAsync('/--/api/v2/versions', null, null, {\n        headers: {\n          'Expo-Session': '',\n        },\n      }),\n    'versions.json',\n    0,\n    path.join(__dirname, '../caches/versions.json')\n  );\n\n  static _schemaCaches = {};\n\n  static async callMethodAsync(\n    methodName: string,\n    args: Array<*>,\n    method: string,\n    requestBody: ?Object,\n    requestOptions: ?Object = {},\n    returnEntireResponse: boolean = false\n  ): Promise<any> {\n    let url =\n      _apiBaseUrl() +\n      '/' +\n      encodeURIComponent(methodName) +\n      '/' +\n      encodeURIComponent(JSON.stringify(args));\n    return _callMethodAsync(url, method, requestBody, requestOptions, returnEntireResponse);\n  }\n\n  static async callPathAsync(\n    path: string,\n    method: ?string,\n    requestBody: ?Object,\n    requestOptions: ?Object = {}\n  ) {\n    let url = _rootBaseUrl() + path;\n    return _callMethodAsync(url, method, requestBody, requestOptions);\n  }\n\n  static async versionsAsync() {\n    return await ApiClient._versionCache.getAsync();\n  }\n\n  static async xdlSchemaAsync(sdkVersion) {\n    if (!ApiClient._schemaCaches.hasOwnProperty(sdkVersion)) {\n      ApiClient._schemaCaches[sdkVersion] = new Cacher(\n        async () => {\n          return await ApiClient.callPathAsync(`/--/xdl-schema/${sdkVersion}`);\n        },\n        `schema-${sdkVersion}.json`,\n        0,\n        path.join(__dirname, `../caches/schema-${sdkVersion}.json`)\n      );\n    }\n\n    return await ApiClient._schemaCaches[sdkVersion].getAsync();\n  }\n\n  static async sdkVersionsAsync() {\n    const { sdkVersions } = await ApiClient.versionsAsync();\n    return sdkVersions;\n  }\n\n  static async turtleSdkVersionsAsync() {\n    const { turtleSdkVersions } = await ApiClient.versionsAsync();\n    return turtleSdkVersions;\n  }\n\n  static async downloadAsync(url, outputPath, options = {}, progressFunction, retryFunction) {\n    if (options.extract) {\n      let dotExpoHomeDirectory = UserSettings.dotExpoHomeDirectory();\n      let tmpPath = path.join(dotExpoHomeDirectory, 'tmp-download-file');\n      await _downloadAsync(url, tmpPath);\n      await Extract.extractAsync(tmpPath, outputPath);\n      rimraf.sync(tmpPath);\n    } else {\n      await _downloadAsync(url, outputPath, progressFunction, retryFunction);\n    }\n  }\n}\n"],"sourceRoot":"/xdl@52.0.12/src"}