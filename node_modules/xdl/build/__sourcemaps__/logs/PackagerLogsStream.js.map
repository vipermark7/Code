{"version":3,"sources":["logs/PackagerLogsStream.js"],"names":["PackagerLogsStream","constructor","projectRoot","getCurrentOpenProjectId","updateLogs","onStartBuildBundle","onProgressBuildBundle","onFinishBuildBundle","getSnippetForError","_resetState","_logsToAdd","_handleBundleTransformEvent","chunk","let","msg","type","_metroEventType","_handleNewBundleTransformStarted","_bundleBuildChunkID","_handleUpdateBundleTransformProgress","console","log","_enqueueFlushLogsToAdd","func","_updateLogs","logs","length","nextLogs","concat","isNode","setImmediate","_cleanUpNodeErrors","match","replace","_projectRoot","_getCurrentOpenProjectId","_onStartBuildBundle","_onProgressBuildBundle","_onFinishBuildBundle","_getSnippetForError","_attachLoggerStream","projectId","ProjectUtils","attachLoggerStream","stream","write","tag","_maybeParseMsgJSON","_formatMsg","_handleMetroEvent","_enqueueAppendLogChunk","originalChunk","includes","getenv","boolish","test","port","code","error","_formatModuleResolutionError","_formatBundlingError","level","Logger","ERROR","reason","_formatWorkerChunk","JSON","stringify","id","_bundleBuildStart","Date","progressChunk","percentProgress","bundleComplete","bundleError","bundleBuildEnd","Error","Math","floor","transformedFileCount","totalFileCount","description","message","duration","forEach","exec","originModulePath","moduleName","relativePath","path","relative","DOCS_PAGE_URL","NODE_STDLIB_MODULES","errors","filename","escapedFilename","escapeStringRegexp","RegExp","chalk","red","snippet","origin","lines","split","splice","map","line","join","shouldHide","push","parsedMsg","parse","e","trim"],"mappings":"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","file":"../../logs/PackagerLogsStream.js","sourcesContent":["/* @flow */\nimport path from 'path';\nimport escapeStringRegexp from 'escape-string-regexp';\nimport chalk from 'chalk';\nimport getenv from 'getenv';\nimport { trim } from 'lodash';\n\nimport * as ProjectUtils from '../project/ProjectUtils';\nimport Logger from '../Logger';\nimport { isNode } from '../tools/EnvironmentHelper';\n\ntype ChunkT =\n  | {\n      tag: 'expo' | 'device',\n      id: string,\n      shouldHide: boolean,\n      msg: any,\n      level: number,\n    }\n  | {\n      tag: 'metro',\n      id: string,\n      shouldHide: boolean,\n      msg: ReportableEvent,\n      level: number,\n    };\n\ntype LogUpdater = (logState: Array<ChunkT>) => Array<ChunkT>;\n\ntype Error =\n  | {\n      originModulePath: string,\n      message: string,\n      errors: Array<Object>,\n    }\n  | {\n      type: 'TransformError',\n      snippet: string,\n      lineNumber: number,\n      column: number,\n      filename: string,\n      errors: Array<Object>,\n    };\n\n// Metro reporter types\n// https://github.com/facebook/metro/blob/2a327fb19dd62169ab3ae9069011d8a599cfcf3e/packages/metro/src/lib/reporting.js\ntype GlobalCacheDisabledReason = 'too_many_errors' | 'too_many_misses';\ntype BundleDetails = {\n  entryFile: string,\n  platform: string,\n  dev: boolean,\n  minify: boolean,\n  bundleType: string,\n};\ntype ReportableEvent =\n  | {\n      port: ?number,\n      // $FlowFixMe: $ReadOnlyArray not recognized\n      projectRoots: $ReadOnlyArray<string>,\n      type: 'initialize_started',\n    }\n  | {\n      type: 'initialize_done',\n    }\n  | {\n      type: 'initialize_failed',\n      port: number,\n      error: Error,\n    }\n  | {\n      buildID: string,\n      type: 'bundle_build_done',\n    }\n  | {\n      buildID: string,\n      type: 'bundle_build_failed',\n    }\n  | {\n      buildID: string,\n      bundleDetails: BundleDetails,\n      type: 'bundle_build_started',\n    }\n  | {\n      error: Error,\n      type: 'bundling_error',\n    }\n  | {\n      type: 'dep_graph_loading',\n    }\n  | {\n      type: 'dep_graph_loaded',\n    }\n  | {\n      buildID: string,\n      type: 'bundle_transform_progressed',\n      transformedFileCount: number,\n      totalFileCount: number,\n    }\n  | {\n      type: 'global_cache_error',\n      error: Error,\n    }\n  | {\n      type: 'global_cache_disabled',\n      reason: GlobalCacheDisabledReason,\n    }\n  | {\n      type: 'transform_cache_reset',\n    }\n  | {\n      type: 'worker_stdout_chunk',\n      chunk: string,\n    }\n  | {\n      type: 'worker_stderr_chunk',\n      chunk: string,\n    }\n  | {\n      type: 'hmr_client_error',\n      error: Error,\n    };\n\nexport default class PackagerLogsStream {\n  _projectRoot: string;\n  _getCurrentOpenProjectId: () => any;\n  _updateLogs: (updater: LogUpdater) => void;\n  _logsToAdd: Array<ChunkT>;\n  _bundleBuildChunkID: ?number;\n  _onStartBuildBundle: ?Function;\n  _onProgressBuildBundle: ?Function;\n  _onFinishBuildBundle: ?Function;\n  _onFailBuildBundle: ?Function;\n  _getSnippetForError: ?(error: Error) => ?string;\n  _bundleBuildStart: ?Date;\n\n  _resetState = () => {\n    this._logsToAdd = [];\n  };\n\n  constructor({\n    projectRoot,\n    getCurrentOpenProjectId,\n    updateLogs,\n    onStartBuildBundle,\n    onProgressBuildBundle,\n    onFinishBuildBundle,\n    getSnippetForError,\n  }: {\n    projectRoot: string,\n    getCurrentOpenProjectId?: () => any,\n    updateLogs: (updater: LogUpdater) => void,\n    onStartBuildBundle?: (chunk: any) => void,\n    onProgressBuildBundle?: (progress: number, start: Date, chunk: any) => void,\n    onFinishBuildBundle?: (error: ?string, start: ?Date, end: Date, chunk: any) => void,\n    getSnippetForError?: (error: Error) => ?string,\n  }) {\n    this._resetState();\n    this._projectRoot = projectRoot;\n    this._getCurrentOpenProjectId = getCurrentOpenProjectId || (() => 1);\n    this._updateLogs = updateLogs;\n\n    // Optional properties in case the consumer wants to handle updates on\n    // its own, eg: for a progress bar\n    this._onStartBuildBundle = onStartBuildBundle;\n    this._onProgressBuildBundle = onProgressBuildBundle;\n    this._onFinishBuildBundle = onFinishBuildBundle;\n\n    // Optional function for creating custom code frame snippet\n    // (e.g. with terminal colors) from a syntax error.\n    this._getSnippetForError = getSnippetForError;\n\n    this._attachLoggerStream();\n  }\n\n  _attachLoggerStream() {\n    let projectId = this._getCurrentOpenProjectId();\n\n    ProjectUtils.attachLoggerStream(this._projectRoot, {\n      stream: {\n        write: chunk => {\n          if (chunk.tag !== 'metro' && chunk.tag !== 'expo') {\n            return;\n          } else if (this._getCurrentOpenProjectId() !== projectId) {\n            // TODO: We should be confident that we are properly unsubscribing\n            // from the stream rather than doing a defensive check like this.\n            return;\n          }\n\n          chunk = this._maybeParseMsgJSON(chunk);\n          chunk = this._formatMsg(chunk);\n          chunk = this._cleanUpNodeErrors(chunk);\n          if (chunk.tag === 'metro') {\n            this._handleMetroEvent(chunk);\n          } else if (\n            typeof chunk.msg === 'string' &&\n            chunk.msg.match(/\\w/) &&\n            chunk.msg[0] !== '{'\n          ) {\n            this._enqueueAppendLogChunk(chunk);\n          }\n        },\n      },\n      type: 'raw',\n    });\n  }\n\n  _handleMetroEvent(originalChunk: ChunkT) {\n    const chunk = { ...originalChunk };\n    let { msg } = chunk;\n\n    if (typeof msg === 'string') {\n      if (msg.includes('HTTP/1.1') && !getenv.boolish('EXPO_DEBUG', false)) {\n        // Do nothing with this message - we want to filter out network requests logged by Metro.\n      } else {\n        // If Metro crashes for some reason, it may log an error message as a plain string to stderr.\n        this._enqueueAppendLogChunk(chunk);\n      }\n      return;\n    }\n    if (/^bundle_/.test(msg.type)) {\n      this._handleBundleTransformEvent(chunk);\n      return;\n    }\n    switch (msg.type) {\n      case 'initialize_started': // SDK >=23 (changed in Metro v0.17.0)\n      case 'initialize_packager_started': // SDK <=22\n        chunk._metroEventType = 'METRO_INITIALIZE_STARTED';\n        chunk.msg = msg.port\n          ? `Starting Metro Bundler on port ${msg.port}.`\n          : 'Starting Metro Bundler.';\n        break;\n      case 'initialize_done': // SDK >=23 (changed in Metro v0.17.0)\n      case 'initialize_packager_done': // SDK <=22\n        chunk.msg = `Metro Bundler ready.`;\n        break;\n      case 'initialize_failed': // SDK >=23 (changed in Metro v0.17.0)\n      case 'initialize_packager_failed': {\n        // SDK <=22\n        // $FlowFixMe\n        let code = msg.error.code;\n        chunk.msg =\n          code === 'EADDRINUSE'\n            ? `Metro Bundler can't listen on port ${msg.port}. The port is in use.`\n            : `Metro Bundler failed to start. (code: ${code})`;\n        break;\n      }\n      case 'bundling_error':\n        chunk.msg =\n          this._formatModuleResolutionError(msg.error) || this._formatBundlingError(msg.error);\n        chunk.level = Logger.ERROR;\n        break;\n      case 'transform_cache_reset':\n        chunk.msg =\n          'Your JavaScript transform cache is empty, rebuilding (this may take a minute).';\n        break;\n      case 'hmr_client_error':\n        chunk.msg = `A WebSocket client got a connection error. Please reload your device to get HMR working again.`;\n        break;\n      case 'global_cache_disabled':\n        if (msg.reason === 'too_many_errors') {\n          chunk.msg =\n            'The global cache is now disabled because it has been failing too many times.';\n        } else if (msg.reason === 'too_many_misses') {\n          chunk.msg = `The global cache is now disabled because it has been missing too many consecutive keys.`;\n        } else {\n          chunk.msg = `The global cache is now disabled. Reason: ${msg.reason}`;\n        }\n        break;\n      case 'worker_stdout_chunk':\n        chunk.msg = this._formatWorkerChunk('stdout', msg.chunk);\n        break;\n      case 'worker_stderr_chunk':\n        chunk.msg = this._formatWorkerChunk('stderr', msg.chunk);\n        break;\n      // Ignored events.\n      case 'dep_graph_loading':\n      case 'dep_graph_loaded':\n      case 'global_cache_error':\n        return;\n      default:\n        chunk.msg = `Unrecognized event: ${JSON.stringify(msg)}`;\n        break;\n    }\n    this._enqueueAppendLogChunk(chunk);\n  }\n\n  // Any event related to bundle building is handled here\n  _handleBundleTransformEvent = (chunk: any) => {\n    let { msg } = chunk;\n\n    if (msg.type === 'bundle_build_started') {\n      chunk._metroEventType = 'BUILD_STARTED';\n      this._handleNewBundleTransformStarted(chunk);\n    } else if (msg.type === 'bundle_transform_progressed') {\n      chunk._metroEventType = 'BUILD_PROGRESS';\n      this._bundleBuildChunkID\n        ? this._handleUpdateBundleTransformProgress(chunk)\n        : this._handleNewBundleTransformStarted(chunk);\n    } else if (msg.type === 'bundle_build_failed') {\n      chunk._metroEventType = 'BUILD_FAILED';\n      if (!this._bundleBuildChunkID) {\n        // maybe?\n      } else {\n        this._handleUpdateBundleTransformProgress(chunk);\n      }\n    } else if (msg.type === 'bundle_build_done') {\n      chunk._metroEventType = 'BUILD_DONE';\n      if (!this._bundleBuildChunkID) {\n        // maybe?\n      } else {\n        this._handleUpdateBundleTransformProgress(chunk);\n      }\n    } else {\n      // Unrecognized bundle_* message!\n      console.log('Unrecognized bundle_* message!', msg);\n    }\n  };\n\n  _handleNewBundleTransformStarted(chunk: any) {\n    if (this._bundleBuildChunkID) {\n      return;\n    }\n\n    this._bundleBuildChunkID = chunk.id;\n    this._bundleBuildStart = new Date();\n    chunk.msg = 'Building JavaScript bundle';\n\n    if (this._onStartBuildBundle) {\n      this._onStartBuildBundle(chunk);\n    } else {\n      this._enqueueAppendLogChunk(chunk);\n    }\n  }\n\n  _handleUpdateBundleTransformProgress(progressChunk: any) {\n    let { msg } = progressChunk;\n    let percentProgress;\n    let bundleComplete = false;\n    let bundleError = false;\n    let bundleBuildEnd;\n\n    if (msg.type === 'bundle_build_done') {\n      percentProgress = 100;\n      bundleComplete = true;\n      bundleBuildEnd = new Date();\n    } else if (msg.type === 'bundle_build_failed') {\n      percentProgress = -1;\n      bundleComplete = true;\n      bundleError = new Error('Failed to build bundle');\n      bundleBuildEnd = new Date();\n    } else {\n      percentProgress = Math.floor((msg.transformedFileCount / msg.totalFileCount) * 100);\n    }\n\n    if (this._bundleBuildChunkID) {\n      progressChunk.id = this._bundleBuildChunkID;\n    }\n    if (bundleError) {\n      progressChunk.msg = `Building JavaScript bundle: error`;\n      progressChunk.level = Logger.ERROR;\n      if (msg.error) {\n        progressChunk.msg += '\\n' + (msg.error.description || msg.error.message);\n      }\n    } else {\n      if (bundleComplete) {\n        let duration;\n        if (this._bundleBuildStart) {\n          duration = bundleBuildEnd - this._bundleBuildStart;\n        }\n\n        if (duration) {\n          progressChunk.msg = `Building JavaScript bundle: finished in ${duration}ms.`;\n        } else {\n          progressChunk.msg = `Building JavaScript bundle: finished.`;\n        }\n      } else {\n        progressChunk.msg = `Building JavaScript bundle: ${percentProgress}%`;\n      }\n    }\n\n    if (this._onProgressBuildBundle) {\n      this._onProgressBuildBundle(percentProgress, this._bundleBuildStart, progressChunk);\n\n      if (bundleComplete) {\n        this._onFinishBuildBundle &&\n          this._onFinishBuildBundle(\n            bundleError,\n            this._bundleBuildStart,\n            bundleBuildEnd,\n            progressChunk\n          );\n        this._bundleBuildStart = null;\n        this._bundleBuildChunkID = null;\n      }\n    } else {\n      this._updateLogs(logs => {\n        if (!logs || !logs.length) {\n          return [];\n        }\n\n        logs.forEach(log => {\n          if (log.id === this._bundleBuildChunkID) {\n            log.msg = progressChunk.msg;\n          }\n        });\n\n        if (bundleComplete) {\n          this._bundleBuildChunkID = null;\n        }\n\n        return [...logs];\n      });\n    }\n  }\n\n  _formatModuleResolutionError(error: any) {\n    let match = /^Unable to resolve module `(.+?)`/.exec(error.message);\n    let { originModulePath } = error;\n    if (!match || !originModulePath) {\n      return null;\n    }\n    let moduleName = match[1];\n    let relativePath = path.relative(this._projectRoot, originModulePath);\n\n    const DOCS_PAGE_URL =\n      'https://docs.expo.io/versions/latest/introduction/faq.html#can-i-use-nodejs-packages-with-expo';\n\n    if (NODE_STDLIB_MODULES.includes(moduleName)) {\n      if (originModulePath.includes('node_modules')) {\n        return `The package at \"${relativePath}\" attempted to import the Node standard library module \"${moduleName}\". It failed because React Native does not include the Node standard library. Read more at ${DOCS_PAGE_URL}`;\n      } else {\n        return `You attempted attempted to import the Node standard library module \"${moduleName}\" from \"${relativePath}\". It failed because React Native does not include the Node standard library. Read more at ${DOCS_PAGE_URL}`;\n      }\n    }\n    return `Unable to resolve \"${moduleName}\" from \"${relativePath}\"`;\n  }\n\n  _formatBundlingError(error: any) {\n    let message = error.message;\n    if (!message && error.errors && error.errors.length) {\n      message = error.errors[0].description;\n    }\n\n    // Before metro@0.29.0 the message may include the filename twice.\n    // TODO(ville): Remove this once we drop support for react-native v0.54.4 or older.\n    if (message && error.filename) {\n      let escapedFilename = escapeStringRegexp(error.filename);\n      message = message.replace(\n        new RegExp(`Error in ${escapedFilename}: ${escapedFilename}:`),\n        `Error in ${error.filename}:`\n      );\n    }\n\n    message = chalk.red(message);\n\n    let snippet = (this._getSnippetForError && this._getSnippetForError(error)) || error.snippet;\n    if (snippet) {\n      message += `\\n${snippet}`;\n    }\n    return message;\n  }\n\n  _formatWorkerChunk(origin: 'stdout' | 'stderr', chunk: string) {\n    const lines = chunk.split('\\n');\n    if (lines.length >= 1 && lines[lines.length - 1] === '') {\n      lines.splice(lines.length - 1, 1);\n    }\n    return lines.map(line => `transform[${origin}]: ${line}`).join('\\n');\n  }\n\n  _enqueueAppendLogChunk(chunk: ChunkT) {\n    if (!chunk.shouldHide) {\n      this._logsToAdd.push(chunk);\n      this._enqueueFlushLogsToAdd();\n    }\n  }\n\n  _enqueueFlushLogsToAdd = () => {\n    let func = () => {\n      this._updateLogs(logs => {\n        if (this._logsToAdd.length === 0) {\n          return logs;\n        }\n\n        let nextLogs = logs.concat(this._logsToAdd);\n        this._logsToAdd = [];\n        return nextLogs;\n      });\n    };\n\n    if (isNode()) {\n      func();\n    } else {\n      setImmediate(func);\n    }\n  };\n\n  _maybeParseMsgJSON(chunk: ChunkT) {\n    try {\n      let parsedMsg = JSON.parse(chunk.msg);\n      chunk.msg = parsedMsg;\n    } catch (e) {\n      // non-JSON message\n    }\n\n    return chunk;\n  }\n\n  _cleanUpNodeErrors = (chunk: ChunkT) => {\n    if (typeof chunk.msg === 'object') {\n      return chunk;\n    }\n\n    if (chunk.msg.match(/\\(node:.\\d*\\)/)) {\n      // Example: (node:13817) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): SyntaxError: SyntaxError /Users/brent/universe/apps/new-project-template/main.js: Unexpected token (10:6)\n      // The first part of this is totally useless, so let's remove it.\n      if (chunk.msg.match(/UnhandledPromiseRejectionWarning/)) {\n        chunk.msg = chunk.msg.replace(/\\(node:.*\\(rejection .*\\):/, '');\n        if (chunk.msg.match(/SyntaxError: SyntaxError/)) {\n          chunk.msg = chunk.msg.replace('SyntaxError: ', '');\n        }\n      } else if (chunk.msg.match(/DeprecationWarning/)) {\n        chunk.msg = '';\n      }\n    }\n\n    return chunk;\n  };\n\n  // This message is just noise\n  // Fall back to the same formatting we did on SDK <= 15 before we had a custom\n  // reporter class.\n  _formatMsg(chunk) {\n    if (typeof chunk.msg === 'object') {\n      return chunk;\n    }\n\n    if (chunk.msg.match(/Looking for JS files in/)) {\n      chunk.msg = '';\n    } else if (chunk.msg.match(/^[\\u001b]/)) {\n      chunk.msg = '';\n    }\n\n    chunk.msg = chunk.msg.replace(/\\[\\w{2}m/g, '');\n    chunk.msg = chunk.msg.replace(/\\[2K/g, '');\n    chunk.msg = trim(chunk.msg);\n    return chunk;\n  }\n}\n\nconst NODE_STDLIB_MODULES = [\n  'assert',\n  'async_hooks',\n  'buffer',\n  'child_process',\n  'cluster',\n  'crypto',\n  'dgram',\n  'dns',\n  'domain',\n  'events',\n  'fs',\n  'http',\n  'https',\n  'net',\n  'os',\n  'path',\n  'punycode',\n  'querystring',\n  'readline',\n  'repl',\n  'stream',\n  'string_decoder',\n  'tls',\n  'tty',\n  'url',\n  'util',\n  'v8',\n  'vm',\n  'zlib',\n];\n"],"sourceRoot":"/xdl@52.0.12/src"}