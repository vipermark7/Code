{"version":3,"sources":["detach/AndroidShellApp.js"],"names":["async","androidSrcPath","shellPath","isDetached","sdkVersion","await","spawnAsyncThrowError","pipeToLogger","loggerFields","buildPhase","cwd","path","join","env","process","initialCopyLogger","logger","withFields","copyToShellApp","fileName","fs","copy","e","warn","parseSdkMajorVersion","remove","copyInitialShellAppFilesAsync","context","fnLogger","let","shellPathForContext","url","published","manifest","config","releaseChannel","isRunningInUserContext","type","ExponentTools","data","privateConfig","fullManifestUrl","replace","versionCode","javaPackage","android","package","Error","name","scheme","detach","bundleUrl","isFullManifest","version","backgroundImages","backgroundImagesForApp","splashBackgroundColor","getSplashScreenBackgroundColor","updatesDisabled","updates","enabled","appBuildGradle","regexFileAsync","deleteLinesInFileAsync","writeFile","runShPath","pathExists","buildGradleFile","readFileSync","androidVersion","match","shouldShowLoadingView","xmlWeirdAndroidEscape","randomID","uuid","v4","newScheme","newSchemeSuffix","intentFilters","_","get","renderIntentFilters","searchLine","permissions","content","map","p","whitelist","forEach","s","includes","push","identifier","split","pop","blacklist","filter","writeFileSync","JSON","stringify","saveUrlToPathAsync","createAndWriteIconsToPathAsync","length","globby","absolute","filePath","removeSync","image","AssetBundle","bundleAsync","bundledAssets","certificateHash","googleAndroidApiKey","branch","fabric","googleMaps","googleSignIn","apiKey","buildSecret","googleServicesFile","googleServicesFileContents","readFile","resolve","runShellAppModificationsAsync","build","androidBuildConfiguration","gradleBuildCommand","gradleArgs","GRADLE_DAEMON_DISABLED","unshift","ANDROID_KEY_ALIAS","keyAlias","ANDROID_KEY_PASSWORD","keyPassword","ANDROID_KEYSTORE_PATH","keystore","ANDROID_KEYSTORE_PASSWORD","keystorePassword","spawnAsync","outputFile","apkPath","buildShellAppAsync","requiredSdkVersion","filePathsToTransform","expoviewBuildGradle","multipleVersionReactNativeActivity","constants","appAndroidManifest","majorSdkVersion","effectiveSdkVersion","Promise","all","Object","values","removeInvalidSdkLinesWhenPreparingShell","removeObsoleteSdks","addDetachedConfigToExp","getManifestAsync","imageKeys","exponentDirectory","workingDir","EXPO_UNIVERSE_DIR","original","noAmps","replaceString","noLt","noGt","noApos","exports","updateAndroidShellAppAsync","args","Accept","getRemoteOrLocalUrl","key","basePath","splash","reduce","acc","imageKey","backgroundColor","resizeMode","createAndroidShellAppAsync","privateConfigFile","configuration","alias","exponentDir","ensureDir","info","privateConfigContents","parse","buildFlags","StandaloneBuildFlags","createAndroid","StandaloneContext","createServiceContext","skipBuild","projectPath","expoSourcePath","exp","console","assetsDirectory","publishBundlePath","relative","publishManifestPath","RegExp"],"mappings":"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","file":"../../detach/AndroidShellApp.js","sourcesContent":["// Copyright 2015-present 650 Industries. All rights reserved.\n/**\n * @flow\n */\n\n'use strict';\n\nimport fs from 'fs-extra';\nimport path from 'path';\nimport replaceString from 'replace-string';\nimport _ from 'lodash';\nimport globby from 'globby';\nimport uuid from 'uuid';\n\nimport { createAndWriteIconsToPathAsync } from './AndroidIcons';\nimport * as AssetBundle from './AssetBundle';\nimport * as ExponentTools from './ExponentTools';\nimport StandaloneBuildFlags from './StandaloneBuildFlags';\nimport StandaloneContext from './StandaloneContext';\nimport renderIntentFilters from './AndroidIntentFilters';\nimport logger from './Logger';\n\nconst {\n  getManifestAsync,\n  saveUrlToPathAsync,\n  spawnAsyncThrowError,\n  spawnAsync,\n  regexFileAsync,\n  deleteLinesInFileAsync,\n  parseSdkMajorVersion,\n} = ExponentTools;\n\nconst imageKeys = ['mdpi', 'hdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi'];\n\n// Do not call this from anything used by detach\nfunction exponentDirectory(workingDir) {\n  if (workingDir) {\n    return workingDir;\n  } else if (process.env.EXPO_UNIVERSE_DIR) {\n    return path.join(process.env.EXPO_UNIVERSE_DIR, 'exponent');\n  } else {\n    return null;\n  }\n}\n\nfunction xmlWeirdAndroidEscape(original) {\n  let noAmps = replaceString(original, '&', '&amp;');\n  let noLt = replaceString(noAmps, '<', '&lt;');\n  let noGt = replaceString(noLt, '>', '&gt;');\n  let noApos = replaceString(noGt, '\"', '\\\\\"');\n  return replaceString(noApos, \"'\", \"\\\\'\");\n}\n\nexports.updateAndroidShellAppAsync = async function updateAndroidShellAppAsync(args: any) {\n  let { url, sdkVersion, releaseChannel, workingDir } = args;\n\n  releaseChannel = releaseChannel ? releaseChannel : 'default';\n  let manifest = await getManifestAsync(url, {\n    'Exponent-SDK-Version': sdkVersion,\n    'Exponent-Platform': 'android',\n    'Expo-Release-Channel': releaseChannel,\n    Accept: 'application/expo+json,application/json',\n  });\n\n  let fullManifestUrl = url.replace('exp://', 'https://');\n  let bundleUrl = manifest.bundleUrl;\n\n  let shellPath = path.join(exponentDirectory(workingDir), 'android-shell-app');\n\n  await fs.remove(path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'));\n  await fs.writeFileSync(\n    path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'),\n    JSON.stringify(manifest)\n  );\n  await fs.remove(path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle'));\n  await saveUrlToPathAsync(\n    bundleUrl,\n    path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle')\n  );\n\n  await deleteLinesInFileAsync(\n    `START\\ EMBEDDED\\ RESPONSES`,\n    `END\\ EMBEDDED\\ RESPONSES`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  await regexFileAsync(\n    '// ADD EMBEDDED RESPONSES HERE',\n    `\n    // ADD EMBEDDED RESPONSES HERE\n    // START EMBEDDED RESPONSES\n    embeddedResponses.add(new Constants.EmbeddedResponse(\"${fullManifestUrl}\", \"assets://shell-app-manifest.json\", \"application/json\"));\n    embeddedResponses.add(new Constants.EmbeddedResponse(\"${bundleUrl}\", \"assets://shell-app.bundle\", \"application/javascript\"));\n    // END EMBEDDED RESPONSES`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  await regexFileAsync(\n    'RELEASE_CHANNEL = \"default\"',\n    `RELEASE_CHANNEL = \"${releaseChannel}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n};\n\nfunction getRemoteOrLocalUrl(manifest, key, isDetached) {\n  // in detached apps, `manifest` is actually just app.json, so there are no remote url fields\n  // we should return a local url starting with file:// instead\n  if (isDetached) {\n    return _.get(manifest, key);\n  }\n  return _.get(manifest, `${key}Url`);\n}\n\nfunction backgroundImagesForApp(shellPath, manifest, isDetached) {\n  // returns an array like:\n  // [\n  //   {url: 'urlToDownload', path: 'pathToSaveTo'},\n  //   {url: 'anotherURlToDownload', path: 'anotherPathToSaveTo'},\n  // ]\n  let basePath = path.join(shellPath, 'app', 'src', 'main', 'res');\n  if (_.get(manifest, 'android.splash')) {\n    var splash = _.get(manifest, 'android.splash');\n    return _.reduce(\n      imageKeys,\n      function(acc, imageKey) {\n        let url = getRemoteOrLocalUrl(splash, imageKey, isDetached);\n        if (url) {\n          acc.push({\n            url,\n            path: path.join(basePath, `drawable-${imageKey}`, 'shell_launch_background_image.png'),\n          });\n        }\n\n        return acc;\n      },\n      []\n    );\n  }\n\n  let url = getRemoteOrLocalUrl(manifest, 'splash.image', isDetached);\n  if (url) {\n    return [\n      {\n        url,\n        path: path.join(basePath, 'drawable-xxxhdpi', 'shell_launch_background_image.png'),\n      },\n    ];\n  }\n\n  return [];\n}\n\nfunction getSplashScreenBackgroundColor(manifest) {\n  let backgroundColor;\n  if (manifest.android && manifest.android.splash && manifest.android.splash.backgroundColor) {\n    backgroundColor = manifest.android.splash.backgroundColor;\n  } else if (manifest.splash && manifest.splash.backgroundColor) {\n    backgroundColor = manifest.splash.backgroundColor;\n  }\n\n  // Default to white\n  if (!backgroundColor) {\n    backgroundColor = '#FFFFFF';\n  }\n  return backgroundColor;\n}\n\n/*\n  if resizeMode is 'cover' we should show LoadingView:\n  using an ImageView, unlike having a BitmapDrawable\n  provides a fullscreen image without distortions\n*/\nfunction shouldShowLoadingView(manifest) {\n  return (\n    (manifest.android &&\n      manifest.android.splash &&\n      manifest.android.splash.resizeMode &&\n      manifest.android.splash.resizeMode === 'cover') ||\n    (manifest.splash && manifest.splash.resizeMode && manifest.splash.resizeMode === 'cover')\n  );\n}\n\nexport async function copyInitialShellAppFilesAsync(\n  androidSrcPath,\n  shellPath,\n  isDetached: boolean,\n  sdkVersion: ?string\n) {\n  if (androidSrcPath && !isDetached) {\n    // check if Android template files exist\n    // since we take out the prebuild step later on\n    // and we should have generated those files earlier\n    await spawnAsyncThrowError('../../tools-public/check-dynamic-macros-android.sh', [], {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'confirming that dynamic macros exist' },\n      cwd: path.join(androidSrcPath, 'app'),\n      env: process.env,\n    });\n  }\n\n  const initialCopyLogger = logger.withFields({ buildPhase: 'copying initial shell app files' });\n\n  const copyToShellApp = async fileName => {\n    try {\n      await fs.copy(path.join(androidSrcPath, fileName), path.join(shellPath, fileName));\n    } catch (e) {\n      // android.iml is only available locally, not on the builders, so don't crash when this happens\n      initialCopyLogger.warn(`Warning: Could not copy ${fileName} to shell app directory.`);\n    }\n  };\n\n  if (!isDetached) {\n    await copyToShellApp('expoview');\n    await copyToShellApp('versioned-abis');\n    await copyToShellApp('ReactCommon');\n    await copyToShellApp('ReactAndroid');\n  }\n\n  await copyToShellApp('android.iml');\n  await copyToShellApp('app');\n  await copyToShellApp('build.gradle');\n  await copyToShellApp('gradle');\n  await copyToShellApp('gradle.properties');\n  await copyToShellApp('gradlew');\n  await copyToShellApp('settings.gradle');\n  await copyToShellApp('debug.keystore');\n  await copyToShellApp('run.sh');\n  await copyToShellApp('maven'); // this is a symlink\n\n  // kernel.android.bundle isn't ever used in standalone apps (at least in kernel v32)\n  // but in order to not change behavior in older SDKs, we'll remove the file only in 32+.\n  if (parseSdkMajorVersion(sdkVersion) >= 32) {\n    try {\n      await fs.remove(path.join(shellPath, 'app/src/main/assets/kernel.android.bundle'));\n    } catch (e) {\n      // let's hope it's just not present in the shell app template\n    }\n  }\n}\n\nexports.createAndroidShellAppAsync = async function createAndroidShellAppAsync(args: any) {\n  let {\n    url,\n    sdkVersion,\n    releaseChannel,\n    privateConfigFile,\n    configuration,\n    keystore,\n    alias,\n    keystorePassword,\n    keyPassword,\n    outputFile,\n    workingDir,\n  } = args;\n\n  const exponentDir = exponentDirectory(workingDir);\n  let androidSrcPath = path.join(exponentDir, 'android');\n  let shellPath = path.join(exponentDir, 'android-shell-app');\n\n  await fs.remove(shellPath);\n  await fs.ensureDir(shellPath);\n\n  releaseChannel = releaseChannel ? releaseChannel : 'default';\n  let manifest;\n  if (args.manifest) {\n    manifest = args.manifest;\n    logger\n      .withFields({ buildPhase: 'reading manifest' })\n      .info('Using manifest:', JSON.stringify(manifest));\n  } else {\n    manifest = await getManifestAsync(url, {\n      'Exponent-SDK-Version': sdkVersion,\n      'Exponent-Platform': 'android',\n      'Expo-Release-Channel': releaseChannel,\n      Accept: 'application/expo+json,application/json',\n    });\n  }\n\n  configuration = configuration ? configuration : 'Release';\n\n  let privateConfig;\n  if (privateConfigFile) {\n    let privateConfigContents = await fs.readFile(privateConfigFile, 'utf8');\n    privateConfig = JSON.parse(privateConfigContents);\n  } else if (manifest.android) {\n    privateConfig = manifest.android.config;\n  }\n\n  let androidBuildConfiguration;\n  if (keystore && alias && keystorePassword && keyPassword) {\n    androidBuildConfiguration = {\n      keystore,\n      keystorePassword,\n      keyAlias: alias,\n      keyPassword,\n      outputFile,\n    };\n  }\n\n  let buildFlags = StandaloneBuildFlags.createAndroid(configuration, androidBuildConfiguration);\n  let context = StandaloneContext.createServiceContext(\n    androidSrcPath,\n    null,\n    manifest,\n    privateConfig,\n    /* testEnvironment */ 'none',\n    buildFlags,\n    url,\n    releaseChannel\n  );\n\n  await copyInitialShellAppFilesAsync(androidSrcPath, shellPath, false, sdkVersion);\n  await removeObsoleteSdks(shellPath, sdkVersion);\n  await runShellAppModificationsAsync(context, sdkVersion);\n\n  if (!args.skipBuild) {\n    await buildShellAppAsync(context, sdkVersion);\n  }\n};\n\nfunction shellPathForContext(context: StandaloneContext) {\n  if (context.type === 'user') {\n    return path.join(context.data.projectPath, 'android');\n  } else {\n    return path.join(\n      exponentDirectory(\n        context.data.expoSourcePath && path.join(context.data.expoSourcePath, '..')\n      ),\n      'android-shell-app'\n    );\n  }\n}\n\nexport async function runShellAppModificationsAsync(\n  context: StandaloneContext,\n  sdkVersion: ?string\n) {\n  const fnLogger = logger.withFields({ buildPhase: 'running shell app modifications' });\n\n  let shellPath = shellPathForContext(context);\n  let url: string = context.published.url;\n  let manifest = context.config; // manifest or app.json\n  let releaseChannel = context.published.releaseChannel;\n\n  const isRunningInUserContext = context.type === 'user';\n  // In SDK32 we've unified build process for shell and ejected apps\n  const isDetached = ExponentTools.parseSdkMajorVersion(sdkVersion) >= 32 || isRunningInUserContext;\n\n  if (!context.data.privateConfig) {\n    fnLogger.warn('Warning: No config file specified.');\n  }\n\n  let fullManifestUrl = url.replace('exp://', 'https://');\n\n  let versionCode = 1;\n  let javaPackage = manifest.android.package;\n  if (manifest.android.versionCode) {\n    versionCode = manifest.android.versionCode;\n  }\n\n  if (!javaPackage) {\n    throw new Error(\n      'Must specify androidPackage option (either from manifest or on command line).'\n    );\n  }\n\n  let name = manifest.name;\n  let scheme = manifest.scheme || (manifest.detach && manifest.detach.scheme);\n  let bundleUrl: ?string = manifest.bundleUrl;\n  let isFullManifest = !!bundleUrl;\n  let version = manifest.version ? manifest.version : '0.0.0';\n  let backgroundImages = backgroundImagesForApp(shellPath, manifest, isRunningInUserContext);\n  let splashBackgroundColor = getSplashScreenBackgroundColor(manifest);\n  let updatesDisabled = manifest.updates && manifest.updates.enabled === false;\n\n  // Clean build directories\n  await fs.remove(path.join(shellPath, 'app', 'build'));\n  await fs.remove(path.join(shellPath, 'ReactAndroid', 'build'));\n  await fs.remove(path.join(shellPath, 'expoview', 'build'));\n  await fs.remove(path.join(shellPath, 'app', 'src', 'test'));\n  await fs.remove(path.join(shellPath, 'app', 'src', 'androidTest'));\n\n  if (isDetached) {\n    let appBuildGradle = path.join(shellPath, 'app', 'build.gradle');\n    await regexFileAsync(/\\/\\* UNCOMMENT WHEN DISTRIBUTING/g, '', appBuildGradle);\n    await regexFileAsync(/END UNCOMMENT WHEN DISTRIBUTING \\*\\//g, '', appBuildGradle);\n    await deleteLinesInFileAsync(\n      'WHEN_DISTRIBUTING_REMOVE_FROM_HERE',\n      'WHEN_DISTRIBUTING_REMOVE_TO_HERE',\n      appBuildGradle\n    );\n\n    // Don't need to compile expoview or ReactAndroid\n    // react-native link looks for a \\n so we need that. See https://github.com/facebook/react-native/blob/master/local-cli/link/android/patches/makeSettingsPatch.js\n    await fs.writeFile(path.join(shellPath, 'settings.gradle'), `include ':app'\\n`);\n\n    await regexFileAsync(\n      'TEMPLATE_INITIAL_URL',\n      url,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'MainActivity.java'\n      )\n    );\n\n    const runShPath = path.join(shellPath, 'run.sh');\n    if (await fs.pathExists(runShPath)) {\n      await regexFileAsync('host.exp.exponent/', `${javaPackage}/`, runShPath);\n      await regexFileAsync('LauncherActivity', 'MainActivity', runShPath);\n    }\n  }\n\n  // Package\n  await regexFileAsync(\n    `applicationId 'host.exp.exponent'`,\n    `applicationId '${javaPackage}'`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n  await regexFileAsync(\n    `android:name=\"host.exp.exponent\"`,\n    `android:name=\"${javaPackage}\"`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Versions\n  let buildGradleFile = await fs.readFileSync(path.join(shellPath, 'app', 'build.gradle'), 'utf8');\n  let androidVersion = buildGradleFile.match(/versionName '(\\S+)'/)[1];\n  await regexFileAsync(\n    'VERSION_NAME = null',\n    `VERSION_NAME = \"${androidVersion}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n  await deleteLinesInFileAsync(\n    `BEGIN\\ VERSIONS`,\n    `END\\ VERSIONS`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n  await regexFileAsync(\n    '// ADD VERSIONS HERE',\n    `versionCode ${versionCode}\n    versionName '${version}'`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n\n  // Remove Exponent build script, since SDK32 expoview comes precompiled\n  if (parseSdkMajorVersion(sdkVersion) < 32 && !isRunningInUserContext) {\n    await regexFileAsync(\n      `preBuild.dependsOn generateDynamicMacros`,\n      ``,\n      path.join(shellPath, 'expoview', 'build.gradle')\n    );\n  }\n\n  // change javaMaxHeapSize\n  await regexFileAsync(\n    `javaMaxHeapSize \"8g\"`,\n    `javaMaxHeapSize \"6g\"`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n\n  // Push notifications\n  await regexFileAsync(\n    '\"package_name\": \"host.exp.exponent\"',\n    `\"package_name\": \"${javaPackage}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  ); // TODO: actually use the correct file\n\n  // TODO: probably don't need this in both places\n  await regexFileAsync(\n    /host\\.exp\\.exponent\\.permission\\.C2D_MESSAGE/g,\n    `${javaPackage}.permission.C2D_MESSAGE`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n  // Since SDK32 expoview comes precompiled\n  if (parseSdkMajorVersion(sdkVersion) < 32 && !isRunningInUserContext) {\n    await regexFileAsync(\n      /host\\.exp\\.exponent\\.permission\\.C2D_MESSAGE/g,\n      `${javaPackage}.permission.C2D_MESSAGE`,\n      path.join(shellPath, 'expoview', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Set INITIAL_URL, SHELL_APP_SCHEME and SHOW_LOADING_VIEW\n  await regexFileAsync(\n    'INITIAL_URL = null',\n    `INITIAL_URL = \"${url}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n  if (scheme) {\n    await regexFileAsync(\n      'SHELL_APP_SCHEME = null',\n      `SHELL_APP_SCHEME = \"${scheme}\"`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n  if (shouldShowLoadingView(manifest)) {\n    await regexFileAsync(\n      'SHOW_LOADING_VIEW_IN_SHELL_APP = false',\n      'SHOW_LOADING_VIEW_IN_SHELL_APP = true',\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n  // In SDK32 this field got removed from AppConstants\n  if (parseSdkMajorVersion(sdkVersion) < 32 && isRunningInUserContext) {\n    await regexFileAsync(\n      'IS_DETACHED = false',\n      `IS_DETACHED = true`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n  if (updatesDisabled) {\n    await regexFileAsync(\n      'ARE_REMOTE_UPDATES_ENABLED = true',\n      'ARE_REMOTE_UPDATES_ENABLED = false',\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  // App name\n  await regexFileAsync(\n    '\"app_name\">Expo',\n    `\"app_name\">${xmlWeirdAndroidEscape(name)}`,\n    path.join(shellPath, 'app', 'src', 'main', 'res', 'values', 'strings.xml')\n  );\n\n  // Splash Screen background color\n  await regexFileAsync(\n    '\"splashBackground\">#FFFFFF',\n    `\"splashBackground\">${splashBackgroundColor}`,\n    path.join(shellPath, 'app', 'src', 'main', 'res', 'values', 'colors.xml')\n  );\n\n  // show only background color if LoadingView will appear\n  if (shouldShowLoadingView(manifest)) {\n    await regexFileAsync(\n      /<item>.*<\\/item>/,\n      '',\n      path.join(shellPath, 'app', 'src', 'main', 'res', 'drawable', 'splash_background.xml')\n    );\n  }\n\n  // Change stripe schemes and add meta-data\n  const randomID = uuid.v4();\n  const newScheme = `<meta-data android:name=\"standaloneStripeScheme\" android:value=\"${randomID}\" />`;\n  await regexFileAsync(\n    '<!-- ADD HERE STRIPE SCHEME META DATA -->',\n    newScheme,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  const newSchemeSuffix = `expo.modules.payments.stripe.${randomID}\" />`;\n  await regexFileAsync(\n    'expo.modules.payments.stripe\" />',\n    newSchemeSuffix,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Remove exp:// scheme from LauncherActivity\n  await deleteLinesInFileAsync(\n    `START\\ LAUNCHER\\ INTENT\\ FILTERS`,\n    `END\\ LAUNCHER\\ INTENT\\ FILTERS`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Remove LAUNCHER category from HomeActivity\n  await deleteLinesInFileAsync(\n    `START\\ HOME\\ INTENT\\ FILTERS`,\n    `END\\ HOME\\ INTENT\\ FILTERS`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  if (isDetached) {\n    // Add LAUNCHER category to MainActivity\n    await regexFileAsync(\n      '<!-- ADD DETACH INTENT FILTERS HERE -->',\n      `<intent-filter>\n        <action android:name=\"android.intent.action.MAIN\"/>\n\n        <category android:name=\"android.intent.category.LAUNCHER\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  } else {\n    // Add LAUNCHER category to ShellAppActivity\n    await regexFileAsync(\n      '<!-- ADD SHELL INTENT FILTERS HERE -->',\n      `<intent-filter>\n        <action android:name=\"android.intent.action.MAIN\"/>\n\n        <category android:name=\"android.intent.category.LAUNCHER\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Add app-specific intent filters\n  const intentFilters = _.get(manifest, 'android.intentFilters');\n  if (intentFilters) {\n    if (isDetached) {\n      await regexFileAsync(\n        '<!-- ADD DETACH APP SPECIFIC INTENT FILTERS -->',\n        renderIntentFilters(intentFilters).join('\\n'),\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    } else {\n      await regexFileAsync(\n        '<!-- ADD SHELL APP SPECIFIC INTENT FILTERS -->',\n        renderIntentFilters(intentFilters).join('\\n'),\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n  }\n\n  // Add shell app scheme\n  if (scheme) {\n    const searchLine = isDetached\n      ? '<!-- ADD DETACH SCHEME HERE -->'\n      : '<!-- ADD SHELL SCHEME HERE -->';\n    await regexFileAsync(\n      searchLine,\n      `<intent-filter>\n        <data android:scheme=\"${scheme}\"/>\n\n        <action android:name=\"android.intent.action.VIEW\"/>\n\n        <category android:name=\"android.intent.category.DEFAULT\"/>\n        <category android:name=\"android.intent.category.BROWSABLE\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Add permissions\n  if (manifest.android && manifest.android.permissions) {\n    const content = await fs.readFileSync(\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml'),\n      'utf-8'\n    );\n\n    // Get the list of optional permissions form manifest\n    const permissions = content\n      .replace(\n        /(([\\s\\S]*<!-- BEGIN OPTIONAL PERMISSIONS -->)|(<!-- END OPTIONAL PERMISSIONS -->[\\s\\S]*))/g,\n        ''\n      )\n      .match(/android:name=\".+\"/g)\n      .map(p => p.replace(/(android:name=|\")/g, ''));\n\n    const whitelist = [];\n\n    manifest.android.permissions.forEach(s => {\n      if (s.includes('.')) {\n        whitelist.push(s);\n      } else {\n        permissions.forEach(identifier => {\n          if (identifier.split('.').pop() === s) {\n            whitelist.push(identifier);\n          }\n        });\n      }\n    });\n\n    // Permissions we need to remove from the generated manifest\n    const blacklist = [\n      'android.permission.ACCESS_COARSE_LOCATION',\n      'android.permission.ACCESS_FINE_LOCATION',\n      'android.permission.CAMERA',\n      'android.permission.MANAGE_DOCUMENTS',\n      'android.permission.READ_CONTACTS',\n      'android.permission.READ_CALENDAR',\n      'android.permission.WRITE_CALENDAR',\n      'android.permission.READ_EXTERNAL_STORAGE',\n      'android.permission.READ_INTERNAL_STORAGE',\n      'android.permission.READ_PHONE_STATE',\n      'android.permission.RECORD_AUDIO',\n      'android.permission.USE_FINGERPRINT',\n      'android.permission.VIBRATE',\n      'android.permission.WRITE_EXTERNAL_STORAGE',\n      'android.permission.READ_SMS',\n      'com.anddoes.launcher.permission.UPDATE_COUNT',\n      'com.android.launcher.permission.INSTALL_SHORTCUT',\n      'com.google.android.gms.permission.ACTIVITY_RECOGNITION',\n      'com.google.android.providers.gsf.permission.READ_GSERVICES',\n      'com.htc.launcher.permission.READ_SETTINGS',\n      'com.htc.launcher.permission.UPDATE_SHORTCUT',\n      'com.majeur.launcher.permission.UPDATE_BADGE',\n      'com.sec.android.provider.badge.permission.READ',\n      'com.sec.android.provider.badge.permission.WRITE',\n      'com.sonyericsson.home.permission.BROADCAST_BADGE',\n    ].filter(p => !whitelist.includes(p));\n\n    await deleteLinesInFileAsync(\n      `BEGIN\\ OPTIONAL\\ PERMISSIONS`,\n      `END\\ OPTIONAL\\ PERMISSIONS`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n\n    await regexFileAsync(\n      '<!-- ADD PERMISSIONS HERE -->',\n      `\n      ${whitelist.map(p => `<uses-permission android:name=\"${p}\" />`).join('\\n')}\n      ${blacklist\n        .map(p => `<uses-permission android:name=\"${p}\" tools:node=\"remove\" />`)\n        .join('\\n')}\n      `,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // OAuth redirect scheme\n  await regexFileAsync(\n    '<data android:scheme=\"host.exp.exponent\" android:path=\"oauthredirect\"/>',\n    `<data android:scheme=\"${javaPackage}\" android:path=\"oauthredirect\"/>`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Embed manifest and bundle\n  if (isFullManifest) {\n    await fs.writeFileSync(\n      path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'),\n      JSON.stringify(manifest)\n    );\n    await saveUrlToPathAsync(\n      bundleUrl,\n      path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle')\n    );\n\n    await regexFileAsync(\n      '// START EMBEDDED RESPONSES',\n      `\n      // START EMBEDDED RESPONSES\n      embeddedResponses.add(new Constants.EmbeddedResponse(\"${fullManifestUrl}\", \"assets://shell-app-manifest.json\", \"application/json\"));\n      embeddedResponses.add(new Constants.EmbeddedResponse(\"${bundleUrl}\", \"assets://shell-app.bundle\", \"application/javascript\"));`,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  await regexFileAsync(\n    'RELEASE_CHANNEL = \"default\"',\n    `RELEASE_CHANNEL = \"${releaseChannel}\"`,\n    path.join(\n      shellPath,\n      'app',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'generated',\n      'AppConstants.java'\n    )\n  );\n\n  // Icons\n  createAndWriteIconsToPathAsync(\n    context,\n    path.join(shellPath, 'app', 'src', 'main', 'res'),\n    isRunningInUserContext\n  );\n\n  // Splash Background\n  if (backgroundImages && backgroundImages.length > 0) {\n    // Delete the placeholder images\n    (await globby(['**/shell_launch_background_image.png'], {\n      cwd: path.join(shellPath, 'app', 'src', 'main', 'res'),\n      absolute: true,\n    })).forEach(filePath => {\n      fs.removeSync(filePath);\n    });\n\n    _.forEach(backgroundImages, async image => {\n      if (isRunningInUserContext) {\n        // local file so just copy it\n        await fs.copy(image.url, image.path);\n      } else {\n        await saveUrlToPathAsync(image.url, image.path);\n      }\n    });\n  }\n\n  await AssetBundle.bundleAsync(\n    context,\n    manifest.bundledAssets,\n    `${shellPath}/app/src/main/assets`\n  );\n\n  let certificateHash = '';\n  let googleAndroidApiKey = '';\n  let privateConfig = context.data.privateConfig;\n  if (privateConfig) {\n    let branch = privateConfig.branch;\n    let fabric = privateConfig.fabric;\n    let googleMaps = privateConfig.googleMaps;\n    let googleSignIn = privateConfig.googleSignIn;\n\n    // Branch\n    if (branch) {\n      await regexFileAsync(\n        '<!-- ADD BRANCH CONFIG HERE -->',\n        `<meta-data\n      android:name=\"io.branch.sdk.BranchKey\"\n      android:value=\"${branch.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Fabric\n    if (fabric) {\n      await fs.remove(path.join(shellPath, 'app', 'fabric.properties'));\n      await fs.writeFileSync(\n        path.join(shellPath, 'app', 'fabric.properties'),\n        `apiSecret=${fabric.buildSecret}\\n`\n      );\n\n      await deleteLinesInFileAsync(\n        `BEGIN\\ FABRIC\\ CONFIG`,\n        `END\\ FABRIC\\ CONFIG`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n      await regexFileAsync(\n        '<!-- ADD FABRIC CONFIG HERE -->',\n        `<meta-data\n      android:name=\"io.fabric.ApiKey\"\n      android:value=\"${fabric.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Google Maps\n    if (googleMaps) {\n      await deleteLinesInFileAsync(\n        `BEGIN\\ GOOGLE\\ MAPS\\ CONFIG`,\n        `END\\ GOOGLE\\ MAPS\\ CONFIG`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n      await regexFileAsync(\n        '<!-- ADD GOOGLE MAPS CONFIG HERE -->',\n        `<meta-data\n      android:name=\"com.google.android.geo.API_KEY\"\n      android:value=\"${googleMaps.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Google Login\n    if (googleSignIn) {\n      certificateHash = googleSignIn.certificateHash;\n      googleAndroidApiKey = googleSignIn.apiKey;\n    }\n  }\n\n  if (manifest.android && manifest.android.googleServicesFile) {\n    // google-services.json\n    // Used for configuring FCM\n    let googleServicesFileContents = manifest.android.googleServicesFile;\n    if (isRunningInUserContext) {\n      googleServicesFileContents = await fs.readFile(\n        path.resolve(shellPath, '..', manifest.android.googleServicesFile),\n        'utf8'\n      );\n    }\n    await fs.writeFile(\n      path.join(shellPath, 'app', 'google-services.json'),\n      googleServicesFileContents\n    );\n  } else {\n    await regexFileAsync(\n      'FCM_ENABLED = true',\n      'FCM_ENABLED = false',\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'generated',\n        'AppConstants.java'\n      )\n    );\n  }\n\n  // Google sign in\n  await regexFileAsync(\n    /\"current_key\": \"(.*?)\"/,\n    `\"current_key\": \"${googleAndroidApiKey}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  );\n  await regexFileAsync(\n    /\"certificate_hash\": \"(.*?)\"/,\n    `\"certificate_hash\": \"${certificateHash}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  );\n}\n\nasync function buildShellAppAsync(context: StandaloneContext, sdkVersion: string) {\n  let shellPath = shellPathForContext(context);\n\n  if (context.build.android) {\n    let androidBuildConfiguration = context.build.android;\n\n    try {\n      await fs.remove(`shell-unaligned.apk`);\n      await fs.remove(`shell.apk`);\n    } catch (e) {}\n    let gradleBuildCommand;\n    if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 32) {\n      gradleBuildCommand = 'assembleProdKernelRelease';\n    } else {\n      gradleBuildCommand = 'assembleProdMinSdkProdKernelRelease';\n    }\n    const gradleArgs = [gradleBuildCommand];\n    if (process.env.GRADLE_DAEMON_DISABLED) {\n      gradleArgs.unshift('--no-daemon');\n    }\n    await spawnAsyncThrowError(`./gradlew`, gradleArgs, {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'running gradle' },\n      cwd: shellPath,\n      env: {\n        ...process.env,\n        ANDROID_KEY_ALIAS: androidBuildConfiguration.keyAlias,\n        ANDROID_KEY_PASSWORD: androidBuildConfiguration.keyPassword,\n        ANDROID_KEYSTORE_PATH: androidBuildConfiguration.keystore,\n        ANDROID_KEYSTORE_PASSWORD: androidBuildConfiguration.keystorePassword,\n      },\n    });\n    if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 32) {\n      await fs.copy(\n        path.join(\n          shellPath,\n          'app',\n          'build',\n          'outputs',\n          'apk',\n          'prodKernel',\n          'release',\n          'app-prodKernel-release.apk'\n        ),\n        'shell.apk'\n      );\n      // -c means \"only verify\"\n      await spawnAsync(`zipalign`, ['-c', '-v', '4', 'shell.apk'], {\n        pipeToLogger: true,\n        loggerFields: { buildPhase: 'verifying apk alignment' },\n      });\n    } else {\n      await fs.copy(\n        path.join(\n          shellPath,\n          'app',\n          'build',\n          'outputs',\n          'apk',\n          'prodMinSdkProdKernel',\n          'release',\n          'app-prodMinSdk-prodKernel-release-unsigned.apk'\n        ),\n        `shell-unaligned.apk`\n      );\n      await spawnAsync(\n        `jarsigner`,\n        [\n          '-verbose',\n          '-sigalg',\n          'SHA1withRSA',\n          '-digestalg',\n          'SHA1',\n          '-storepass',\n          androidBuildConfiguration.keystorePassword,\n          '-keypass',\n          androidBuildConfiguration.keyPassword,\n          '-keystore',\n          androidBuildConfiguration.keystore,\n          'shell-unaligned.apk',\n          androidBuildConfiguration.keyAlias,\n        ],\n        {\n          pipeToLogger: true,\n          loggerFields: { buildPhase: 'signing created apk' },\n        }\n      );\n      await spawnAsync(`zipalign`, ['-v', '4', 'shell-unaligned.apk', 'shell.apk'], {\n        pipeToLogger: true,\n        loggerFields: { buildPhase: 'verifying apk alignment' },\n      });\n      try {\n        await fs.remove('shell-unaligned.apk');\n      } catch (e) {}\n    }\n    await spawnAsync(\n      `jarsigner`,\n      [\n        '-verify',\n        '-verbose',\n        '-certs',\n        '-keystore',\n        androidBuildConfiguration.keystore,\n        'shell.apk',\n      ],\n      {\n        pipeToLogger: true,\n        loggerFields: { buildPhase: 'verifying apk' },\n      }\n    );\n    await fs.copy('shell.apk', androidBuildConfiguration.outputFile || '/tmp/shell-signed.apk');\n  } else {\n    try {\n      await fs.remove('shell-debug.apk');\n    } catch (e) {}\n    let gradleBuildCommand;\n    if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 32) {\n      gradleBuildCommand = 'assembleDevKernelDebug';\n    } else {\n      gradleBuildCommand = 'assembleDevMinSdkDevKernelDebug';\n    }\n    await spawnAsyncThrowError(`./gradlew`, [gradleBuildCommand], {\n      pipeToLogger: true,\n      loggerFields: { buildPhase: 'running gradle' },\n      cwd: shellPath,\n    });\n    let apkPath;\n    if (ExponentTools.parseSdkMajorVersion(sdkVersion) >= 32) {\n      apkPath = path.join(\n        shellPath,\n        'app',\n        'build',\n        'outputs',\n        'apk',\n        'devKernel',\n        'debug',\n        'app-devKernel-debug.apk'\n      );\n    } else {\n      apkPath = path.join(\n        shellPath,\n        'app',\n        'build',\n        'outputs',\n        'apk',\n        'devMinSdkDevKernel',\n        'debug',\n        'app-devMinSdk-devKernel-debug.apk'\n      );\n    }\n    await fs.copy(apkPath, `/tmp/shell-debug.apk`);\n  }\n}\n\nexport function addDetachedConfigToExp(exp: Object, context: StandaloneContext): Object {\n  if (context.type !== 'user') {\n    console.warn(`Tried to modify exp for a non-user StandaloneContext, ignoring`);\n    return exp;\n  }\n  let shellPath = shellPathForContext(context);\n  let assetsDirectory = path.join(shellPath, 'app', 'src', 'main', 'assets');\n  exp.android.publishBundlePath = path.relative(\n    context.data.projectPath,\n    path.join(assetsDirectory, 'shell-app.bundle')\n  );\n  exp.android.publishManifestPath = path.relative(\n    context.data.projectPath,\n    path.join(assetsDirectory, 'shell-app-manifest.json')\n  );\n  return exp;\n}\n\n/**\n\nSome files in `android` directory have the following patterns of code:\n\n```\n// WHEN_PREPARING_SHELL_REMOVE_FROM_HERE\n\n// BEGIN_SDK_30\nsome SDK 30-specific code\n// END_SDK_30\n\n// BEGIN_SDK_29\nsome SDK 29-specific code\n// END_SDK_29\n\n...\n\n// WHEN_PREPARING_SHELL_REMOVE_TO_HERE\n```\n\nThe following function replaces all `BEGIN_SDK_XX` with `REMOVE_TO_HERE`\nand all `END_SDK_XX` with `REMOVE_FROM_HERE`, so after the change the code above would read:\n\n```\n// WHEN_PREPARING_SHELL_REMOVE_FROM_HERE\n\n// WHEN_PREPARING_SHELL_REMOVE_TO_HERE       <--- changed\nsome SDK 30-specific code\n// WHEN_PREPARING_SHELL_REMOVE_FROM_HERE     <--- changed\n\n// BEGIN_SDK_29\nsome SDK 29-specific code\n// END_SDK_29\n\n...\n\n// WHEN_PREPARING_SHELL_REMOVE_TO_HERE\n```\n\nThis allows us to use `deleteLinesInFileAsync` function to remove obsolete SDKs code easily.\n\n */\nconst removeInvalidSdkLinesWhenPreparingShell = async (majorSdkVersion, filePath) => {\n  await regexFileAsync(\n    new RegExp(`BEGIN_SDK_${majorSdkVersion}`, 'g'),\n    `WHEN_PREPARING_SHELL_REMOVE_TO_HERE`,\n    filePath\n  );\n  await regexFileAsync(\n    new RegExp(`END_SDK_${majorSdkVersion}`, 'g'),\n    `WHEN_PREPARING_SHELL_REMOVE_FROM_HERE`,\n    filePath\n  );\n  await deleteLinesInFileAsync(\n    /WHEN_PREPARING_SHELL_REMOVE_FROM_HERE/g,\n    'WHEN_PREPARING_SHELL_REMOVE_TO_HERE',\n    filePath\n  );\n};\n\nasync function removeObsoleteSdks(shellPath: string, requiredSdkVersion: string) {\n  const filePathsToTransform = {\n    // Remove obsolete `expoview-abiXX_X_X` dependencies\n    appBuildGradle: path.join(shellPath, 'app/build.gradle'),\n    // Remove obsolete `host.exp.exponent:reactandroid:XX.X.X` dependencies from expoview\n    expoviewBuildGradle: path.join(shellPath, 'expoview/build.gradle'),\n    // Remove no-longer-valid interfaces from MultipleVersionReactNativeActivity\n    multipleVersionReactNativeActivity: path.join(\n      shellPath,\n      'expoview/src/main/java/host/exp/exponent/experience/MultipleVersionReactNativeActivity.java'\n    ),\n    // Remove invalid ABI versions from Constants\n    constants: path.join(shellPath, 'expoview/src/main/java/host/exp/exponent/Constants.java'),\n    // Remove non-existent DevSettingsActivities\n    appAndroidManifest: path.join(shellPath, 'app/src/main/AndroidManifest.xml'),\n  };\n\n  const majorSdkVersion = parseSdkMajorVersion(requiredSdkVersion);\n\n  // The single SDK change will happen when transitioning from SDK 30 to 31.\n  // Since SDK 31 there will be no versioned ABIs in shell applications, only unversioned one.\n  // And as such, we will treat the unversioned ABI as the SDK one by assigning TEMPORARY_ABI_VERSION.\n  const effectiveSdkVersion = majorSdkVersion > 30 ? 'UNVERSIONED' : `${majorSdkVersion}`;\n\n  if (effectiveSdkVersion === 'UNVERSIONED') {\n    await regexFileAsync(\n      'TEMPORARY_ABI_VERSION = null;',\n      `TEMPORARY_ABI_VERSION = \"${requiredSdkVersion}\";`,\n      filePathsToTransform.constants\n    );\n  }\n\n  await Promise.all(\n    Object.values(filePathsToTransform).map(filePath =>\n      removeInvalidSdkLinesWhenPreparingShell(effectiveSdkVersion, filePath)\n    )\n  );\n}\n"],"sourceRoot":"/xdl@52.0.12/src"}