{"version":3,"sources":["detach/AssetBundle.js"],"names":["async","context","assets","dest","oldFormat","reduce","res","cur","concat","fileHashes","map","h","type","await","fs","ensureDir","urlResolver","createAssetsUrlResolver","batches","_","chunk","batch","Promise","all","asset","extensionIndex","lastIndexOf","prefixLength","length","hash","substring","saveUrlToPathAsync","path","join","bundleAsync","EXPO_DOMAINS","ASSETS_DIR_DEFAULT_URL","let","assetsDirUrl","assetUrlOverride","config","publishedUrl","published","url","hostname","parse","maybeExpoDomain","takeRight","split","includes","resolve"],"mappings":";;;;;;;;+BAgBOA,WACLC,OADKD,EAELE,MAFKF,EAGLG,IAHKH,EAILI,YAAqB,KAJhBJ,EAKU;AACf,QAAI,CAACE,MAAL,EAAa;AACX;AACF;AACA;AACA,QAAI,OAAOA,OAAO,CAAPA,CAAP,KAAqB,QAAzB,EAAmC;AACjCA,eAASA,OAAOG,MAAPH,CACP,UAACI,GAAD,EAAMC,GAAN;AAAA,eACED,IAAIE,MAAJF,CAAWC,IAAIE,UAAJF,CAAeG,GAAfH,CAAmBI;AAAAA,iBAAK,WAAWA,CAAX,IAAgBJ,IAAIK,IAAJL,GAAW,MAAMA,IAAIK,IAArBL,GAA4B,EAA5C,CAALI;AAAAA,SAAnBJ,CAAXD,CADF;AAAA,OADOJ,EAGP,EAHOA,CAATA;AAKF;;AAEAW,UAAMC,sCAAGC,SAAHD,CAAaX,IAAbW,CAAND;;AAEA,UAAMG,cAAcC,wBAAwBhB,OAAxBgB,CAApB;;AAEA,UAAMC,UAAUC,oCAAEC,KAAFD,CAAQjB,MAARiB,EAAgB,CAAhBA,CAAhB;AACA,SAAK,MAAME,KAAX,IAAoBH,OAApB,EAA6B;AAC3BL,YAAMS,QAAQC,GAARD,CACJD,MAAMX,GAANW;AAAAA,sCAAUrB,WAAMwB,KAANxB,EAAe;AACvB,gBAAMyB,iBAAiBD,MAAME,WAANF,CAAkB,GAAlBA,CAAvB;AACA,gBAAMG,eAAe,SAASC,MAA9B;AACA,gBAAMC,OACJJ,kBAAkB,CAAlBA,GACID,MAAMM,SAANN,CAAgBG,YAAhBH,EAA8BC,cAA9BD,CADJC,GAEID,MAAMM,SAANN,CAAgBG,YAAhBH,CAHN;AAIAX,gBAAMkB,kEACJf,YAAYa,IAAZb,CADIe;AAEJ;AACAC,wBAAKC,IAALD,CAAU7B,IAAV6B,EAAgB5B,YAAYyB,IAAZzB,GAAmBoB,KAAnCQ,CAHID,CAANlB;AAKD,SAZDQ;;AAAAA;AAAAA;AAAAA;AAAAA,WADIC,CAANT;AAeF;AACF,G;;kBAxCsBqB,W;;;;;;;AAXtB;AAAA;AAAA;;;;AACA;AAAA;AAAA;;AACA;;AACA;;;;AAEA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;2cAXA;;;AAaA,MAAMC,eAAe,CAAC,SAAD,EAAY,UAAZ,CAArB;AACA,MAAMC,yBAAyB,+CAA/B;;AA4CA,SAASnB,uBAAT,CAAiChB,OAAjC,EAA0C;AACxCoC,MAAIC,eAAeF,sBAAnBC;AACA,MAAIpC,OAAJ,EAAa;AACX,UAAM,EAAEsC,mBAAmB,UAArB,KAAoCtC,QAAQuC,MAAlD;AACA,UAAMC,eAAexC,QAAQyC,SAARzC,CAAkB0C,GAAvC;AACA,UAAM,EAAEC,QAAF,KAAeD,aAAIE,KAAJF,CAAUF,YAAVE,CAArB;AACA,UAAMG,kBAAkB3B,oCAAE4B,SAAF5B,CAAYyB,SAASI,KAATJ,CAAe,GAAfA,CAAZzB,EAAiC,CAAjCA,EAAoCc,IAApCd,CAAyC,GAAzCA,CAAxB;AACA,QAAI,CAACA,oCAAE8B,QAAF9B,CAAWgB,YAAXhB,EAAyB2B,eAAzB3B,CAAL,EAAgD;AAC9CmB,qBAAeK,aAAIO,OAAJP,CAAYF,YAAZE,EAA0BJ,gBAA1BI,CAAfL;AACF;AACF;AACA,SAAOT,QAAS,GAAES,YAAa,IAAGT,IAAK,EAAvC;AACF","file":"../../detach/AssetBundle.js","sourcesContent":["// Copyright 2015-present 650 Industries. All rights reserved.\n/**\n * @flow\n */\n\nimport _ from 'lodash';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport url from 'url';\n\nimport { saveUrlToPathAsync } from './ExponentTools';\nimport StandaloneContext from './StandaloneContext';\n\nconst EXPO_DOMAINS = ['expo.io', 'exp.host'];\nconst ASSETS_DIR_DEFAULT_URL = 'https://d1wp6m56sqw74a.cloudfront.net/~assets';\n\nexport async function bundleAsync(\n  context: StandaloneContext,\n  assets: ?(Array<string> | Array<Object>),\n  dest: string,\n  oldFormat: boolean = false\n): Promise<void> {\n  if (!assets) {\n    return;\n  }\n  // Compat with exp 46.x.x, can remove when this version is phasing out.\n  if (typeof assets[0] === 'object') {\n    assets = assets.reduce(\n      (res, cur) =>\n        res.concat(cur.fileHashes.map(h => 'asset_' + h + (cur.type ? '.' + cur.type : ''))),\n      []\n    );\n  }\n\n  await fs.ensureDir(dest);\n\n  const urlResolver = createAssetsUrlResolver(context);\n\n  const batches = _.chunk(assets, 5);\n  for (const batch of batches) {\n    await Promise.all(\n      batch.map(async asset => {\n        const extensionIndex = asset.lastIndexOf('.');\n        const prefixLength = 'asset_'.length;\n        const hash =\n          extensionIndex >= 0\n            ? asset.substring(prefixLength, extensionIndex)\n            : asset.substring(prefixLength);\n        await saveUrlToPathAsync(\n          urlResolver(hash),\n          // For sdk24 the runtime expects only the hash as the filename.\n          path.join(dest, oldFormat ? hash : asset)\n        );\n      })\n    );\n  }\n}\n\nfunction createAssetsUrlResolver(context) {\n  let assetsDirUrl = ASSETS_DIR_DEFAULT_URL;\n  if (context) {\n    const { assetUrlOverride = './assets' } = context.config;\n    const publishedUrl = context.published.url;\n    const { hostname } = url.parse(publishedUrl);\n    const maybeExpoDomain = _.takeRight(hostname.split('.'), 2).join('.');\n    if (!_.includes(EXPO_DOMAINS, maybeExpoDomain)) {\n      assetsDirUrl = url.resolve(publishedUrl, assetUrlOverride);\n    }\n  }\n  return hash => `${assetsDirUrl}/${hash}`;\n}\n"],"sourceRoot":"/xdl@52.0.12/src"}