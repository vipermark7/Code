{"version":3,"sources":["tools/UpdateVersions.js"],"names":["async","sdkVersion","reactNativeTag","facebookRNVersion","facebookReactVersion","let","versions","await","Versions","versionsAsync","sdkVersions","expoReactNativeTag","facebookReactNativeVersion","setVersionsAsync","updateSdkVersionsAsync","s3Client","pathToApp","appVersion","tempAppPath","path","join","process","cwd","spawnAsync","stdio","file","fs","createReadStream","console","log","putObject","Bucket","Key","Body","ACL","promise","updateIOSSimulatorBuild","updateAndroidApk","platform","platforms","forEach","p","_","set","updateTurtleVersionAsync"],"mappings":"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","file":"../../tools/UpdateVersions.js","sourcesContent":["/**\n * @flow\n */\n\nimport fs from 'fs';\nimport path from 'path';\nimport spawnAsync from '@expo/spawn-async';\nimport _ from 'lodash';\nimport * as Versions from '../Versions';\n\nexport async function updateSdkVersionsAsync(\n  sdkVersion: string,\n  reactNativeTag: string,\n  facebookRNVersion: string,\n  facebookReactVersion: string\n) {\n  let versions = await Versions.versionsAsync();\n  versions.sdkVersions[sdkVersion] = {\n    ...versions.sdkVersions[sdkVersion],\n    expoReactNativeTag: reactNativeTag,\n    facebookReactNativeVersion: facebookRNVersion,\n    facebookReactVersion,\n  };\n  await Versions.setVersionsAsync(versions);\n}\n\nexport async function updateIOSSimulatorBuild(\n  s3Client: any,\n  pathToApp: string,\n  appVersion: string\n) {\n  let tempAppPath = path.join(process.cwd(), 'temp-app.tar.gz');\n\n  await spawnAsync('tar', ['-zcvf', tempAppPath, '-C', pathToApp, '.'], {\n    cwd: process.cwd(),\n    stdio: ['ignore', 'ignore', 'inherit'], // only stderr\n  });\n\n  let file = fs.createReadStream(tempAppPath);\n\n  console.log('Uploading...');\n\n  await s3Client\n    .putObject({\n      Bucket: 'exp-ios-simulator-apps',\n      Key: `Exponent-${appVersion}.tar.gz`,\n      Body: file,\n      ACL: 'public-read',\n    })\n    .promise();\n\n  await spawnAsync('rm', [tempAppPath]);\n\n  console.log('Adding to server config...');\n\n  let versions = await Versions.versionsAsync();\n  versions['iosVersion'] = appVersion;\n  versions['iosUrl'] = `https://dpq5q02fu5f55.cloudfront.net/Exponent-${appVersion}.tar.gz`;\n  await Versions.setVersionsAsync(versions);\n}\n\nexport async function updateAndroidApk(s3Client: any, pathToApp: string, appVersion: string) {\n  let file = fs.createReadStream(pathToApp);\n\n  console.log('Uploading...');\n\n  await s3Client\n    .putObject({\n      Bucket: 'exp-android-apks',\n      Key: `Exponent-${appVersion}.apk`,\n      Body: file,\n      ACL: 'public-read',\n    })\n    .promise();\n\n  console.log('Adding to server config...');\n\n  let versions = await Versions.versionsAsync();\n  versions['androidVersion'] = appVersion;\n  versions['androidUrl'] = `https://d1ahtucjixef4r.cloudfront.net/Exponent-${appVersion}.apk`;\n  await Versions.setVersionsAsync(versions);\n}\n\nexport async function updateTurtleVersionAsync(sdkVersion: string, platform: string) {\n  const platforms = platform === 'both' ? ['android', 'ios'] : [platform];\n  const versions = await Versions.versionsAsync();\n  platforms.forEach(p => _.set(versions, ['turtleSdkVersions', p], sdkVersion));\n  await Versions.setVersionsAsync(versions);\n}\n"],"sourceRoot":"/xdl@52.0.12/src"}