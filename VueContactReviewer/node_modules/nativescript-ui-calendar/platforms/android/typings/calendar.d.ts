declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class BuildConfig extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.widget.calendar.BuildConfig>;
					public static DEBUG: boolean;
					public static APPLICATION_ID: string;
					public static BUILD_TYPE: string;
					public static FLAVOR: string;
					public static VERSION_CODE: number;
					public static VERSION_NAME: string;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class CalendarAdapter extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.widget.calendar.CalendarAdapter>;
					public owner: com.telerik.widget.calendar.RadCalendarView;
					public context: globalAndroid.content.Context;
					public dateCells: java.util.List<com.telerik.widget.calendar.CalendarCell>;
					public weekNumberCells: java.util.List<com.telerik.widget.calendar.CalendarCell>;
					public dayNameCells: java.util.List<com.telerik.widget.calendar.CalendarCell>;
					public style: com.telerik.widget.calendar.CalendarStyle;
					public workCalendar: java.util.Calendar;
					public getDayNameCell(): com.telerik.widget.calendar.CalendarCell;
					public setDateValues(param0: globalAndroid.util.SparseArray<string>): void;
					public applyProcedureToDateCells(param0: com.telerik.android.common.Procedure<com.telerik.widget.calendar.CalendarCell>): void;
					public setWeekNumberTypeFace(param0: globalAndroid.graphics.Typeface): void;
					public getDayNameTextColor(): number;
					public setInlineEventTitleTextSize(param0: number): void;
					public getDayNameTextSizeYearMode(): number;
					public setDateTextSizeYearMode(param0: number): void;
					public getTitleBackgroundColor(): number;
					public setTitleTextSize(param0: number): void;
					public setDateCellPaddingVertical(param0: number): void;
					public getSelectedCellTypeFace(): globalAndroid.graphics.Typeface;
					public getTodayTypeFace(): globalAndroid.graphics.Typeface;
					public getDateCell(): com.telerik.widget.calendar.CalendarDayCell;
					public setMonthNameTypeFace(param0: globalAndroid.graphics.Typeface): void;
					public getWeekNumberTypeFace(): globalAndroid.graphics.Typeface;
					public getTodayTextColor(): number;
					public getDayNamePaddingVertical(): number;
					public setDayNameTextColor(param0: number): void;
					public updateWeekNumberCellStyle(param0: com.telerik.widget.calendar.CalendarDayCell): void;
					public setWeekNumberTextSize(param0: number): void;
					public setDateTextColorYearMode(param0: number, param1: number): void;
					public getDateTextSizeYearMode(): number;
					public setMonthCellPaddingVertical(param0: number): void;
					public getSelectedCellBackgroundColor(): number;
					public generateCalendarRow(): com.telerik.widget.calendar.CalendarRow;
					public setSelectedCellTypeFace(param0: globalAndroid.graphics.Typeface): void;
					public getMonthNameCached(param0: number): string;
					public getDayNameTextColorYearModeDisabled(): number;
					public setTodayCellBorderColor(param0: number): void;
					public updateDayNameCellStyle(param0: com.telerik.widget.calendar.CalendarDayCell): void;
					public getDateValues(): globalAndroid.util.SparseArray<string>;
					public getTitleTypeFace(): globalAndroid.graphics.Typeface;
					public setDayNameTypefaceYearMode(param0: globalAndroid.graphics.Typeface): void;
					public getCapitalizeDayNames(): boolean;
					public setTodayTextColor(param0: number): void;
					public setTitleTextPosition(param0: number): void;
					public getWeekNumberTextColorDisabled(): number;
					public setMonthNameTextColor(param0: number, param1: number): void;
					public getSelectedCellBorderWidth(): number;
					public setMonthNameTextSize(param0: number): void;
					public getInlineEventTitleTextSize(): number;
					public getDateTypeFaceYearMode(): globalAndroid.graphics.Typeface;
					public setDayNameTextPosition(param0: number): void;
					public getDayNameCell(param0: number): com.telerik.widget.calendar.CalendarDayCell;
					public getDateCellPaddingVertical(): number;
					public getDayNamePaddingHorizontal(): number;
					public getTitleTextColor(): number;
					public setDayNameTextColorYearMode(param0: number, param1: number): void;
					public updateDateCellStyle(param0: com.telerik.widget.calendar.CalendarDayCell): void;
					public applyStyle(param0: com.telerik.widget.calendar.CalendarStyle): void;
					public getDayNameTextPosition(): number;
					public getMonthNameTextPosition(): number;
					public updateWeekNumberCell(param0: com.telerik.widget.calendar.CalendarDayCell, param1: number): void;
					public getTodayCellBorderColor(): number;
					public setTodayCellBackgroundColor(param0: number): void;
					public applyProcedureToDayNameCells(param0: com.telerik.android.common.Procedure<com.telerik.widget.calendar.CalendarCell>): void;
					public reset(): void;
					public setTitleTextColor(param0: number): void;
					public getPopupEventTimeTextSize(): number;
					public setDateTypeFaceYearMode(param0: globalAndroid.graphics.Typeface): void;
					public setSelectedCellBorderWidth(param0: number): void;
					public generateCalendarDayCell(): com.telerik.widget.calendar.CalendarDayCell;
					public getDayNameTypefaceYearMode(): globalAndroid.graphics.Typeface;
					public updateMonthCellStyle(param0: com.telerik.widget.calendar.CalendarMonthCell): void;
					public getTitleTextSize(): number;
					public updateDayNameCell(param0: com.telerik.widget.calendar.CalendarDayCell, param1: number): void;
					public setDayNameTypeFace(param0: globalAndroid.graphics.Typeface): void;
					public setDateTextPosition(param0: number): void;
					public getMonthNameTextSizeCompact(): number;
					public setWeekNumberTextColor(param0: number, param1: number): void;
					public setDateCellPaddingHorizontal(param0: number): void;
					public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
					public setDateTextColor(param0: number, param1: number): void;
					public getInlineEventsBackgroundColor(): number;
					public setWeekNumberBackgroundColor(param0: number, param1: number): void;
					public setCapitalizeDayNames(param0: boolean): void;
					public setDayNameBackgroundColor(param0: number): void;
					public generateCalendarMonthCell(): com.telerik.widget.calendar.CalendarMonthCell;
					public getDateTextColorEnabled(): number;
					public getTodayCellBorderWidth(): number;
					public setInlineEventTimeStartTextColor(param0: number): void;
					public setSelectedCellTextColor(param0: number): void;
					public setTitleBackgroundColor(param0: number): void;
					public setInlineEventTimeEndTextColor(param0: number): void;
					public setTodayBackgroundColor(param0: number): void;
					public setTodayCellTypeFace(param0: globalAndroid.graphics.Typeface): void;
					public getDateTextColorDisabled(): number;
					public setDayNameTextSize(param0: number): void;
					public updateTitleCellStyle(param0: com.telerik.widget.calendar.CalendarDayCell): void;
					public getTitleTextPosition(): number;
					public setInlineEventsBackgroundColor(param0: number): void;
					public setTodayCellSelectedTextColor(param0: number): void;
					public getInlineEventTimeEndTextColor(): number;
					public updateDateCell(param0: com.telerik.widget.calendar.CalendarDayCell, param1: java.lang.Long, param2: java.util.List<com.telerik.widget.calendar.events.Event>, param3: boolean): void;
					public getMonthNameTextSize(): number;
					public setPopupEventsWindowBackgroundColor(param0: number): void;
					public applyProcedureToAllCells(param0: com.telerik.android.common.Procedure<com.telerik.widget.calendar.CalendarCell>): void;
					public setMonthCellPaddingHorizontal(param0: number): void;
					public getWeekNumberCell(): com.telerik.widget.calendar.CalendarDayCell;
					public getWeekNumberTextSize(): number;
					public setMonthNameTextPosition(param0: number): void;
					public getDateTextSize(): number;
					public setPopupEventTimeTextSize(param0: number): void;
					public getDayNameTextColorYearModeEnabled(): number;
					public getPopupEventsWindowBackgroundColor(): number;
					public setTodayTypeFace(param0: globalAndroid.graphics.Typeface): void;
					public getMonthNameTextColorEnabled(): number;
					public getDateCellPaddingHorizontal(): number;
					public setStyle(param0: com.telerik.widget.calendar.CalendarStyle): void;
					public getTitleCell(param0: number, param1: com.telerik.widget.calendar.CalendarDisplayMode): com.telerik.widget.calendar.CalendarTitleCell;
					public getWeekNumberTextColorEnabled(): number;
					public getStyle(): com.telerik.widget.calendar.CalendarStyle;
					public setSelectedCellBackgroundColor(param0: number): void;
					public getDateTypeFace(): globalAndroid.graphics.Typeface;
					public setInlineEventTimeStartTextSize(param0: number): void;
					public updateTitle(param0: com.telerik.widget.calendar.CalendarDayCell, param1: number, param2: com.telerik.widget.calendar.CalendarDisplayMode): void;
					public setTitleTypeFace(param0: globalAndroid.graphics.Typeface): void;
					public setWeekNumberTextPosition(param0: number): void;
					public setDayNameTextSizeYearMode(param0: number): void;
					public getDateCellBackgroundColorEnabled(): number;
					public setDateTextSize(param0: number): void;
					public getTodayCellBackgroundColor(): number;
					public generateFragment(): com.telerik.widget.calendar.CalendarFragment;
					public setPopupEventTitleTextSize(param0: number): void;
					public getDateCellBackgroundColorDisabled(): number;
					public getInlineEventTimeStartTextSize(): number;
					public getMonthNameTextColorDisabled(): number;
					public getDateTextColorYearModeEnabled(): number;
					public getWeekNumberBackgroundColorEnabled(): number;
					public getTodayBackgroundColor(): number;
					public getMonthCellPaddingHorizontal(): number;
					public getDayNameBackgroundColor(): number;
					public getInlineEventTimeStartTextColor(): number;
					public getDayNameTextSize(): number;
					public getTodayCellTypeFace(): globalAndroid.graphics.Typeface;
					public getWeekNumberTextPosition(): number;
					public updateCalendarMonthCell(param0: com.telerik.widget.calendar.CalendarMonthCell, param1: number): void;
					public getDateTextColorYearModeDisabled(): number;
					public setMonthNameTextSizeCompact(param0: number): void;
					public setDayNamePadding(param0: number, param1: number): void;
					public getTodayCellSelectedTextColor(): number;
					public getPopupEventTitleTextSize(): number;
					public setDateCellBackgroundColor(param0: number, param1: number): void;
					public getTodayCellTextColor(): number;
					public getWeekNumberBackgroundColorDisabled(): number;
					public getDateTextPosition(): number;
					public setTodayCellTextColor(param0: number): void;
					public getMonthNameTypeFace(): globalAndroid.graphics.Typeface;
					public getDayNameTypeFace(): globalAndroid.graphics.Typeface;
					public setTodayCellBorderWidth(param0: number): void;
					public getMonthCell(): com.telerik.widget.calendar.CalendarMonthCell;
					public getMonthCellPaddingVertical(): number;
					public setInlineEventTimeEndTextSize(param0: number): void;
					public setDateTypeFace(param0: globalAndroid.graphics.Typeface): void;
					public getSelectedCellTextColor(): number;
					public applyProcedureToWeekNumberCells(param0: com.telerik.android.common.Procedure<com.telerik.widget.calendar.CalendarCell>): void;
					public updateMonthNamesCache(): void;
					public getInlineEventTimeEndTextSize(): number;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class CalendarAnimationsManager extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.widget.calendar.CalendarAnimationsManager>;
					public owner: com.telerik.widget.calendar.RadCalendarView;
					public scrollManager: com.telerik.widget.calendar.CalendarScrollManager;
					public flingSpeed: number;
					public snapSpeed: number;
					public currentSnapDistance: number;
					public currentSnapFramesCount: number;
					public currentSnapFrameCount: number;
					public activeDateRefreshRequested: boolean;
					public flingVelocityX: number;
					public flingVelocityY: number;
					public currentSnapOffsetX: number;
					public currentSnapOffsetY: number;
					public minFlingDistance: number;
					public onSnapComplete(): void;
					public reset(): void;
					public getSnapSpeed(): number;
					public setFriction(param0: number): void;
					public animateToNextDate(): void;
					public onFlingComplete(): void;
					public setFlingSpeed(param0: number): void;
					public setMinFlingDistance(param0: number): void;
					public setSnapSpeed(param0: number): void;
					public getFriction(): number;
					public beginAnimation(param0: com.telerik.widget.calendar.CalendarFragment, param1: com.telerik.widget.calendar.CalendarFragment, param2: globalAndroid.graphics.Rect): void;
					public getFlingSpeed(): number;
					public snapFragments(): void;
					public getMinFlingDistance(): number;
					public onInvalidate(): void;
					public animationInProcess(): boolean;
					public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
					public setVelocity(param0: number, param1: number): void;
					public animateToPreviousDate(): void;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export abstract class CalendarCell extends com.telerik.widget.calendar.CalendarTextElement {
					public static class: java.lang.Class<com.telerik.widget.calendar.CalendarCell>;
					public cellType: com.telerik.widget.calendar.CalendarCellType;
					public cellToday: boolean;
					public getDate(): number;
					public getBorderColor(): number;
					public setCellType(param0: com.telerik.widget.calendar.CalendarCellType): void;
					public isToday(): boolean;
					public getRow(): com.telerik.widget.calendar.CalendarRow;
					public setLastCellInRow(param0: boolean): void;
					public isDrawBorderInsideCell(): boolean;
					public isWeekend(): boolean;
					public borderPaint(): globalAndroid.graphics.Paint;
					public isLastCellInRow(): boolean;
					public getBorderWidth(): number;
					public getCellType(): com.telerik.widget.calendar.CalendarCellType;
					public setDrawBorderInsideCell(param0: boolean): void;
					public updateBorder(): void;
					public setBorderWidth(param0: number): void;
					public setRow(param0: com.telerik.widget.calendar.CalendarRow): void;
					public setAsToday(param0: boolean): void;
					public postRender(param0: globalAndroid.graphics.Canvas): void;
					public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
					public setDate(param0: number): void;
					public setBorderColor(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export abstract class CalendarCellStyle extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.widget.calendar.CalendarCellStyle>;
					public setBorderColor(param0: java.lang.Integer): void;
					public getFontName(): string;
					public getTextColor(): java.lang.Integer;
					public getBackgroundColor(): java.lang.Integer;
					public getBorderWidth(): java.lang.Float;
					public getBorderColor(): java.lang.Integer;
					public setBackgroundColor(param0: java.lang.Integer): void;
					public setFontStyle(param0: java.lang.Integer): void;
					public setBorderWidth(param0: java.lang.Float): void;
					public setTextColor(param0: java.lang.Integer): void;
					public getTextSize(): java.lang.Float;
					public getFontStyle(): java.lang.Integer;
					public constructor();
					public setFontName(param0: string): void;
					public setTextSize(param0: java.lang.Float): void;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class CalendarCellType {
					public static class: java.lang.Class<com.telerik.widget.calendar.CalendarCellType>;
					public static Date: com.telerik.widget.calendar.CalendarCellType;
					public static WeekNumber: com.telerik.widget.calendar.CalendarCellType;
					public static DayName: com.telerik.widget.calendar.CalendarCellType;
					public static Title: com.telerik.widget.calendar.CalendarCellType;
					public static valueOf(param0: string): com.telerik.widget.calendar.CalendarCellType;
					public static values(): native.Array<com.telerik.widget.calendar.CalendarCellType>;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class CalendarDayCell extends com.telerik.widget.calendar.CalendarCell {
					public static class: java.lang.Class<com.telerik.widget.calendar.CalendarDayCell>;
					public getSecondaryTextColorDisabled(): number;
					public setSecondaryTextSize(param0: number): void;
					public setIsFromCurrentMonth(param0: boolean): void;
					public setSecondaryText(param0: string): void;
					public setSecondaryTextColor(param0: number, param1: number): void;
					public getSecondaryText(): string;
					public getEvents(): java.util.List<com.telerik.widget.calendar.events.Event>;
					public arrange(param0: number, param1: number, param2: number, param3: number): void;
					public render(param0: globalAndroid.graphics.Canvas): void;
					public isSelectable(): boolean;
					public setSelected(param0: boolean): void;
					public getIsFromCurrentMonth(): boolean;
					public getSecondaryTextColorEnabled(): number;
					public updateTextColor(): void;
					public drawEvents(param0: globalAndroid.graphics.Canvas): void;
					public setEvents(param0: java.util.List<com.telerik.widget.calendar.events.Event>): void;
					public onAlphaChanged(): void;
					public calculateSecondaryTextPosition(): void;
					public setEnabled(param0: boolean): void;
					public getSecondaryTextPosition(): number;
					public getSecondaryTextSize(): number;
					public setSecondaryTextPosition(param0: number): void;
					public updateSecondaryTextColor(): void;
					public secondaryTextPaint(): globalAndroid.graphics.Paint;
					public setSelectable(param0: boolean): void;
					public setVisibility(param0: com.telerik.widget.calendar.ElementVisibility): void;
					public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
					public isSelected(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class CalendarDayCellFilter extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.widget.calendar.CalendarDayCellFilter>;
					public getIsToday(): java.lang.Boolean;
					public setIsWeekend(param0: java.lang.Boolean): void;
					public getCalendarDisplayMode(): com.telerik.widget.calendar.CalendarDisplayMode;
					public setCellType(param0: com.telerik.widget.calendar.CalendarCellType): void;
					public setCustom(param0: com.telerik.android.common.Function<com.telerik.widget.calendar.CalendarCell,java.lang.Boolean>): void;
					public setIsSelected(param0: java.lang.Boolean): void;
					public setIsToday(param0: java.lang.Boolean): void;
					public getIsFromCurrentMonth(): java.lang.Boolean;
					public setCalendarDisplayMode(param0: com.telerik.widget.calendar.CalendarDisplayMode): void;
					public getCellType(): com.telerik.widget.calendar.CalendarCellType;
					public getIsSelected(): java.lang.Boolean;
					public constructor();
					public setIsFromCurrentMonth(param0: java.lang.Boolean): void;
					public getCustom(): com.telerik.android.common.Function<com.telerik.widget.calendar.CalendarCell,java.lang.Boolean>;
					public getIsWeekend(): java.lang.Boolean;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class CalendarDayCellStyle extends com.telerik.widget.calendar.CalendarCellStyle {
					public static class: java.lang.Class<com.telerik.widget.calendar.CalendarDayCellStyle>;
					public getTextPosition(): java.lang.Integer;
					public getPaddingHorizontal(): java.lang.Integer;
					public setFilter(param0: com.telerik.widget.calendar.CalendarDayCellFilter): void;
					public getFilter(): com.telerik.widget.calendar.CalendarDayCellFilter;
					public constructor();
					public getPaddingVertical(): java.lang.Integer;
					public setTextPosition(param0: java.lang.Integer): void;
					public setPaddingHorizontal(param0: java.lang.Integer): void;
					public setPaddingVertical(param0: java.lang.Integer): void;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class CalendarDisplayMode {
					public static class: java.lang.Class<com.telerik.widget.calendar.CalendarDisplayMode>;
					public static Month: com.telerik.widget.calendar.CalendarDisplayMode;
					public static Year: com.telerik.widget.calendar.CalendarDisplayMode;
					public static Week: com.telerik.widget.calendar.CalendarDisplayMode;
					public static Day: com.telerik.widget.calendar.CalendarDisplayMode;
					public static values(): native.Array<com.telerik.widget.calendar.CalendarDisplayMode>;
					public static valueOf(param0: string): com.telerik.widget.calendar.CalendarDisplayMode;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export abstract class CalendarElement extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.widget.calendar.CalendarElement>;
					public static TOP: number;
					public static LEFT: number;
					public static RIGHT: number;
					public static BOTTOM: number;
					public static CENTER_HORIZONTAL: number;
					public static CENTER_VERTICAL: number;
					public static CENTER: number;
					public virtualOffsetX: number;
					public virtualOffsetY: number;
					public context: globalAndroid.content.Context;
					public owner: com.telerik.widget.calendar.RadCalendarView;
					public backgroundPaint: globalAndroid.graphics.Paint;
					public parent: com.telerik.widget.calendar.CalendarElement;
					public visibility: com.telerik.widget.calendar.ElementVisibility;
					public enabled: boolean;
					public alpha: number;
					public setPaddingHorizontal(param0: number): void;
					public getBitmapPosition(): number;
					public getBottom(): number;
					public virtualBottom(): number;
					public arrange(param0: number, param1: number, param2: number, param3: number): void;
					public calcBorderRect(): globalAndroid.graphics.Rect;
					public virtualTranslate(param0: number, param1: number): void;
					public getPaddingLeft(): number;
					public setPadding(param0: number, param1: number, param2: number, param3: number): void;
					public isEnabled(): boolean;
					public getPaddingTop(): number;
					public onAlphaChanged(): void;
					public setParent(param0: com.telerik.widget.calendar.CalendarElement): void;
					public setEnabled(param0: boolean): void;
					public getAlpha(): number;
					public getPaddingRight(): number;
					public updateBackgroundColor(): void;
					public getRight(): number;
					public getHeight(): number;
					public virtualRight(): number;
					public getPaddingBottom(): number;
					public setBitmapPosition(param0: number): void;
					public translate(param0: number, param1: number): void;
					public setAlpha(param0: number): void;
					public virtualLeft(): number;
					public getLeft(): number;
					public postRender(param0: globalAndroid.graphics.Canvas): void;
					public getVirtualOffsetX(): number;
					public getBackgroundColorDisabled(): number;
					public getBackgroundColorEnabled(): number;
					public setVirtualOffsets(param0: number, param1: number): void;
					public pointIsInsideElement(param0: number, param1: number): boolean;
					public getParent(): com.telerik.widget.calendar.CalendarElement;
					public setBackgroundColorEnabled(param0: number): void;
					public render(param0: globalAndroid.graphics.Canvas): void;
					public getVirtualOffsetY(): number;
					public setVirtualOffsetX(param0: number): void;
					public getVisibility(): com.telerik.widget.calendar.ElementVisibility;
					public onArrange(): void;
					public getWidth(): number;
					public setBackgroundColorDisabled(param0: number): void;
					public setPaddingVertical(param0: number): void;
					public setBackgroundColor(param0: number): void;
					public getBitmap(): globalAndroid.graphics.Bitmap;
					public virtualTop(): number;
					public getTop(): number;
					public setBackgroundColor(param0: number, param1: number): void;
					public setVisibility(param0: com.telerik.widget.calendar.ElementVisibility): void;
					public setVirtualOffsetY(param0: number): void;
					public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
					public setBitmap(param0: globalAndroid.graphics.Bitmap): void;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class CalendarFragment extends com.telerik.widget.calendar.CalendarElement {
					public static class: java.lang.Class<com.telerik.widget.calendar.CalendarFragment>;
					public owner: com.telerik.widget.calendar.RadCalendarView;
					public id: number;
					public firstFullRowIndex(): number;
					public setVirtualOffsets(param0: number, param1: number): void;
					public updateDecorations(): void;
					public recycle(): void;
					public render(param0: globalAndroid.graphics.Canvas): void;
					public reset(param0: com.telerik.widget.calendar.CalendarDisplayMode): void;
					public getDisplayDate(): number;
					public postRender(param0: globalAndroid.graphics.Canvas, param1: boolean): void;
					public setCurrentFragment(param0: boolean): void;
					public rowHeight(): number;
					public drawGridLines(param0: globalAndroid.graphics.Canvas): void;
					public onAlphaChanged(): void;
					public getCellForDate(param0: number): com.telerik.widget.calendar.CalendarCell;
					public setEnabled(param0: boolean): void;
					public updateBackgroundColor(): void;
					public reset(): void;
					public onArrange(): void;
					public isCurrentFragment(): boolean;
					public init(): void;
					public setVirtualXPosition(param0: number): void;
					public setVirtualYPosition(param0: number): void;
					public setDisplayDate(param0: number): void;
					public getCellAtLocation(param0: number, param1: number): com.telerik.widget.calendar.CalendarCell;
					public getVirtualXPosition(): number;
					public getVirtualYPosition(): number;
					public getDisplayMode(): com.telerik.widget.calendar.CalendarDisplayMode;
					public render(param0: globalAndroid.graphics.Canvas, param1: boolean): void;
					public lastRowWithCurrentDateCellsIndex(): number;
					public setDisplayMode(param0: com.telerik.widget.calendar.CalendarDisplayMode): void;
					public postRender(param0: globalAndroid.graphics.Canvas): void;
					public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
					public updateDecorationForCell(param0: com.telerik.widget.calendar.CalendarCell, param1: com.telerik.widget.calendar.decorations.Decorator): void;
					public drawRows(param0: globalAndroid.graphics.Canvas): void;
					public rows(): java.util.ArrayList<com.telerik.widget.calendar.CalendarRow>;
					public trim(): void;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class CalendarGestureManager extends java.lang.Object implements globalAndroid.view.GestureDetector.OnGestureListener, globalAndroid.view.GestureDetector.OnDoubleTapListener, globalAndroid.view.ScaleGestureDetector.OnScaleGestureListener {
					public static class: java.lang.Class<com.telerik.widget.calendar.CalendarGestureManager>;
					public owner: com.telerik.widget.calendar.RadCalendarView;
					public animationsManager: com.telerik.widget.calendar.CalendarAnimationsManager;
					public scrollManager: com.telerik.widget.calendar.CalendarScrollManager;
					public selectionManager: com.telerik.widget.calendar.CalendarSelectionManager;
					public onCellClickListener: com.telerik.widget.calendar.RadCalendarView.OnCellClickListener;
					public displayMode: com.telerik.widget.calendar.CalendarDisplayMode;
					public isScaleInProgress: boolean;
					public currentScaleFactorIsPositive: boolean;
					public gestureDetector: globalAndroid.view.GestureDetector;
					public scaleGestureDetector: globalAndroid.view.ScaleGestureDetector;
					public scrollMode: com.telerik.widget.calendar.ScrollMode;
					public onPinchClose(): void;
					public setUsingDragToMakeRangeSelection(param0: boolean): void;
					public setOnCellClickListener(param0: com.telerik.widget.calendar.RadCalendarView.OnCellClickListener): void;
					public onPinchOpen(): void;
					public onDoubleTap(param0: globalAndroid.view.MotionEvent): boolean;
					public onScale(param0: globalAndroid.view.ScaleGestureDetector): boolean;
					public isUsingSwipeDownToChangeDisplayMode(): boolean;
					public handleTouch(param0: globalAndroid.view.MotionEvent): boolean;
					public handleOnSingleTapUp(): boolean;
					public onScroll(param0: globalAndroid.view.MotionEvent, param1: globalAndroid.view.MotionEvent, param2: number, param3: number): boolean;
					public setPinchCloseToChangeDisplayMode(param0: boolean): void;
					public onScaleEnd(param0: globalAndroid.view.ScaleGestureDetector): void;
					public onSingleTapConfirmed(param0: globalAndroid.view.MotionEvent): boolean;
					public onShowPress(param0: globalAndroid.view.MotionEvent): void;
					public handleDoubleTap(param0: globalAndroid.view.MotionEvent): boolean;
					public isUsingSwipeUpToChangeDisplayMode(): boolean;
					public isUsingTapToChangeDisplayMode(): boolean;
					public handleTapGesture(param0: com.telerik.widget.calendar.CalendarDayCell): void;
					public getOnCellClickListener(): com.telerik.widget.calendar.RadCalendarView.OnCellClickListener;
					public handleSingleTapConfirmed(param0: globalAndroid.view.MotionEvent): boolean;
					public onScaleBegin(param0: globalAndroid.view.ScaleGestureDetector): boolean;
					public setSwipeDownToChangeDisplayMode(param0: boolean): void;
					public handleScroll(param0: number, param1: number, param2: number, param3: number): boolean;
					public isUsingPinchOpenToChangeDisplayMode(): boolean;
					public setDoubleTapToChangeDisplayMode(param0: boolean): void;
					public suspendScroll(): void;
					public isUsingPinchCloseToChangeDisplayMode(): boolean;
					public handleOnScale(param0: globalAndroid.view.ScaleGestureDetector): boolean;
					public handleOnScaleEnd(): void;
					public enableScroll(): void;
					public isUsingDragToMakeRangeSelection(): boolean;
					public onLongPress(param0: globalAndroid.view.MotionEvent): void;
					public onSingleTapUp(param0: globalAndroid.view.MotionEvent): boolean;
					public onDown(param0: globalAndroid.view.MotionEvent): boolean;
					public onFingerUp(): void;
					public handleOnScaleBegin(): boolean;
					public setSwipeUpToChangeDisplayMode(param0: boolean): void;
					public handleFling(param0: number, param1: number): boolean;
					public setPinchOpenToChangeDisplayMode(param0: boolean): void;
					public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
					public handleOnDown(): boolean;
					public onDoubleTapEvent(param0: globalAndroid.view.MotionEvent): boolean;
					public isUsingDoubleTapToChangeDisplayMode(): boolean;
					public onFling(param0: globalAndroid.view.MotionEvent, param1: globalAndroid.view.MotionEvent, param2: number, param3: number): boolean;
					public setTapToChangeDisplayMode(param0: boolean): void;
				}
				export module CalendarGestureManager {
					export class OnTransitionCallback extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.calendar.CalendarGestureManager.OnTransitionCallback>;
						/**
						 * Constructs a new instance of the com.telerik.widget.calendar.CalendarGestureManager$OnTransitionCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onTransitionComplete(): void;
						});
						public constructor();
						public onTransitionComplete(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class CalendarMonthCell extends com.telerik.widget.calendar.CalendarCell {
					public static class: java.lang.Class<com.telerik.widget.calendar.CalendarMonthCell>;
					public static todayPaint: globalAndroid.graphics.Paint;
					public monthNameBounds: globalAndroid.graphics.Rect;
					public monthNameBoundsCompact: globalAndroid.graphics.Rect;
					public dayBounds: globalAndroid.graphics.Rect;
					public dateBoundsOneSymbol: globalAndroid.graphics.Rect;
					public dateBoundsTwoSymbols: globalAndroid.graphics.Rect;
					public monthAvailableSpace: globalAndroid.graphics.Rect;
					public monthNamePaint: globalAndroid.graphics.Paint;
					public datePaint: globalAndroid.graphics.Paint;
					public dayNamesPaint: globalAndroid.graphics.Paint;
					public typefaceLight: globalAndroid.graphics.Typeface;
					public daysOfWeek: globalAndroid.util.SparseArray<string>;
					public dateValues: globalAndroid.util.SparseArray<string>;
					public offsetLeft: number;
					public offsetTop: number;
					public offsetRight: number;
					public offsetBottom: number;
					public horizontalSlot: number;
					public verticalSlot: number;
					public monthNameTextSize: number;
					public monthNameTextSizeCompact: number;
					public monthNamePosition: number;
					public monthNameTextColorEnabled: number;
					public monthNameTextColorDisabled: number;
					public monthNameTypeFace: globalAndroid.graphics.Typeface;
					public dayNameTextSize: number;
					public dayNameTextColorEnabled: number;
					public dayNameTextColorDisabled: number;
					public dayNameTypeFace: globalAndroid.graphics.Typeface;
					public dateTextSize: number;
					public dateTextColorEnabled: number;
					public dateTextColorDisabled: number;
					public dateTypeFace: globalAndroid.graphics.Typeface;
					public monthName: string;
					public monthNamePositionX: number;
					public monthNamePositionY: number;
					public updateMonthNamePosition(): void;
					public renderDayNames(param0: globalAndroid.graphics.Canvas): void;
					public getDateTextColorEnabled(): number;
					public getDayNameTextColorDisabled(): number;
					public setDayNameTextColorEnabled(param0: number): void;
					public getDateTextColorDisabled(): number;
					public setDayNameTextSize(param0: number): void;
					public setMonthNameTypeFace(param0: globalAndroid.graphics.Typeface): void;
					public updateTextColors(): void;
					public onAlphaChanged(): void;
					public setMonthNameColor(param0: number, param1: number): void;
					public updateValuesCache(): void;
					public updateAvailableSpace(): void;
					public setEnabled(param0: boolean): void;
					public updateTypeFace(): void;
					public renderMonthName(param0: globalAndroid.graphics.Canvas): void;
					public updateMonthNameColor(): void;
					public setMonthNameTextColorEnabled(param0: number): void;
					public getMonthNameTextSize(): number;
					public setOffsetTop(param0: number): void;
					public updateElementsColors(): void;
					public isDrawingToday(param0: number): boolean;
					public setMonthNameTextPosition(param0: number): void;
					public getDateTextSize(): number;
					public getMonthNameTextColorEnabled(): number;
					public updateDateTextColor(): void;
					public setMonthNameTextSize(param0: number): void;
					public updateElements(): void;
					public renderDates(param0: globalAndroid.graphics.Canvas): void;
					public setMonthNameTextColorDisabled(param0: number): void;
					public getDateTypeFace(): globalAndroid.graphics.Typeface;
					public setOffsetLeft(param0: number): void;
					public updateTextBounds(): void;
					public setDateTextSize(param0: number): void;
					public updatePositions(): void;
					public render(param0: globalAndroid.graphics.Canvas): void;
					public renderTitle(param0: com.telerik.widget.calendar.CalendarMonthCell.MonthCellElement, param1: globalAndroid.graphics.Canvas): void;
					public getMonthNameTextColorDisabled(): number;
					public getOffsetLeft(): number;
					public getMonthNamePosition(): number;
					public getDayNameTextSize(): number;
					public getDayNameTextColorEnabled(): number;
					public setDayNamesColor(param0: number, param1: number): void;
					public setMonthName(param0: string): void;
					public setDateTextColorEnabled(param0: number): void;
					public getOffsetBottom(): number;
					public setMonthNameTextSizeCompact(param0: number): void;
					public renderDayName(param0: com.telerik.widget.calendar.CalendarMonthCell.MonthCellElement, param1: globalAndroid.graphics.Canvas): void;
					public getOffsetTop(): number;
					public onArrange(): void;
					public setDayNameTextColorDisabled(param0: number): void;
					public getMonthNameTypeFace(): globalAndroid.graphics.Typeface;
					public drawElementBackground(param0: globalAndroid.graphics.Canvas, param1: com.telerik.widget.calendar.CalendarMonthCell.MonthCellDateElement, param2: number, param3: globalAndroid.graphics.Rect): void;
					public numberOfDays(): number;
					public getDayNameTypeFace(): globalAndroid.graphics.Typeface;
					public setDayNameTypeFace(param0: globalAndroid.graphics.Typeface): void;
					public getMonthNameTextSizeCompact(): number;
					public getOffsetRight(): number;
					public setOffsetBottom(param0: number): void;
					public setDateTextColorDisabled(param0: number): void;
					public setDateTypeFace(param0: globalAndroid.graphics.Typeface): void;
					public updateDayNameBounds(): void;
					public setOffsetRight(param0: number): void;
					public updateDayNamesColor(): void;
					public renderDate(param0: com.telerik.widget.calendar.CalendarMonthCell.MonthCellDateElement, param1: globalAndroid.graphics.Canvas): void;
					public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
					public getMonthName(): string;
					public setDate(param0: number): void;
					public renderElementBackground(param0: com.telerik.widget.calendar.CalendarMonthCell.MonthCellDateElement, param1: globalAndroid.graphics.Canvas): void;
					public setDateTextColor(param0: number, param1: number): void;
				}
				export module CalendarMonthCell {
					export class MonthCellDateElement extends com.telerik.widget.calendar.CalendarMonthCell.MonthCellElement {
						public static class: java.lang.Class<com.telerik.widget.calendar.CalendarMonthCell.MonthCellDateElement>;
						public dayOfMonth: number;
						public time: number;
						public isToday: boolean;
						public isWeekend: boolean;
						public constructor(param0: com.telerik.widget.calendar.CalendarMonthCell);
						public reset(): void;
					}
					export class MonthCellDayNameElement extends com.telerik.widget.calendar.CalendarMonthCell.MonthCellElement {
						public static class: java.lang.Class<com.telerik.widget.calendar.CalendarMonthCell.MonthCellDayNameElement>;
						public time: number;
						public isWeekend: boolean;
						public constructor(param0: com.telerik.widget.calendar.CalendarMonthCell);
						public reset(): void;
					}
					export class MonthCellElement extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.calendar.CalendarMonthCell.MonthCellElement>;
						public x: number;
						public y: number;
						public text: string;
						public color: number;
						public textSize: number;
						public typeface: globalAndroid.graphics.Typeface;
						public backgroundColor: number;
						public constructor(param0: com.telerik.widget.calendar.CalendarMonthCell);
						public reset(): void;
					}
					export class MonthCellTitleElement extends com.telerik.widget.calendar.CalendarMonthCell.MonthCellElement {
						public static class: java.lang.Class<com.telerik.widget.calendar.CalendarMonthCell.MonthCellTitleElement>;
						public constructor(param0: com.telerik.widget.calendar.CalendarMonthCell);
						public reset(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class CalendarMonthCellFilter extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.widget.calendar.CalendarMonthCellFilter>;
					public setTextIsDayName(param0: java.lang.Boolean): void;
					public getTextIsCustomDate(): com.telerik.android.common.Function<java.lang.Long,java.lang.Boolean>;
					public getTextIsDayName(): java.lang.Boolean;
					public setTextIsDate(param0: java.lang.Boolean): void;
					public setTextIsMonthName(param0: java.lang.Boolean): void;
					public setMonthIsCustomDate(param0: com.telerik.android.common.Function<java.lang.Long,java.lang.Boolean>): void;
					public getMonthIsCompact(): java.lang.Boolean;
					public getMonthIsCustomDate(): com.telerik.android.common.Function<java.lang.Long,java.lang.Boolean>;
					public setTextIsCustomDate(param0: com.telerik.android.common.Function<java.lang.Long,java.lang.Boolean>): void;
					public getMonthIsCurrent(): java.lang.Boolean;
					public setMonthIsCurrent(param0: java.lang.Boolean): void;
					public getTextIsWeekend(): java.lang.Boolean;
					public setMonthIsCompact(param0: java.lang.Boolean): void;
					public getTextIsMonthName(): java.lang.Boolean;
					public constructor();
					public getTextIsToday(): java.lang.Boolean;
					public setTextIsWeekend(param0: java.lang.Boolean): void;
					public getTextIsDate(): java.lang.Boolean;
					public setTextIsToday(param0: java.lang.Boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class CalendarMonthCellStyle extends com.telerik.widget.calendar.CalendarCellStyle {
					public static class: java.lang.Class<com.telerik.widget.calendar.CalendarMonthCellStyle>;
					public setTextBackgroundColor(param0: java.lang.Integer): void;
					public getFilter(): com.telerik.widget.calendar.CalendarMonthCellFilter;
					public setFilter(param0: com.telerik.widget.calendar.CalendarMonthCellFilter): void;
					public constructor();
					public getTextBackgroundColor(): java.lang.Integer;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class CalendarRow extends com.telerik.widget.calendar.CalendarElement {
					public static class: java.lang.Class<com.telerik.widget.calendar.CalendarRow>;
					public static WEEK_NUMBER_CELL_INDEX: number;
					public cells: java.util.ArrayList<com.telerik.widget.calendar.CalendarCell>;
					public getCell(param0: number): com.telerik.widget.calendar.CalendarCell;
					public setVirtualOffsets(param0: number, param1: number): void;
					public onArrange(): void;
					public addCell(param0: com.telerik.widget.calendar.CalendarCell): void;
					public render(param0: globalAndroid.graphics.Canvas): void;
					public postRender(param0: globalAndroid.graphics.Canvas): void;
					public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
					public onAlphaChanged(): void;
					public cellsCount(): number;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class CalendarScrollManager extends com.telerik.widget.calendar.CalendarElement {
					public static class: java.lang.Class<com.telerik.widget.calendar.CalendarScrollManager>;
					public scrollMode: com.telerik.widget.calendar.ScrollMode;
					public activeDate: number;
					public arrangePassed: boolean;
					public currentDragFragmentHolder: com.telerik.widget.calendar.CalendarScrollManager.FragmentHolder;
					public previousFragmentHolder: com.telerik.widget.calendar.CalendarScrollManager.FragmentHolder;
					public currentFragmentHolder: com.telerik.widget.calendar.CalendarScrollManager.FragmentHolder;
					public nextFragmentHolder: com.telerik.widget.calendar.CalendarScrollManager.FragmentHolder;
					public decorationsLayer: com.telerik.widget.calendar.CalendarScrollManager.DecorationsLayer;
					public onSnapComplete(): void;
					public shiftFragmentsBackward(): void;
					public fragmentIsVisible(param0: com.telerik.widget.calendar.CalendarFragment): boolean;
					public updateDecorations(): void;
					public previousFragment(): com.telerik.widget.calendar.CalendarFragment;
					public arrange(param0: number, param1: number, param2: number, param3: number): void;
					public render(param0: globalAndroid.graphics.Canvas): void;
					public shiftFragmentsForward(): void;
					public handleScrollWithOverlap(param0: number, param1: number): void;
					public handleVerticalOverlappingScroll(param0: number): void;
					public getActiveDate(): number;
					public attemptCurrentFragmentUpdate(param0: number, param1: number): void;
					public getFragmentExposure(param0: com.telerik.widget.calendar.CalendarScrollManager.FragmentHolder): number;
					public getMaxScrollOffset(): number;
					public currentSnapOffsetY(): number;
					public scrollShouldBeHorizontal(): boolean;
					public setMaxScrollOffset(param0: number): void;
					public getCellsAtLocation(param0: number, param1: number): java.util.List<com.telerik.widget.calendar.CalendarCell>;
					public updateEventsForFragments(): void;
					public onAlphaChanged(): void;
					public getCellForDate(param0: number): com.telerik.widget.calendar.CalendarCell;
					public reset(): void;
					public currentSnapOffsetX(): number;
					public onArrange(): void;
					public reset(param0: boolean): void;
					public requestFragmentsSwitch(param0: boolean): void;
					public handleScrollWithoutOverlap(param0: number, param1: number): void;
					public nextFragment(): com.telerik.widget.calendar.CalendarFragment;
					public scroll(param0: number, param1: number): boolean;
					public snapFragments(): void;
					public currentFragment(): com.telerik.widget.calendar.CalendarFragment;
					public updateActiveFragment(): void;
					public handleHorizontalOverlappingScroll(param0: number): void;
					public postRender(param0: globalAndroid.graphics.Canvas): void;
					public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
					public onDateChanged(): void;
					public setActiveDate(param0: number): void;
				}
				export module CalendarScrollManager {
					export class DecorationsLayer extends globalAndroid.view.View {
						public static class: java.lang.Class<com.telerik.widget.calendar.CalendarScrollManager.DecorationsLayer>;
						public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
						public constructor(param0: globalAndroid.content.Context);
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public sendAccessibilityEvent(param0: number): void;
						public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public onDraw(param0: globalAndroid.graphics.Canvas): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public constructor(param0: com.telerik.widget.calendar.CalendarScrollManager, param1: globalAndroid.content.Context);
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
					}
					export class FragmentHolder extends globalAndroid.view.ViewGroup {
						public static class: java.lang.Class<com.telerik.widget.calendar.CalendarScrollManager.FragmentHolder>;
						public isLayoutRequested(): boolean;
						public constructor(param0: globalAndroid.content.Context);
						public sendAccessibilityEvent(param0: number): void;
						public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public clearChildFocus(param0: globalAndroid.view.View): void;
						public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
						public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
						public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
						public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
						public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
						public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public invalidateLayers(): void;
						public removeView(param0: globalAndroid.view.View): void;
						public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public setFragment(param0: com.telerik.widget.calendar.CalendarFragment): void;
						public recomputeViewAttributes(param0: globalAndroid.view.View): void;
						public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestDisallowInterceptTouchEvent(param0: boolean): void;
						public invalidateChildInParent(param0: native.Array<number>, param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
						public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public requestLayout(): void;
						public bringChildToFront(param0: globalAndroid.view.View): void;
						public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
						public addView(param0: globalAndroid.view.View, param1: number): void;
						public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
						public fragment(): com.telerik.widget.calendar.CalendarFragment;
						public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestTransparentRegion(param0: globalAndroid.view.View): void;
						public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
						public addView(param0: globalAndroid.view.View): void;
						public postInvalidateLayers(): void;
						public constructor(param0: com.telerik.widget.calendar.CalendarScrollManager, param1: globalAndroid.content.Context);
						public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public childDrawableStateChanged(param0: globalAndroid.view.View): void;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
						public requestFitSystemWindows(): void;
						public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public getParentForAccessibility(): globalAndroid.view.ViewParent;
						public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						public focusableViewAvailable(param0: globalAndroid.view.View): void;
						public focusSearch(param0: number): globalAndroid.view.View;
						public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
						public translate(param0: number, param1: number): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public getParent(): globalAndroid.view.ViewParent;
					}
					export module FragmentHolder {
						export class LayerView extends globalAndroid.view.View {
							public static class: java.lang.Class<com.telerik.widget.calendar.CalendarScrollManager.FragmentHolder.LayerView>;
							public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
							public constructor(param0: com.telerik.widget.calendar.CalendarScrollManager.FragmentHolder, param1: globalAndroid.content.Context);
							public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
							public onDraw(param0: globalAndroid.graphics.Canvas): void;
							public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
							public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
							public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
							public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
							public sendAccessibilityEvent(param0: number): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
							public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
							public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
							public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
							public constructor(param0: globalAndroid.content.Context);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class CalendarSelectionManager extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.widget.calendar.CalendarSelectionManager>;
					public owner: com.telerik.widget.calendar.RadCalendarView;
					public selectionMode: com.telerik.widget.calendar.CalendarSelectionMode;
					public onSelectedDatesChangedListener: com.telerik.widget.calendar.RadCalendarView.OnSelectedDatesChangedListener;
					public selectedDates: java.util.List<java.lang.Long>;
					public selectedRange: com.telerik.widget.calendar.DateRange;
					public setSelection(param0: java.util.List<java.lang.Long>, param1: com.telerik.widget.calendar.RadCalendarView.SelectionContext): void;
					public selectedCells(): java.util.List<com.telerik.widget.calendar.CalendarDayCell>;
					public handleTapGesture(param0: com.telerik.widget.calendar.CalendarDayCell): void;
					public setSelection(param0: java.util.List<java.lang.Long>): void;
					public handleTouchForMultipleSelection(param0: com.telerik.widget.calendar.CalendarDayCell): void;
					public setSelectedDates(param0: java.util.List<java.lang.Long>): void;
					public getDateRangeList(param0: number, param1: number): java.util.List<java.lang.Long>;
					public setOnSelectedDatesChangedListener(param0: com.telerik.widget.calendar.RadCalendarView.OnSelectedDatesChangedListener): void;
					public syncSelectedCellsWithDates(): void;
					public setSelectedRange(param0: com.telerik.widget.calendar.DateRange): void;
					public handleTouchForSingleSelection(param0: com.telerik.widget.calendar.CalendarDayCell): void;
					public getSelectedDates(): java.util.List<java.lang.Long>;
					public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
					public getSelectedRange(): com.telerik.widget.calendar.DateRange;
					public getOnSelectedDatesChangedListener(): com.telerik.widget.calendar.RadCalendarView.OnSelectedDatesChangedListener;
					public handleTouchForRangeSelection(param0: com.telerik.widget.calendar.CalendarDayCell): void;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class CalendarSelectionMode {
					public static class: java.lang.Class<com.telerik.widget.calendar.CalendarSelectionMode>;
					public static None: com.telerik.widget.calendar.CalendarSelectionMode;
					public static Single: com.telerik.widget.calendar.CalendarSelectionMode;
					public static Range: com.telerik.widget.calendar.CalendarSelectionMode;
					public static Multiple: com.telerik.widget.calendar.CalendarSelectionMode;
					public static values(): native.Array<com.telerik.widget.calendar.CalendarSelectionMode>;
					public static valueOf(param0: string): com.telerik.widget.calendar.CalendarSelectionMode;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class CalendarStyle extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.widget.calendar.CalendarStyle>;
					public dateTextSize: number;
					public dayNameTextColor: number;
					public weekNumberTextColorEnabled: number;
					public weekNumberTextColorDisabled: number;
					public dateTextColorEnabled: number;
					public dateTextColorDisabled: number;
					public dateCellBackgroundColorEnabled: number;
					public dateCellBackgroundColorDisabled: number;
					public weekNumberBackgroundColorEnabled: number;
					public weekNumberBackgroundColorDisabled: number;
					public dayNameBackgroundColor: number;
					public monthNameTextColorEnabled: number;
					public monthNameTextColorDisabled: number;
					public dateTextPosition: number;
					public dayNameTextPosition: number;
					public weekNumberTextPosition: number;
					public weekNumberTextSize: number;
					public dateTypeFace: globalAndroid.graphics.Typeface;
					public dayNameTypeFace: globalAndroid.graphics.Typeface;
					public weekNumberTypeFace: globalAndroid.graphics.Typeface;
					public monthNameTypeFace: globalAndroid.graphics.Typeface;
					public monthNameTextSize: number;
					public monthNameTextPosition: number;
					public monthNameTextSizeCompact: number;
					public dayNameTextColorYearModeEnabled: number;
					public dayNameTextColorYearModeDisabled: number;
					public dayNameTextSize: number;
					public dayNameTextSizeYearMode: number;
					public dayNameTypefaceYearMode: globalAndroid.graphics.Typeface;
					public dateTextColorYearModeEnabled: number;
					public dateTextColorYearModeDisabled: number;
					public dateTextSizeYearMode: number;
					public dateTypeFaceYearMode: globalAndroid.graphics.Typeface;
					public titleTextSize: number;
					public titleTypeFace: globalAndroid.graphics.Typeface;
					public titleTextColor: number;
					public titleTextPosition: number;
					public titleBackgroundColor: number;
					public gridLinesColor: number;
					public selectedCellBackgroundColor: number;
					public todayCellBackgroundColor: number;
					public todayBackgroundColor: number;
					public todayTextColor: number;
					public todayCellTextColor: number;
					public todayTypeFace: globalAndroid.graphics.Typeface;
					public todayCellTypeFace: globalAndroid.graphics.Typeface;
					public dateCellPaddingHorizontal: number;
					public dateCellPaddingVertical: number;
					public monthCellPaddingVertical: number;
					public monthCellPaddingHorizontal: number;
					public decorationsColor: number;
					public decorationsStrokeWidth: number;
					public dayNamePaddingHorizontal: number;
					public dayNamePaddingVertical: number;
					public todayBorderColor: number;
					public todayBorderWidth: number;
					public selectedCellTextColor: number;
					public selectedCellTypeFace: globalAndroid.graphics.Typeface;
					public todayCellSelectedTextColor: number;
					public popupEventsWindowBackgroundColor: number;
					public inlineEventsBackgroundColor: number;
					public popupEventTitleTextSize: number;
					public popupEventTimeTextSize: number;
					public inlineEventTitleTextSize: number;
					public inlineEventTimeStartTextSize: number;
					public inlineEventTimeEndTextSize: number;
					public inlineEventTimeStartTextColor: number;
					public inlineEventTimeEndTextColor: number;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class CalendarStyles extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.widget.calendar.CalendarStyles>;
					public constructor();
					public static materialLight(param0: globalAndroid.content.Context): com.telerik.widget.calendar.CalendarStyle;
					public static materialDark(param0: globalAndroid.content.Context): com.telerik.widget.calendar.CalendarStyle;
					public static light(param0: globalAndroid.content.Context): com.telerik.widget.calendar.CalendarStyle;
					public static dark(param0: globalAndroid.content.Context): com.telerik.widget.calendar.CalendarStyle;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class CalendarTextElement extends com.telerik.widget.calendar.CalendarElement {
					public static class: java.lang.Class<com.telerik.widget.calendar.CalendarTextElement>;
					public text: string;
					public textPaint: globalAndroid.graphics.Paint;
					public textColorEnabled: number;
					public textColorDisabled: number;
					public textPosition: number;
					public textPositionY(): number;
					public arrange(param0: number, param1: number, param2: number, param3: number): void;
					public setTextSize(param0: number): void;
					public render(param0: globalAndroid.graphics.Canvas): void;
					public getTextColorDisabled(): number;
					public setText(param0: string): void;
					public updateTextColor(): void;
					public getTextPaint(): globalAndroid.graphics.Paint;
					public calculateTextPosition(): void;
					public getTextColorEnabled(): number;
					public setTextColorEnabled(param0: number): void;
					public getTextSize(): number;
					public setTextColorDisabled(param0: number): void;
					public textPositionX(): number;
					public setPadding(param0: number, param1: number, param2: number, param3: number): void;
					public onAlphaChanged(): void;
					public getTypeface(): globalAndroid.graphics.Typeface;
					public setEnabled(param0: boolean): void;
					public updateTypeFace(): void;
					public setTextColor(param0: number): void;
					public getText(): string;
					public setTextColor(param0: number, param1: number): void;
					public setTextPosition(param0: number): void;
					public getTextPosition(): number;
					public setTypeface(param0: globalAndroid.graphics.Typeface): void;
					public getTextColor(): number;
					public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
					public setTextPaint(param0: globalAndroid.graphics.Paint): void;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class CalendarTitleCell extends com.telerik.widget.calendar.CalendarDayCell {
					public static class: java.lang.Class<com.telerik.widget.calendar.CalendarTitleCell>;
					public setCalendarDisplayMode(param0: com.telerik.widget.calendar.CalendarDisplayMode): void;
					public getCalendarDisplayMode(): com.telerik.widget.calendar.CalendarDisplayMode;
					public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class CalendarTools extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.widget.calendar.CalendarTools>;
					public static getDateStart(param0: number): number;
					public static isWeekend(param0: number): boolean;
					public static getLastDateInYear(param0: number): number;
					public static getFirstDateInMonth(param0: number): number;
					public static getFirstDateInYear(param0: number): number;
					public static getLastDateInWeek(param0: number): number;
					public constructor();
					public static getDateEnd(param0: number): number;
					public static getFirstMonthInYear(param0: number): number;
					public static getLastMonthInYear(param0: number): number;
					public static getFirstDateInWeek(param0: number): number;
					public static getFirstDateOfWeekWith(param0: java.lang.Long): number;
					public static calculateNewValue(param0: boolean, param1: number, param2: com.telerik.widget.calendar.CalendarDisplayMode): number;
					public static getFirstDisplayDate(param0: java.lang.Long): number;
					public static getShortDayName(param0: number): string;
					public static getLastDateInMonth(param0: number): number;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class CellDecorationsLayer extends com.telerik.widget.calendar.decorations.SegmentDecorator {
					public static class: java.lang.Class<com.telerik.widget.calendar.CellDecorationsLayer>;
					public addDecorationForCell(param0: com.telerik.widget.calendar.CalendarCell): void;
					public addDecorationForCell(param0: number, param1: number, param2: number, param3: number, param4: number): void;
					public removeDecorationForCell(param0: number, param1: number, param2: number, param3: number, param4: number): void;
					public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
					public addDecorationForCell(param0: number, param1: com.telerik.widget.calendar.CalendarCell): void;
					public addDecorationForCell(param0: number, param1: number, param2: number, param3: number): void;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class DateRange extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.widget.calendar.DateRange>;
					public equals(param0: any): boolean;
					public getEnd(): number;
					public setStart(param0: number): void;
					public setEnd(param0: number): void;
					public hashCode(): number;
					public getStart(): number;
					public constructor(param0: number, param1: number);
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class ElementVisibility {
					public static class: java.lang.Class<com.telerik.widget.calendar.ElementVisibility>;
					public static Visible: com.telerik.widget.calendar.ElementVisibility;
					public static Invisible: com.telerik.widget.calendar.ElementVisibility;
					public static Gone: com.telerik.widget.calendar.ElementVisibility;
					public static valueOf(param0: string): com.telerik.widget.calendar.ElementVisibility;
					public static values(): native.Array<com.telerik.widget.calendar.ElementVisibility>;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class EventsInlineManager extends com.telerik.widget.calendar.EventsManager {
					public static class: java.lang.Class<com.telerik.widget.calendar.EventsInlineManager>;
				}
				export module EventsInlineManager {
					export class EventInlineAdapter extends globalAndroid.widget.ArrayAdapter<com.telerik.widget.calendar.EventsManager.EventInfo> {
						public static class: java.lang.Class<com.telerik.widget.calendar.EventsInlineManager.EventInlineAdapter>;
						public isEnabled(param0: number): boolean;
						public areAllItemsEnabled(): boolean;
						public getFilter(): globalAndroid.widget.Filter;
						public constructor();
						public constructor(param0: globalAndroid.content.Context, param1: number, param2: number);
						public constructor(param0: globalAndroid.content.Context, param1: number, param2: number, param3: native.Array<any>);
						public constructor(param0: com.telerik.widget.calendar.EventsInlineManager, param1: globalAndroid.content.Context, param2: number, param3: native.Array<com.telerik.widget.calendar.EventsManager.EventInfo>);
						public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
						public constructor(param0: globalAndroid.content.Context, param1: number);
						public constructor(param0: globalAndroid.content.Context, param1: number, param2: native.Array<any>);
						public constructor(param0: globalAndroid.content.Context, param1: number, param2: java.util.List<any>);
						public constructor(param0: globalAndroid.content.Context, param1: number, param2: number, param3: java.util.List<any>);
						public getDropDownView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export abstract class EventsManager extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.widget.calendar.EventsManager>;
					public owner: com.telerik.widget.calendar.RadCalendarView;
					public calendar: java.util.Calendar;
					public eventInfos: native.Array<com.telerik.widget.calendar.EventsManager.EventInfo>;
					public listView: com.telerik.widget.calendar.EventsManager.EventsListView;
					public toggleEventsVisibilityForDate(param0: number): void;
					public toggleEventsVisibilityForCell(param0: com.telerik.widget.calendar.CalendarDayCell): void;
					public eventsForDateVisible(param0: number): boolean;
					public closeEvents(): void;
					public setAdapter(param0: globalAndroid.widget.ArrayAdapter<com.telerik.widget.calendar.EventsManager.EventInfo>): void;
					public setOnEventsListTouchListener(param0: globalAndroid.view.View.OnTouchListener): void;
					public getAdapter(): globalAndroid.widget.ArrayAdapter<com.telerik.widget.calendar.EventsManager.EventInfo>;
					public prepareEventsInfo(param0: java.util.List<com.telerik.widget.calendar.events.Event>): void;
					public setOnItemLongClickListener(param0: globalAndroid.widget.AdapterView.OnItemLongClickListener): void;
					public setOnItemClickListener(param0: globalAndroid.widget.AdapterView.OnItemClickListener): void;
					public eventsForCellVisible(param0: com.telerik.widget.calendar.CalendarDayCell): boolean;
				}
				export module EventsManager {
					export class EventInfo extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.calendar.EventsManager.EventInfo>;
						public endTime(): number;
						public startTimeFormatted(): string;
						public title(): string;
						public endTimeFormatted(): string;
						public originalEvent(): com.telerik.widget.calendar.events.Event;
						public startTime(): number;
						public constructor(param0: com.telerik.widget.calendar.EventsManager);
						public toString(): string;
					}
					export class EventsListView extends globalAndroid.widget.ListView {
						public static class: java.lang.Class<com.telerik.widget.calendar.EventsManager.EventsListView>;
						public isLayoutRequested(): boolean;
						public constructor(param0: globalAndroid.content.Context);
						public sendAccessibilityEvent(param0: number): void;
						public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public clearChildFocus(param0: globalAndroid.view.View): void;
						public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
						public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
						public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
						public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
						public removeView(param0: globalAndroid.view.View): void;
						public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public onFilterComplete(param0: number): void;
						public beforeTextChanged(param0: string, param1: number, param2: number, param3: number): void;
						public recomputeViewAttributes(param0: globalAndroid.view.View): void;
						public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestDisallowInterceptTouchEvent(param0: boolean): void;
						public invalidateChildInParent(param0: native.Array<number>, param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
						public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public requestLayout(): void;
						public onGlobalLayout(): void;
						public bringChildToFront(param0: globalAndroid.view.View): void;
						public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
						public addView(param0: globalAndroid.view.View, param1: number): void;
						public onTouchModeChanged(param0: boolean): void;
						public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
						public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestTransparentRegion(param0: globalAndroid.view.View): void;
						public constructor(param0: com.telerik.widget.calendar.EventsManager, param1: globalAndroid.content.Context);
						public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
						public addView(param0: globalAndroid.view.View): void;
						public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public childDrawableStateChanged(param0: globalAndroid.view.View): void;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
						public requestFitSystemWindows(): void;
						public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public getParentForAccessibility(): globalAndroid.view.ViewParent;
						public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						public focusableViewAvailable(param0: globalAndroid.view.View): void;
						public focusSearch(param0: number): globalAndroid.view.View;
						public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
						public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
						public afterTextChanged(param0: globalAndroid.text.Editable): void;
						public onDraw(param0: globalAndroid.graphics.Canvas): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public getParent(): globalAndroid.view.ViewParent;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class EventsPopupManager extends com.telerik.widget.calendar.EventsManager {
					public static class: java.lang.Class<com.telerik.widget.calendar.EventsPopupManager>;
				}
				export module EventsPopupManager {
					export class EventPopupAdapter extends globalAndroid.widget.ArrayAdapter<com.telerik.widget.calendar.EventsManager.EventInfo> {
						public static class: java.lang.Class<com.telerik.widget.calendar.EventsPopupManager.EventPopupAdapter>;
						public isEnabled(param0: number): boolean;
						public areAllItemsEnabled(): boolean;
						public getFilter(): globalAndroid.widget.Filter;
						public constructor();
						public constructor(param0: globalAndroid.content.Context, param1: number, param2: number);
						public constructor(param0: globalAndroid.content.Context, param1: number, param2: number, param3: native.Array<any>);
						public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
						public constructor(param0: globalAndroid.content.Context, param1: number);
						public constructor(param0: globalAndroid.content.Context, param1: number, param2: native.Array<any>);
						public constructor(param0: globalAndroid.content.Context, param1: number, param2: java.util.List<any>);
						public constructor(param0: globalAndroid.content.Context, param1: number, param2: number, param3: java.util.List<any>);
						public constructor(param0: com.telerik.widget.calendar.EventsPopupManager, param1: globalAndroid.content.Context, param2: number, param3: native.Array<com.telerik.widget.calendar.EventsManager.EventInfo>);
						public getDropDownView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class GridLinesLayer extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.widget.calendar.GridLinesLayer>;
					public paint: globalAndroid.graphics.Paint;
					public setColor(param0: number): void;
					public getColor(): number;
					public constructor();
					public setWidth(param0: number): void;
					public drawLine(param0: number, param1: number, param2: number, param3: number, param4: globalAndroid.graphics.Canvas): void;
					public setPaint(param0: globalAndroid.graphics.Paint): void;
					public getWidth(): number;
					public drawLine(param0: number, param1: number, param2: number, param3: number, param4: globalAndroid.graphics.Canvas, param5: number): void;
					public getPaint(): globalAndroid.graphics.Paint;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class RadCalendarView extends globalAndroid.view.ViewGroup {
					public static class: java.lang.Class<com.telerik.widget.calendar.RadCalendarView>;
					public initialRowHeight: number;
					public selectionMode: com.telerik.widget.calendar.CalendarSelectionMode;
					public suspendDisplayModeChange: boolean;
					public invalidateChildInParent(param0: native.Array<number>, param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
					public getTitleHeight(): number;
					public createImageFromView(param0: globalAndroid.view.View): globalAndroid.graphics.drawable.Drawable;
					public onScale(param0: globalAndroid.view.ScaleGestureDetector): boolean;
					public setHorizontalScroll(param0: boolean): void;
					public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
					public setEventsDisplayMode(param0: com.telerik.widget.calendar.events.EventsDisplayMode): void;
					public setScrollManager(param0: com.telerik.widget.calendar.CalendarScrollManager): void;
					public getSelectionManager(): com.telerik.widget.calendar.CalendarSelectionManager;
					public getDisplayDate(): number;
					public setSelectionMode(param0: com.telerik.widget.calendar.CalendarSelectionMode): void;
					public animateToPrevious(): void;
					public setGridLinesLayer(param0: com.telerik.widget.calendar.GridLinesLayer): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public setDayView(param0: com.telerik.widget.calendar.dayview.CalendarDayView): void;
					public onScroll(param0: globalAndroid.view.MotionEvent, param1: globalAndroid.view.MotionEvent, param2: number, param3: number): boolean;
					public setScrollMode(param0: com.telerik.widget.calendar.ScrollMode): void;
					public isYearModeCompact(): boolean;
					public updateFragmentWeekMode(param0: com.telerik.widget.calendar.CalendarFragment, param1: number, param2: boolean): void;
					public getShowWeekInDayMode(): boolean;
					public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public onScaleEnd(param0: globalAndroid.view.ScaleGestureDetector): void;
					public addView(param0: globalAndroid.view.View): void;
					public getScrollManager(): com.telerik.widget.calendar.CalendarScrollManager;
					public syncSelectedDateWithDisplayDate(param0: com.telerik.widget.calendar.CalendarFragment): void;
					public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
					public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
					public drawDayNames(param0: globalAndroid.graphics.Canvas): void;
					public clearChildFocus(param0: globalAndroid.view.View): void;
					public updateFragmentMonthMode(param0: com.telerik.widget.calendar.CalendarFragment, param1: number, param2: boolean): void;
					public addMonthCellStyle(param0: com.telerik.widget.calendar.CalendarMonthCellStyle): void;
					public setDateToColor(param0: com.telerik.android.common.Function<java.lang.Long,java.lang.Integer>): void;
					public isAnimationEnabled(): boolean;
					public updateCalendar(): void;
					public getDateToColor(): com.telerik.android.common.Function<java.lang.Long,java.lang.Integer>;
					public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
					public getCellDecorationsLayer(): com.telerik.widget.calendar.decorations.Decorator;
					public onLongPress(param0: globalAndroid.view.MotionEvent): void;
					public addDayCellStyle(param0: com.telerik.widget.calendar.CalendarDayCellStyle): void;
					public getDayView(): com.telerik.widget.calendar.dayview.CalendarDayView;
					public invalidate(param0: number, param1: number, param2: number, param3: number): void;
					public invalidateArrange(): void;
					public requestTransparentRegion(param0: globalAndroid.view.View): void;
					public setDayNamesHeight(param0: number): void;
					public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
					public getDayNameToColor(): com.telerik.android.common.Function<java.lang.Long,java.lang.Integer>;
					public setSelectionManager(param0: com.telerik.widget.calendar.CalendarSelectionManager): void;
					public setAdapter(param0: com.telerik.widget.calendar.CalendarAdapter): void;
					public onSaveInstanceState(): globalAndroid.os.Parcelable;
					public isDrawingVerticalGridLines(): boolean;
					public getOnSelectedDatesChangedListener(): com.telerik.widget.calendar.RadCalendarView.OnSelectedDatesChangedListener;
					public eventsManager(): com.telerik.widget.calendar.EventsManager;
					public setEventAdapter(param0: com.telerik.widget.calendar.events.EventAdapter): void;
					public onDoubleTapEvent(param0: globalAndroid.view.MotionEvent): boolean;
					public setGestureManager(param0: com.telerik.widget.calendar.CalendarGestureManager): void;
					public setShowDayNames(param0: boolean): void;
					public invalidate(): void;
					public getCustomizationRule(): com.telerik.android.common.Procedure<com.telerik.widget.calendar.CalendarCell>;
					public getCellDecorator(): com.telerik.widget.calendar.decorations.Decorator;
					public getParent(): globalAndroid.view.ViewParent;
					public getShowCellDecorations(): boolean;
					public setCustomizationRule(param0: com.telerik.android.common.Procedure<com.telerik.widget.calendar.CalendarCell>): void;
					public setWeekNumbersDisplayMode(param0: com.telerik.widget.calendar.WeekNumbersDisplayMode): void;
					public setInOriginalSizeForAllModes(param0: boolean): void;
					public getWeekNumbersDisplayMode(): com.telerik.widget.calendar.WeekNumbersDisplayMode;
					public setDayNameToColor(param0: com.telerik.android.common.Function<java.lang.Long,java.lang.Integer>): void;
					public getShowDayNames(): boolean;
					public setOnSelectedDatesChangedListener(param0: com.telerik.widget.calendar.RadCalendarView.OnSelectedDatesChangedListener): void;
					public setOnDisplayDateChangedListener(param0: com.telerik.widget.calendar.RadCalendarView.OnDisplayDateChangedListener): void;
					public animateMonthView(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: globalAndroid.view.animation.Animation.AnimationListener): void;
					public invalidate(param0: globalAndroid.graphics.Rect): void;
					public isDrawingHorizontalGridLines(): boolean;
					public changeDisplayMode(param0: com.telerik.widget.calendar.CalendarDisplayMode, param1: boolean): void;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public setShowGridLines(param0: boolean): void;
					public beginUpdate(): void;
					public endUpdate(): void;
					public getSelectedRange(): com.telerik.widget.calendar.DateRange;
					public onShowPress(param0: globalAndroid.view.MotionEvent): void;
					public sendAccessibilityEvent(param0: number): void;
					public getShowTitle(): boolean;
					public requestLayout(): void;
					public onDetachedFromWindow(): void;
					public isDrawingAllCells(): boolean;
					public updateFragments(param0: boolean): void;
					public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
					public setYearModeCompact(param0: boolean): void;
					public setAnimationEnabled(param0: boolean): void;
					public constructor(param0: globalAndroid.content.Context);
					public applyMonthCellStyles(param0: com.telerik.widget.calendar.CalendarMonthCell): void;
					public removeDayCellStyle(param0: com.telerik.widget.calendar.CalendarDayCellStyle): void;
					public setCalendar(param0: java.util.Calendar): void;
					public onDown(param0: globalAndroid.view.MotionEvent): boolean;
					public getGestureManager(): com.telerik.widget.calendar.CalendarGestureManager;
					public updateFragmentYearMode(param0: com.telerik.widget.calendar.CalendarFragment, param1: number, param2: boolean): void;
					public dayNames(): com.telerik.widget.calendar.CalendarRow;
					public getMaxDate(): number;
					public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
					public setShowTitle(param0: boolean): void;
					public beginUpdate(param0: boolean): void;
					public getAnimationsManager(): com.telerik.widget.calendar.CalendarAnimationsManager;
					public setOnCellClickListener(param0: com.telerik.widget.calendar.RadCalendarView.OnCellClickListener): void;
					public focusSearch(param0: number): globalAndroid.view.View;
					public focusableViewAvailable(param0: globalAndroid.view.View): void;
					public onDoubleTap(param0: globalAndroid.view.MotionEvent): boolean;
					public dateToCell(): java.util.Hashtable<java.lang.Long,java.util.List<com.telerik.widget.calendar.CalendarDayCell>>;
					public getMinDate(): number;
					public getCalendar(): java.util.Calendar;
					public isLayoutRequested(): boolean;
					public setCellDecorator(param0: com.telerik.widget.calendar.decorations.Decorator): void;
					public isInOriginalSizeForAllModes(): boolean;
					public notifyDataChanged(): void;
					public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
					public getBackgroundColor(): number;
					public setWeekHeightRequest(param0: number): void;
					public setMinDate(param0: number): void;
					public recomputeViewAttributes(param0: globalAndroid.view.View): void;
					public getShowGridLines(): boolean;
					public onDraw(param0: globalAndroid.graphics.Canvas): void;
					public setShowWeekInDayMode(param0: boolean): void;
					public onScaleBegin(param0: globalAndroid.view.ScaleGestureDetector): boolean;
					public endUpdate(param0: boolean): void;
					public shiftDate(param0: boolean): void;
					public getScrollMode(): com.telerik.widget.calendar.ScrollMode;
					public removeMonthCellStyle(param0: com.telerik.widget.calendar.CalendarMonthCellStyle): void;
					public setDrawingAllCells(param0: boolean): void;
					public setDisplayDate(param0: number): void;
					public changeDisplayMode(param0: com.telerik.widget.calendar.CalendarDisplayMode): void;
					public bringChildToFront(param0: globalAndroid.view.View): void;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public canShiftToNextDate(): boolean;
					public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public getSelectedDates(): java.util.List<java.lang.Long>;
					public childDrawableStateChanged(param0: globalAndroid.view.View): void;
					public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
					public setDisplayMode(param0: com.telerik.widget.calendar.CalendarDisplayMode): void;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
					public requestFitSystemWindows(): void;
					public getWeekHeightRequest(): number;
					public setStretchInWeekMode(param0: boolean): void;
					public onFling(param0: globalAndroid.view.MotionEvent, param1: globalAndroid.view.MotionEvent, param2: number, param3: number): boolean;
					public updateFragmentDayMode(param0: com.telerik.widget.calendar.CalendarFragment, param1: number, param2: boolean): void;
					public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
					public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
					public getDayNamesHeight(): number;
					public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
					public getSelectionMode(): com.telerik.widget.calendar.CalendarSelectionMode;
					public setCellDecorationsLayer(param0: com.telerik.widget.calendar.CellDecorationsLayer): void;
					public getLocale(): java.util.Locale;
					public requestDisallowInterceptTouchEvent(param0: boolean): void;
					public updateFragments(): void;
					public getGridLinesLayer(): com.telerik.widget.calendar.GridLinesLayer;
					public addView(param0: globalAndroid.view.View, param1: number): void;
					public setDrawingVerticalGridLines(param0: boolean): void;
					public setDrawingHorizontalGridLines(param0: boolean): void;
					public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
					public showTitle(): boolean;
					public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
					public onSingleTapConfirmed(param0: globalAndroid.view.MotionEvent): boolean;
					public setTitleHeight(param0: number): void;
					public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
					public getParentForAccessibility(): globalAndroid.view.ViewParent;
					public setShowCellDecorations(param0: boolean): void;
					public applyDayCellStyles(param0: com.telerik.widget.calendar.CalendarDayCell): void;
					public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public canShiftToPreviousDate(): boolean;
					public isHorizontalScroll(): boolean;
					public setAnimationsManager(param0: com.telerik.widget.calendar.CalendarAnimationsManager): void;
					public getAdapter(): com.telerik.widget.calendar.CalendarAdapter;
					public setLocale(param0: java.util.Locale): void;
					public getEventsDisplayMode(): com.telerik.widget.calendar.events.EventsDisplayMode;
					public setDisplayDateSilent(param0: number): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public animateToNext(): void;
					public setBackgroundColor(param0: number): void;
					public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
					public setSelectedDates(param0: java.util.List<java.lang.Long>): void;
					public showDayNames(): boolean;
					public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
					public removeView(param0: globalAndroid.view.View): void;
					public onSingleTapUp(param0: globalAndroid.view.MotionEvent): boolean;
					public rebuildCalendar(): void;
					public setMaxDate(param0: number): void;
					public getEventAdapter(): com.telerik.widget.calendar.events.EventAdapter;
					public getDisplayMode(): com.telerik.widget.calendar.CalendarDisplayMode;
					public setSelectedRange(param0: com.telerik.widget.calendar.DateRange): void;
					public setOnDisplayModeChangedListener(param0: com.telerik.widget.calendar.RadCalendarView.OnDisplayModeChangedListener): void;
					public title(): com.telerik.widget.calendar.CalendarTextElement;
					public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
				}
				export module RadCalendarView {
					export class CalendarTask extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.calendar.RadCalendarView.CalendarTask>;
						/**
						 * Constructs a new instance of the com.telerik.widget.calendar.RadCalendarView$CalendarTask interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							displayMode(): com.telerik.widget.calendar.CalendarDisplayMode;
							execute(): void;
						});
						public constructor();
						public displayMode(): com.telerik.widget.calendar.CalendarDisplayMode;
						public execute(): void;
					}
					export class DatesHolderView extends globalAndroid.view.ViewGroup {
						public static class: java.lang.Class<com.telerik.widget.calendar.RadCalendarView.DatesHolderView>;
						public isLayoutRequested(): boolean;
						public constructor(param0: globalAndroid.content.Context);
						public sendAccessibilityEvent(param0: number): void;
						public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public constructor(param0: com.telerik.widget.calendar.RadCalendarView, param1: globalAndroid.content.Context, param2: globalAndroid.util.AttributeSet);
						public clearChildFocus(param0: globalAndroid.view.View): void;
						public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
						public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
						public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestTransparentRegion(param0: globalAndroid.view.View): void;
						public constructor(param0: com.telerik.widget.calendar.RadCalendarView, param1: globalAndroid.content.Context);
						public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
						public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
						public addView(param0: globalAndroid.view.View): void;
						public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
						public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public childDrawableStateChanged(param0: globalAndroid.view.View): void;
						public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
						public removeView(param0: globalAndroid.view.View): void;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
						public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
						public requestFitSystemWindows(): void;
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public getParentForAccessibility(): globalAndroid.view.ViewParent;
						public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						public constructor(param0: com.telerik.widget.calendar.RadCalendarView, param1: globalAndroid.content.Context, param2: globalAndroid.util.AttributeSet, param3: number);
						public focusableViewAvailable(param0: globalAndroid.view.View): void;
						public focusSearch(param0: number): globalAndroid.view.View;
						public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
						public recomputeViewAttributes(param0: globalAndroid.view.View): void;
						public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestDisallowInterceptTouchEvent(param0: boolean): void;
						public invalidateChildInParent(param0: native.Array<number>, param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
						public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public requestLayout(): void;
						public bringChildToFront(param0: globalAndroid.view.View): void;
						public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
						public addView(param0: globalAndroid.view.View, param1: number): void;
						public getParent(): globalAndroid.view.ViewParent;
						public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
					}
					export class FragmentHolderView extends globalAndroid.view.View {
						public static class: java.lang.Class<com.telerik.widget.calendar.RadCalendarView.FragmentHolderView>;
						public arrangePassed: boolean;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
						public constructor(param0: globalAndroid.content.Context);
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public sendAccessibilityEvent(param0: number): void;
						public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public setActive(param0: boolean): void;
						public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public constructor(param0: com.telerik.widget.calendar.RadCalendarView, param1: globalAndroid.content.Context);
						public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public onDraw(param0: globalAndroid.graphics.Canvas): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public constructor(param0: com.telerik.widget.calendar.RadCalendarView, param1: globalAndroid.content.Context, param2: com.telerik.widget.calendar.CalendarFragment);
						public isActive(): boolean;
						public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
					}
					export class HeadWrapperView extends globalAndroid.view.View {
						public static class: java.lang.Class<com.telerik.widget.calendar.RadCalendarView.HeadWrapperView>;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
						public constructor(param0: globalAndroid.content.Context);
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public sendAccessibilityEvent(param0: number): void;
						public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public invalidate(param0: number, param1: number, param2: number, param3: number): void;
						public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						public bringToFront(): void;
						public invalidate(param0: globalAndroid.graphics.Rect): void;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public constructor(param0: com.telerik.widget.calendar.RadCalendarView, param1: globalAndroid.content.Context);
						public invalidate(): void;
						public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public onDraw(param0: globalAndroid.graphics.Canvas): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
					}
					export class OnCellClickListener extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.calendar.RadCalendarView.OnCellClickListener>;
						/**
						 * Constructs a new instance of the com.telerik.widget.calendar.RadCalendarView$OnCellClickListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onCellClick(param0: com.telerik.widget.calendar.CalendarCell): void;
						});
						public constructor();
						public onCellClick(param0: com.telerik.widget.calendar.CalendarCell): void;
					}
					export class OnDisplayDateChangedListener extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.calendar.RadCalendarView.OnDisplayDateChangedListener>;
						/**
						 * Constructs a new instance of the com.telerik.widget.calendar.RadCalendarView$OnDisplayDateChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onDisplayDateChanged(param0: number, param1: number): void;
						});
						public constructor();
						public onDisplayDateChanged(param0: number, param1: number): void;
					}
					export class OnDisplayModeChangedListener extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.calendar.RadCalendarView.OnDisplayModeChangedListener>;
						/**
						 * Constructs a new instance of the com.telerik.widget.calendar.RadCalendarView$OnDisplayModeChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onDisplayModeChanged(param0: com.telerik.widget.calendar.CalendarDisplayMode, param1: com.telerik.widget.calendar.CalendarDisplayMode): void;
						});
						public constructor();
						public onDisplayModeChanged(param0: com.telerik.widget.calendar.CalendarDisplayMode, param1: com.telerik.widget.calendar.CalendarDisplayMode): void;
					}
					export class OnSelectedDatesChangedListener extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.calendar.RadCalendarView.OnSelectedDatesChangedListener>;
						/**
						 * Constructs a new instance of the com.telerik.widget.calendar.RadCalendarView$OnSelectedDatesChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onSelectedDatesChanged(param0: com.telerik.widget.calendar.RadCalendarView.SelectionContext): void;
						});
						public constructor();
						public onSelectedDatesChanged(param0: com.telerik.widget.calendar.RadCalendarView.SelectionContext): void;
					}
					export class SelectionContext extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.calendar.RadCalendarView.SelectionContext>;
						public constructor();
						public oldSelection(): java.util.List<java.lang.Long>;
						public datesAdded(): java.util.List<java.lang.Long>;
						public datesRemoved(): java.util.List<java.lang.Long>;
						public newSelection(): java.util.List<java.lang.Long>;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class ScrollMode {
					public static class: java.lang.Class<com.telerik.widget.calendar.ScrollMode>;
					public static None: com.telerik.widget.calendar.ScrollMode;
					public static Plain: com.telerik.widget.calendar.ScrollMode;
					public static Sticky: com.telerik.widget.calendar.ScrollMode;
					public static Free: com.telerik.widget.calendar.ScrollMode;
					public static Combo: com.telerik.widget.calendar.ScrollMode;
					public static Overlap: com.telerik.widget.calendar.ScrollMode;
					public static Stack: com.telerik.widget.calendar.ScrollMode;
					public static valueOf(param0: string): com.telerik.widget.calendar.ScrollMode;
					public static values(): native.Array<com.telerik.widget.calendar.ScrollMode>;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export class WeekNumbersDisplayMode {
					public static class: java.lang.Class<com.telerik.widget.calendar.WeekNumbersDisplayMode>;
					public static None: com.telerik.widget.calendar.WeekNumbersDisplayMode;
					public static Inline: com.telerik.widget.calendar.WeekNumbersDisplayMode;
					public static Block: com.telerik.widget.calendar.WeekNumbersDisplayMode;
					public static valueOf(param0: string): com.telerik.widget.calendar.WeekNumbersDisplayMode;
					public static values(): native.Array<com.telerik.widget.calendar.WeekNumbersDisplayMode>;
					public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module dayview {
					export class AllDayEventView extends com.telerik.widget.calendar.dayview.DayEventViewBase {
						public static class: java.lang.Class<com.telerik.widget.calendar.dayview.AllDayEventView>;
						public isLayoutRequested(): boolean;
						public constructor(param0: globalAndroid.content.Context);
						public titleView(): globalAndroid.widget.TextView;
						public sendAccessibilityEvent(param0: number): void;
						public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public clearChildFocus(param0: globalAndroid.view.View): void;
						public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
						public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestTransparentRegion(param0: globalAndroid.view.View): void;
						public onEventChanged(): void;
						public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
						public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
						public addView(param0: globalAndroid.view.View): void;
						public onTextColorChanged(): void;
						public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
						public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public childDrawableStateChanged(param0: globalAndroid.view.View): void;
						public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
						public removeView(param0: globalAndroid.view.View): void;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
						public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
						public requestFitSystemWindows(): void;
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public init(param0: globalAndroid.content.Context): void;
						public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public getParentForAccessibility(): globalAndroid.view.ViewParent;
						public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						public focusableViewAvailable(param0: globalAndroid.view.View): void;
						public focusSearch(param0: number): globalAndroid.view.View;
						public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
						public recomputeViewAttributes(param0: globalAndroid.view.View): void;
						public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestDisallowInterceptTouchEvent(param0: boolean): void;
						public invalidateChildInParent(param0: native.Array<number>, param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
						public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public requestLayout(): void;
						public bringChildToFront(param0: globalAndroid.view.View): void;
						public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
						public addView(param0: globalAndroid.view.View, param1: number): void;
						public getParent(): globalAndroid.view.ViewParent;
						public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module dayview {
					export class AllDayEventsView extends com.telerik.widget.calendar.dayview.DayEventsViewBase {
						public static class: java.lang.Class<com.telerik.widget.calendar.dayview.AllDayEventsView>;
						public isLayoutRequested(): boolean;
						public constructor(param0: globalAndroid.content.Context);
						public sendAccessibilityEvent(param0: number): void;
						public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public clearChildFocus(param0: globalAndroid.view.View): void;
						public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
						public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
						public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestTransparentRegion(param0: globalAndroid.view.View): void;
						public constructor(param0: com.telerik.widget.calendar.dayview.CalendarDayViewItem, param1: globalAndroid.content.Context);
						public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
						public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
						public addView(param0: globalAndroid.view.View): void;
						public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
						public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public onMeasure(param0: number, param1: number): void;
						public childDrawableStateChanged(param0: globalAndroid.view.View): void;
						public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
						public removeView(param0: globalAndroid.view.View): void;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
						public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
						public requestFitSystemWindows(): void;
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public getParentForAccessibility(): globalAndroid.view.ViewParent;
						public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						public focusableViewAvailable(param0: globalAndroid.view.View): void;
						public focusSearch(param0: number): globalAndroid.view.View;
						public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
						public recomputeViewAttributes(param0: globalAndroid.view.View): void;
						public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestDisallowInterceptTouchEvent(param0: boolean): void;
						public invalidateChildInParent(param0: native.Array<number>, param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
						public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public requestLayout(): void;
						public bringChildToFront(param0: globalAndroid.view.View): void;
						public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
						public addView(param0: globalAndroid.view.View, param1: number): void;
						public getParent(): globalAndroid.view.ViewParent;
						public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module dayview {
					export class AllDayEventsViewStyle extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.calendar.dayview.AllDayEventsViewStyle>;
						public getAllDayText(): string;
						public getMaxColumns(): number;
						public setMaxVisibleEventRows(param0: number): void;
						public getEventsSpacing(): number;
						public setAllDayGravity(param0: number): void;
						public setAllDayTextColor(param0: number): void;
						public setElevation(param0: number): void;
						public setEventsSpacing(param0: number): void;
						public setAllDayTextSize(param0: number): void;
						public setMaxColumns(param0: number): void;
						public getAllDayGravity(): number;
						public setBackgroundColor(param0: number): void;
						public getAllDayTextSize(): number;
						public getAllDayOffsetHorizontal(): number;
						public getBackgroundColor(): number;
						public getMinimumHeight(): number;
						public getElevation(): number;
						public setAllDayText(param0: string): void;
						public getAllDayOffsetVertical(): number;
						public setAllDayTextIsVisible(param0: boolean): void;
						public setAllDayOffsetVertical(param0: number): void;
						public getMaxVisibleEventRows(): number;
						public constructor(param0: com.telerik.widget.calendar.dayview.CalendarDayView);
						public getAllDayTextIsVisible(): boolean;
						public setAllDayOffsetHorizontal(param0: number): void;
						public getAllDayTextColor(): number;
						public setMinimumHeight(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module dayview {
					export class CalendarDayView extends globalAndroid.widget.LinearLayout {
						public static class: java.lang.Class<com.telerik.widget.calendar.dayview.CalendarDayView>;
						public isLayoutRequested(): boolean;
						public constructor(param0: globalAndroid.content.Context);
						public sendAccessibilityEvent(param0: number): void;
						public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public clearChildFocus(param0: globalAndroid.view.View): void;
						public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
						public getEventViewTapListener(): com.telerik.widget.calendar.dayview.CalendarDayView.EventViewTapListener;
						public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
						public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
						public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
						public removeView(param0: globalAndroid.view.View): void;
						public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
						public recomputeViewAttributes(param0: globalAndroid.view.View): void;
						public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestDisallowInterceptTouchEvent(param0: boolean): void;
						public notifyOwnerPropertyChanged(param0: com.telerik.widget.calendar.RadCalendarView, param1: string): void;
						public invalidateChildInParent(param0: native.Array<number>, param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
						public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public requestLayout(): void;
						public setAllDayEventsViewStyle(param0: com.telerik.widget.calendar.dayview.AllDayEventsViewStyle): void;
						public bringChildToFront(param0: globalAndroid.view.View): void;
						public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
						public addView(param0: globalAndroid.view.View, param1: number): void;
						public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
						public getDayEventsViewStyle(): com.telerik.widget.calendar.dayview.DayEventsViewStyle;
						public getEventDayViewAdapter(): com.telerik.widget.calendar.dayview.EventDayViewAdapter;
						public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public setDayEventsViewStyle(param0: com.telerik.widget.calendar.dayview.DayEventsViewStyle): void;
						public requestTransparentRegion(param0: globalAndroid.view.View): void;
						public setEventViewTapListener(param0: com.telerik.widget.calendar.dayview.CalendarDayView.EventViewTapListener): void;
						public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
						public addView(param0: globalAndroid.view.View): void;
						public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public setEventDayViewAdapter(param0: com.telerik.widget.calendar.dayview.EventDayViewAdapter): void;
						public childDrawableStateChanged(param0: globalAndroid.view.View): void;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
						public requestFitSystemWindows(): void;
						public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public getParentForAccessibility(): globalAndroid.view.ViewParent;
						public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						public focusableViewAvailable(param0: globalAndroid.view.View): void;
						public focusSearch(param0: number): globalAndroid.view.View;
						public getAllDayEventsViewStyle(): com.telerik.widget.calendar.dayview.AllDayEventsViewStyle;
						public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
						public createDayViewItem(param0: globalAndroid.view.ViewGroup, param1: number): com.telerik.widget.calendar.dayview.CalendarDayViewItem;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public showEventsForDate(param0: number): void;
						public getParent(): globalAndroid.view.ViewParent;
					}
					export module CalendarDayView {
						export class CalendarDayViewPagerAdapter extends globalAndroid.support.v4.view.PagerAdapter {
							public static class: java.lang.Class<com.telerik.widget.calendar.dayview.CalendarDayView.CalendarDayViewPagerAdapter>;
							public constructor();
							public isViewFromObject(param0: globalAndroid.view.View, param1: any): boolean;
							public getItemPosition(param0: any): number;
							public instantiateItem(param0: globalAndroid.view.View, param1: number): any;
							public instantiateItem(param0: globalAndroid.view.ViewGroup, param1: number): any;
							public destroyItem(param0: globalAndroid.view.ViewGroup, param1: number, param2: any): void;
							public getCount(): number;
							public destroyItem(param0: globalAndroid.view.View, param1: number, param2: any): void;
							public constructor(param0: com.telerik.widget.calendar.dayview.CalendarDayView);
						}
						export class EventViewTapListener extends java.lang.Object {
							public static class: java.lang.Class<com.telerik.widget.calendar.dayview.CalendarDayView.EventViewTapListener>;
							/**
							 * Constructs a new instance of the com.telerik.widget.calendar.dayview.CalendarDayView$EventViewTapListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onEventViewTap(param0: com.telerik.widget.calendar.events.Event): void;
							});
							public constructor();
							public onEventViewTap(param0: com.telerik.widget.calendar.events.Event): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module dayview {
					export class CalendarDayViewItem extends globalAndroid.widget.FrameLayout {
						public static class: java.lang.Class<com.telerik.widget.calendar.dayview.CalendarDayViewItem>;
						public isLayoutRequested(): boolean;
						public makeAllDayEventsView(param0: globalAndroid.content.Context): com.telerik.widget.calendar.dayview.AllDayEventsView;
						public constructor(param0: globalAndroid.content.Context);
						public sendAccessibilityEvent(param0: number): void;
						public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public clearChildFocus(param0: globalAndroid.view.View): void;
						public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
						public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
						public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
						public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
						public removeView(param0: globalAndroid.view.View): void;
						public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public makeDayEventsView(param0: globalAndroid.content.Context): com.telerik.widget.calendar.dayview.DayEventsView;
						public recomputeViewAttributes(param0: globalAndroid.view.View): void;
						public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestDisallowInterceptTouchEvent(param0: boolean): void;
						public invalidateChildInParent(param0: native.Array<number>, param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
						public dayView(): com.telerik.widget.calendar.dayview.CalendarDayView;
						public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public updateAllDayContainerVisibility(param0: number): void;
						public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public requestLayout(): void;
						public makeAllDayEventsContainer(param0: globalAndroid.content.Context): globalAndroid.view.ViewGroup;
						public bringChildToFront(param0: globalAndroid.view.View): void;
						public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
						public addView(param0: globalAndroid.view.View, param1: number): void;
						public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
						public constructor(param0: com.telerik.widget.calendar.dayview.CalendarDayView, param1: globalAndroid.content.Context);
						public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestTransparentRegion(param0: globalAndroid.view.View): void;
						public makeAllDayLabel(param0: globalAndroid.content.Context): globalAndroid.widget.TextView;
						public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
						public addView(param0: globalAndroid.view.View): void;
						public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public childDrawableStateChanged(param0: globalAndroid.view.View): void;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
						public requestFitSystemWindows(): void;
						public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public getParentForAccessibility(): globalAndroid.view.ViewParent;
						public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						public focusableViewAvailable(param0: globalAndroid.view.View): void;
						public focusSearch(param0: number): globalAndroid.view.View;
						public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public getParent(): globalAndroid.view.ViewParent;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module dayview {
					export class DayEventView extends com.telerik.widget.calendar.dayview.DayEventViewBase {
						public static class: java.lang.Class<com.telerik.widget.calendar.dayview.DayEventView>;
						public isLayoutRequested(): boolean;
						public constructor(param0: globalAndroid.content.Context);
						public titleView(): globalAndroid.widget.TextView;
						public sendAccessibilityEvent(param0: number): void;
						public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public clearChildFocus(param0: globalAndroid.view.View): void;
						public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
						public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestTransparentRegion(param0: globalAndroid.view.View): void;
						public onEventChanged(): void;
						public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
						public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
						public addView(param0: globalAndroid.view.View): void;
						public onTextColorChanged(): void;
						public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
						public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public childDrawableStateChanged(param0: globalAndroid.view.View): void;
						public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
						public removeView(param0: globalAndroid.view.View): void;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
						public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
						public requestFitSystemWindows(): void;
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public init(param0: globalAndroid.content.Context): void;
						public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public getParentForAccessibility(): globalAndroid.view.ViewParent;
						public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						public detailsView(): globalAndroid.widget.TextView;
						public focusableViewAvailable(param0: globalAndroid.view.View): void;
						public focusSearch(param0: number): globalAndroid.view.View;
						public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
						public recomputeViewAttributes(param0: globalAndroid.view.View): void;
						public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestDisallowInterceptTouchEvent(param0: boolean): void;
						public invalidateChildInParent(param0: native.Array<number>, param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
						public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public requestLayout(): void;
						public bringChildToFront(param0: globalAndroid.view.View): void;
						public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
						public addView(param0: globalAndroid.view.View, param1: number): void;
						public getParent(): globalAndroid.view.ViewParent;
						public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module dayview {
					export abstract class DayEventViewBase extends globalAndroid.widget.LinearLayout {
						public static class: java.lang.Class<com.telerik.widget.calendar.dayview.DayEventViewBase>;
						public static EVENT_COLOR: number;
						public isLayoutRequested(): boolean;
						public constructor(param0: globalAndroid.content.Context);
						public sendAccessibilityEvent(param0: number): void;
						public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public clearChildFocus(param0: globalAndroid.view.View): void;
						public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
						public onEventChanged(): void;
						public setEvent(param0: com.telerik.widget.calendar.events.Event): void;
						public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
						public setBackgroundColor(param0: number): void;
						public onTextColorChanged(): void;
						public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
						public getEvent(): com.telerik.widget.calendar.events.Event;
						public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
						public getBackgroundColor(): number;
						public removeView(param0: globalAndroid.view.View): void;
						public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public recomputeViewAttributes(param0: globalAndroid.view.View): void;
						public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestDisallowInterceptTouchEvent(param0: boolean): void;
						public invalidateChildInParent(param0: native.Array<number>, param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
						public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public setTextColor(param0: number): void;
						public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public requestLayout(): void;
						public bringChildToFront(param0: globalAndroid.view.View): void;
						public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
						public addView(param0: globalAndroid.view.View, param1: number): void;
						public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
						public getCornerRadius(): number;
						public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestTransparentRegion(param0: globalAndroid.view.View): void;
						public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
						public addView(param0: globalAndroid.view.View): void;
						public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public childDrawableStateChanged(param0: globalAndroid.view.View): void;
						public updateBackground(): void;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
						public requestFitSystemWindows(): void;
						public init(param0: globalAndroid.content.Context): void;
						public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public getParentForAccessibility(): globalAndroid.view.ViewParent;
						public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						public getTextColor(): number;
						public focusableViewAvailable(param0: globalAndroid.view.View): void;
						public focusSearch(param0: number): globalAndroid.view.View;
						public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
						public setCornerRadius(param0: number): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public getParent(): globalAndroid.view.ViewParent;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module dayview {
					export class DayEventsView extends com.telerik.widget.calendar.dayview.DayEventsViewBase {
						public static class: java.lang.Class<com.telerik.widget.calendar.dayview.DayEventsView>;
						public isLayoutRequested(): boolean;
						public constructor(param0: globalAndroid.content.Context);
						public sendAccessibilityEvent(param0: number): void;
						public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public clearChildFocus(param0: globalAndroid.view.View): void;
						public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
						public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
						public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
						public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
						public onMeasure(param0: number, param1: number): void;
						public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
						public removeView(param0: globalAndroid.view.View): void;
						public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public labelForTime(param0: number): string;
						public labelBounds(): globalAndroid.graphics.Rect;
						public recomputeViewAttributes(param0: globalAndroid.view.View): void;
						public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestDisallowInterceptTouchEvent(param0: boolean): void;
						public updateEvents(param0: java.util.List<com.telerik.widget.calendar.events.Event>): void;
						public invalidateChildInParent(param0: native.Array<number>, param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
						public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public requestLayout(): void;
						public bringChildToFront(param0: globalAndroid.view.View): void;
						public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
						public addView(param0: globalAndroid.view.View, param1: number): void;
						public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
						public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public updateDate(param0: number): void;
						public requestTransparentRegion(param0: globalAndroid.view.View): void;
						public constructor(param0: com.telerik.widget.calendar.dayview.CalendarDayViewItem, param1: globalAndroid.content.Context);
						public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
						public addView(param0: globalAndroid.view.View): void;
						public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public childDrawableStateChanged(param0: globalAndroid.view.View): void;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
						public requestFitSystemWindows(): void;
						public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public getParentForAccessibility(): globalAndroid.view.ViewParent;
						public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						public focusableViewAvailable(param0: globalAndroid.view.View): void;
						public focusSearch(param0: number): globalAndroid.view.View;
						public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public getParent(): globalAndroid.view.ViewParent;
					}
					export module DayEventsView {
						export class CalendarDayTimeLineView extends globalAndroid.view.View {
							public static class: java.lang.Class<com.telerik.widget.calendar.dayview.DayEventsView.CalendarDayTimeLineView>;
							public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
							public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
							public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
							public sendAccessibilityEvent(param0: number): void;
							public onDraw(param0: globalAndroid.graphics.Canvas): void;
							public renderSlots(param0: globalAndroid.graphics.Canvas): void;
							public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
							public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
							public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
							public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
							public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
							public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						}
						export class EventLayoutInfo extends java.lang.Object {
							public static class: java.lang.Class<com.telerik.widget.calendar.dayview.DayEventsView.EventLayoutInfo>;
						}
						export class EventsRegion extends java.lang.Object {
							public static class: java.lang.Class<com.telerik.widget.calendar.dayview.DayEventsView.EventsRegion>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module dayview {
					export abstract class DayEventsViewBase extends globalAndroid.widget.ScrollView {
						public static class: java.lang.Class<com.telerik.widget.calendar.dayview.DayEventsViewBase>;
						public isLayoutRequested(): boolean;
						public constructor(param0: globalAndroid.content.Context);
						public sendAccessibilityEvent(param0: number): void;
						public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public clearChildFocus(param0: globalAndroid.view.View): void;
						public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
						public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
						public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
						public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
						public removeView(param0: globalAndroid.view.View): void;
						public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public adapter(): com.telerik.widget.calendar.dayview.EventDayViewAdapter;
						public createEventViews(): void;
						public recomputeViewAttributes(param0: globalAndroid.view.View): void;
						public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestDisallowInterceptTouchEvent(param0: boolean): void;
						public invalidateChildInParent(param0: native.Array<number>, param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
						public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public requestLayout(): void;
						public bringChildToFront(param0: globalAndroid.view.View): void;
						public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
						public addView(param0: globalAndroid.view.View, param1: number): void;
						public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
						public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
						public eventViews(): java.util.ArrayList<globalAndroid.view.View>;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public requestTransparentRegion(param0: globalAndroid.view.View): void;
						public constructor(param0: com.telerik.widget.calendar.dayview.CalendarDayViewItem, param1: globalAndroid.content.Context);
						public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
						public events(): java.util.List<com.telerik.widget.calendar.events.Event>;
						public addView(param0: globalAndroid.view.View): void;
						public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public childDrawableStateChanged(param0: globalAndroid.view.View): void;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
						public requestFitSystemWindows(): void;
						public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public getParentForAccessibility(): globalAndroid.view.ViewParent;
						public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						public focusableViewAvailable(param0: globalAndroid.view.View): void;
						public focusSearch(param0: number): globalAndroid.view.View;
						public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
						public date(): number;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public mainContent(): globalAndroid.view.ViewGroup;
						public getParent(): globalAndroid.view.ViewParent;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module dayview {
					export class DayEventsViewStyle extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.calendar.dayview.DayEventsViewStyle>;
						public setTimeLabelOffsetStart(param0: number): void;
						public getTimeLinesOffsetEnd(): number;
						public getTimeLabelColor(): number;
						public getEventsSpacing(): number;
						public setTimeLinesVisible(param0: boolean): void;
						public getMinEventHeight(): number;
						public setTimeLabelColor(param0: number): void;
						public getTimeLinesVisible(): boolean;
						public setTimeLabelTextSize(param0: number): void;
						public setTimeLinesOffsetEnd(param0: number): void;
						public setTimeLinesColor(param0: number): void;
						public setEventsSpacing(param0: number): void;
						public getTimeLabelOffsetEnd(): number;
						public setTimeLinesSpacing(param0: number): void;
						public getStartTime(): number;
						public getEndTime(): number;
						public setTimeLabelFormat(param0: java.text.SimpleDateFormat): void;
						public setEventsOffsetStart(param0: number): void;
						public getTimeLinesOffsetStart(): number;
						public setTimeLinesOffsetStart(param0: number): void;
						public setTopOffset(param0: number): void;
						public getBottomOffset(): number;
						public setTimeLabelOffsetEnd(param0: number): void;
						public getTopOffset(): number;
						public getTimeLinesColor(): number;
						public setBackgroundColor(param0: number): void;
						public setTimeLinesInterval(param0: number): void;
						public getBackgroundColor(): number;
						public setBottomOffset(param0: number): void;
						public getTimeLabelFormat(): java.text.SimpleDateFormat;
						public getTimeLinesInterval(): number;
						public setEndTime(param0: number): void;
						public getTimeLabelTextSize(): number;
						public getTimeLinesSpacing(): number;
						public getTimeLinesWidth(): number;
						public setEventsOffsetEnd(param0: number): void;
						public constructor(param0: com.telerik.widget.calendar.dayview.CalendarDayView);
						public setTimeLinesWidth(param0: number): void;
						public setMinEventHeight(param0: number): void;
						public getTimeLabelOffsetStart(): number;
						public setStartTime(param0: number): void;
						public getEventsOffsetStart(): number;
						public getEventsOffsetEnd(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module dayview {
					export class EventDayViewAdapter extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.calendar.dayview.EventDayViewAdapter>;
						public getView(param0: com.telerik.widget.calendar.events.Event, param1: number): globalAndroid.view.View;
						public constructor(param0: globalAndroid.content.Context);
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module decorations {
					export abstract class CellDecorator extends com.telerik.widget.calendar.decorations.Decorator {
						public static class: java.lang.Class<com.telerik.widget.calendar.decorations.CellDecorator>;
						public stroked: boolean;
						public scale: number;
						public cellsForDecoration: java.util.Hashtable<java.lang.Integer,java.util.List<com.telerik.widget.calendar.CalendarCell>>;
						public toggleDecorationForCell(param0: com.telerik.widget.calendar.CalendarCell, param1: number): void;
						public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
						public getScale(): number;
						public renderLayer(param0: number, param1: globalAndroid.graphics.Canvas): void;
						public clearDecorations(): void;
						public setStroked(param0: boolean): void;
						public setScale(param0: number): void;
						public renderDecorationForCell(param0: globalAndroid.graphics.Canvas, param1: com.telerik.widget.calendar.CalendarCell): void;
						public isStroked(): boolean;
						public toggleDecorationForCell(param0: com.telerik.widget.calendar.CalendarCell): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module decorations {
					export class CircularCellDecorator extends com.telerik.widget.calendar.decorations.CellDecorator {
						public static class: java.lang.Class<com.telerik.widget.calendar.decorations.CircularCellDecorator>;
						public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
						public setRadius(param0: number): void;
						public constructor(param0: com.telerik.widget.calendar.RadCalendarView, param1: number);
						public getRadius(): number;
						public renderDecorationForCell(param0: globalAndroid.graphics.Canvas, param1: com.telerik.widget.calendar.CalendarCell): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module decorations {
					export class CircularRangeDecorator extends com.telerik.widget.calendar.decorations.RangeDecorator {
						public static class: java.lang.Class<com.telerik.widget.calendar.decorations.CircularRangeDecorator>;
						public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
						public renderIndicator(param0: globalAndroid.graphics.Canvas, param1: number, param2: number): void;
						public renderShape(param0: globalAndroid.graphics.Canvas, param1: globalAndroid.graphics.RectF): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module decorations {
					export abstract class Decorator extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.calendar.decorations.Decorator>;
						public paint: globalAndroid.graphics.Paint;
						public strokeWidth: number;
						public color: number;
						public owner: com.telerik.widget.calendar.RadCalendarView;
						public getColor(): number;
						public getStrokeWidth(): number;
						public setStrokeWidth(param0: number): void;
						public toggleDecorationForCell(param0: com.telerik.widget.calendar.CalendarCell, param1: number): void;
						public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
						public renderLayer(param0: number, param1: globalAndroid.graphics.Canvas): void;
						public clearDecorations(): void;
						public render(param0: globalAndroid.graphics.Canvas): void;
						public setColor(param0: number): void;
						public toggleDecorationForCell(param0: com.telerik.widget.calendar.CalendarCell): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module decorations {
					export abstract class RangeDecorator extends com.telerik.widget.calendar.decorations.CellDecorator {
						public static class: java.lang.Class<com.telerik.widget.calendar.decorations.RangeDecorator>;
						public firstDateForDecoration: number;
						public lastDateForDecoration: number;
						public shapeScale: number;
						public shapeColor: number;
						public shapeBounds: globalAndroid.graphics.RectF;
						public shapeSize: number;
						public indicatorSize: number;
						public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
						public renderLayer(param0: number, param1: globalAndroid.graphics.Canvas): void;
						public clearDecorations(): void;
						public openShape(param0: number, param1: number, param2: number, param3: number): void;
						public renderIndicator(param0: globalAndroid.graphics.Canvas, param1: number, param2: number): void;
						public renderShape(param0: globalAndroid.graphics.Canvas, param1: globalAndroid.graphics.RectF): void;
						public renderCell(param0: globalAndroid.graphics.Canvas, param1: com.telerik.widget.calendar.CalendarCell): void;
						public getShapeColor(): number;
						public toggleDecorationForCell(param0: com.telerik.widget.calendar.CalendarCell, param1: number): void;
						public setShapeScale(param0: number): void;
						public getShapeScale(): number;
						public closeShape(param0: number, param1: number): void;
						public setShapeColor(param0: number): void;
						public toggleDecorationForCell(param0: com.telerik.widget.calendar.CalendarCell): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module decorations {
					export class RectangularCellDecorator extends com.telerik.widget.calendar.decorations.CellDecorator {
						public static class: java.lang.Class<com.telerik.widget.calendar.decorations.RectangularCellDecorator>;
						public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
						public constructor(param0: com.telerik.widget.calendar.RadCalendarView, param1: number);
						public renderDecorationForCell(param0: globalAndroid.graphics.Canvas, param1: com.telerik.widget.calendar.CalendarCell): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module decorations {
					export class SegmentDecorator extends com.telerik.widget.calendar.decorations.Decorator {
						public static class: java.lang.Class<com.telerik.widget.calendar.decorations.SegmentDecorator>;
						public halfStrokeWidth: number;
						public setStrokeWidth(param0: number): void;
						public toggleDecorationForCell(param0: com.telerik.widget.calendar.CalendarCell, param1: number): void;
						public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
						public renderLayer(param0: number, param1: globalAndroid.graphics.Canvas): void;
						public clearDecorations(): void;
						public toggleDecorationForCell(param0: number, param1: number, param2: number, param3: number): void;
						public toggleDecorationForCell(param0: number, param1: number, param2: number, param3: number, param4: number): void;
						public toggleDecorationForCell(param0: com.telerik.widget.calendar.CalendarCell): void;
					}
					export module SegmentDecorator {
						export class LineSegment extends java.lang.Object {
							public static class: java.lang.Class<com.telerik.widget.calendar.decorations.SegmentDecorator.LineSegment>;
							public hashCode(): number;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module decorations {
					export class SquareCellDecorator extends com.telerik.widget.calendar.decorations.CellDecorator {
						public static class: java.lang.Class<com.telerik.widget.calendar.decorations.SquareCellDecorator>;
						public setSize(param0: number): void;
						public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
						public getSize(): number;
						public constructor(param0: com.telerik.widget.calendar.RadCalendarView, param1: number);
						public renderDecorationForCell(param0: globalAndroid.graphics.Canvas, param1: com.telerik.widget.calendar.CalendarCell): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module decorations {
					export class SquareRangeDecorator extends com.telerik.widget.calendar.decorations.RangeDecorator {
						public static class: java.lang.Class<com.telerik.widget.calendar.decorations.SquareRangeDecorator>;
						public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
						public renderIndicator(param0: globalAndroid.graphics.Canvas, param1: number, param2: number): void;
						public renderShape(param0: globalAndroid.graphics.Canvas, param1: globalAndroid.graphics.RectF): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module events {
					export class Event extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.calendar.events.Event>;
						public setStartDate(param0: number): void;
						public setCalendarId(param0: number): void;
						public getEndDate(): number;
						public getStartDate(): number;
						public isAllDay(): boolean;
						public getCalendarId(): number;
						public getTitle(): string;
						public setEventColor(param0: number): void;
						public getEventColor(): number;
						public setTitle(param0: string): void;
						public getDetails(): string;
						public constructor(param0: string, param1: number, param2: number);
						public setEndDate(param0: number): void;
						public setAllDay(param0: boolean): void;
						public setDetails(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module events {
					export class EventAdapter extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.calendar.events.EventAdapter>;
						public owner: com.telerik.widget.calendar.RadCalendarView;
						public calendar: java.util.Calendar;
						public requestEventsForDates(param0: java.util.List<java.lang.Long>, param1: com.telerik.widget.calendar.events.read.GenericResultCallback<java.util.HashMap<java.lang.Long,java.util.List<com.telerik.widget.calendar.events.Event>>>): void;
						public setRenderer(param0: com.telerik.widget.calendar.events.EventRenderer): void;
						public eventShouldBeVisible(param0: com.telerik.widget.calendar.events.Event, param1: number, param2: number): boolean;
						public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
						public addEvent(param0: com.telerik.widget.calendar.events.Event): void;
						public constructor(param0: com.telerik.widget.calendar.RadCalendarView, param1: java.util.List<com.telerik.widget.calendar.events.Event>);
						public getEventsForDate(param0: number): java.util.List<com.telerik.widget.calendar.events.Event>;
						public getRenderer(): com.telerik.widget.calendar.events.EventRenderer;
						public getEvents(): java.util.List<com.telerik.widget.calendar.events.Event>;
						public setEvents(param0: java.util.List<com.telerik.widget.calendar.events.Event>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module events {
					export class EventRenderMode {
						public static class: java.lang.Class<com.telerik.widget.calendar.events.EventRenderMode>;
						public static Shape: com.telerik.widget.calendar.events.EventRenderMode;
						public static Text: com.telerik.widget.calendar.events.EventRenderMode;
						public static Shape_And_Text: com.telerik.widget.calendar.events.EventRenderMode;
						public static None: com.telerik.widget.calendar.events.EventRenderMode;
						public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
						public static values(): native.Array<com.telerik.widget.calendar.events.EventRenderMode>;
						public static valueOf(param0: string): com.telerik.widget.calendar.events.EventRenderMode;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module events {
					export class EventRenderer extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.calendar.events.EventRenderer>;
						public setEventTextSize(param0: number): void;
						public getEventRenderMode(): com.telerik.widget.calendar.events.EventRenderMode;
						public constructor(param0: globalAndroid.content.Context);
						public getEventTextSize(): number;
						public renderEvents(param0: globalAndroid.graphics.Canvas, param1: com.telerik.widget.calendar.CalendarDayCell): void;
						public setEventRenderMode(param0: com.telerik.widget.calendar.events.EventRenderMode): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module events {
					export class EventsDisplayMode {
						public static class: java.lang.Class<com.telerik.widget.calendar.events.EventsDisplayMode>;
						public static Normal: com.telerik.widget.calendar.events.EventsDisplayMode;
						public static Inline: com.telerik.widget.calendar.events.EventsDisplayMode;
						public static Popup: com.telerik.widget.calendar.events.EventsDisplayMode;
						public static valueOf(param0: string): com.telerik.widget.calendar.events.EventsDisplayMode;
						public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
						public static values(): native.Array<com.telerik.widget.calendar.events.EventsDisplayMode>;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module events {
					export module read {
						export abstract class EventAsyncAdapter extends com.telerik.widget.calendar.events.EventAdapter {
							public static class: java.lang.Class<com.telerik.widget.calendar.events.read.EventAsyncAdapter>;
							public static WORK_CALENDAR_ONE: java.util.Calendar;
							public static WORK_CALENDAR_TWO: java.util.Calendar;
							public baseDates: java.util.HashMap<java.lang.Long,java.util.List<com.telerik.widget.calendar.events.Event>>;
							public eventLoadTask: com.telerik.widget.calendar.events.read.EventAsyncAdapter.LoadEventTask;
							public eventLoadTaskRunning: boolean;
							public requestedDates: java.util.List<java.lang.Long>;
							public eventsRed: java.util.List<com.telerik.widget.calendar.events.Event>;
							public constructor(param0: com.telerik.widget.calendar.RadCalendarView, param1: java.util.List<com.telerik.widget.calendar.events.Event>);
							public loadEventsAsync(param0: java.util.List<com.telerik.widget.calendar.events.Event>): void;
							public eventShouldRecur(param0: com.telerik.widget.calendar.events.read.RecurringEvent, param1: number): boolean;
							public onEventsResult(param0: java.util.List<com.telerik.widget.calendar.events.Event>): void;
							public readEventsAsync(): void;
							public requestEventsForDates(param0: java.util.List<java.lang.Long>, param1: com.telerik.widget.calendar.events.read.GenericResultCallback<java.util.HashMap<java.lang.Long,java.util.List<com.telerik.widget.calendar.events.Event>>>): void;
							public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
						}
						export module EventAsyncAdapter {
							export class LoadEventTask extends globalAndroid.os.AsyncTask<java.lang.Void,java.lang.Void,java.util.HashMap<java.lang.Long,java.util.List<com.telerik.widget.calendar.events.Event>>> {
								public static class: java.lang.Class<com.telerik.widget.calendar.events.read.EventAsyncAdapter.LoadEventTask>;
								public onPostExecute(param0: any): void;
								public onCancelled(param0: any): void;
								public doInBackground(param0: native.Array<java.lang.Void>): java.util.HashMap<java.lang.Long,java.util.List<com.telerik.widget.calendar.events.Event>>;
								public doInBackground(param0: native.Array<any>): any;
								public onPostExecute(param0: java.util.HashMap<java.lang.Long,java.util.List<com.telerik.widget.calendar.events.Event>>): void;
								public onCancelled(): void;
								public constructor(param0: com.telerik.widget.calendar.events.read.GenericResultCallback<java.util.HashMap<java.lang.Long,java.util.List<com.telerik.widget.calendar.events.Event>>>, param1: java.lang.Runnable, param2: java.util.List<com.telerik.widget.calendar.events.Event>, param3: java.util.List<java.lang.Long>);
								public constructor();
								public onCancelled(param0: java.util.HashMap<java.lang.Long,java.util.List<com.telerik.widget.calendar.events.Event>>): void;
							}
							export class RequestTask extends globalAndroid.os.AsyncTask<java.lang.Void,java.lang.Void,java.lang.Void> {
								public static class: java.lang.Class<com.telerik.widget.calendar.events.read.EventAsyncAdapter.RequestTask>;
								public onPostExecute(param0: java.lang.Void): void;
								public onPostExecute(param0: any): void;
								public constructor(param0: java.util.List<com.telerik.widget.calendar.events.Event>);
								public doInBackground(param0: native.Array<any>): any;
								public constructor();
								public doInBackground(param0: native.Array<java.lang.Void>): java.lang.Void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module events {
					export module read {
						export class EventQueryToken extends java.lang.Object {
							public static class: java.lang.Class<com.telerik.widget.calendar.events.read.EventQueryToken>;
							public static CALENDAR_ID_SELECTION: string;
							public static CALENDAR_OWNER_SELECTION: string;
							public selection: string;
							public selectionArgs: native.Array<string>;
							public static getCalendarsByOwner(param0: string): com.telerik.widget.calendar.events.read.EventQueryToken;
							public getMinDate(): number;
							public buildSelection(): string;
							public getMaxDate(): number;
							public setMaxDate(param0: number): void;
							public static getDefaultCalendar(): com.telerik.widget.calendar.events.read.EventQueryToken;
							public static getCalendarsByOwners(param0: native.Array<string>): com.telerik.widget.calendar.events.read.EventQueryToken;
							public constructor(param0: string, param1: native.Array<string>);
							public setRange(param0: number, param1: number): void;
							public static getCalendarById(param0: string): com.telerik.widget.calendar.events.read.EventQueryToken;
							public static getCalendarsById(param0: native.Array<string>): com.telerik.widget.calendar.events.read.EventQueryToken;
							public setMinDate(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module events {
					export module read {
						export class EventReadAdapter extends com.telerik.widget.calendar.events.read.EventAsyncAdapter {
							public static class: java.lang.Class<com.telerik.widget.calendar.events.read.EventReadAdapter>;
							public constructor(param0: com.telerik.widget.calendar.RadCalendarView, param1: java.util.List<com.telerik.widget.calendar.events.Event>);
							public loadEventsAsync(param0: java.util.List<com.telerik.widget.calendar.events.Event>): void;
							public getEventsQueryToken(): com.telerik.widget.calendar.events.read.EventQueryToken;
							public setEventsQueryToken(param0: com.telerik.widget.calendar.events.read.EventQueryToken): void;
							public static getAllCalendars(param0: globalAndroid.content.Context): native.Array<com.telerik.widget.calendar.events.read.EventReadAdapter.CalendarInfo>;
							public static getAllCalendarsAsync(param0: globalAndroid.content.Context, param1: com.telerik.widget.calendar.events.read.GenericResultCallback<native.Array<com.telerik.widget.calendar.events.read.EventReadAdapter.CalendarInfo>>): void;
							public getEventsUri(): globalAndroid.net.Uri;
							public readEventsAsync(): void;
							public setEventsUri(param0: globalAndroid.net.Uri): void;
							public static getCurrentUser(param0: globalAndroid.content.Context): string;
							public constructor(param0: com.telerik.widget.calendar.RadCalendarView);
							public static getCurrentUserAsync(param0: globalAndroid.content.Context, param1: com.telerik.widget.calendar.events.read.GenericResultCallback<string>): void;
						}
						export module EventReadAdapter {
							export class CalendarInfo extends java.lang.Object {
								public static class: java.lang.Class<com.telerik.widget.calendar.events.read.EventReadAdapter.CalendarInfo>;
								public id: string;
								public ownerAccount: string;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module events {
					export module read {
						export class Frequency {
							public static class: java.lang.Class<com.telerik.widget.calendar.events.read.Frequency>;
							public static Secondly: com.telerik.widget.calendar.events.read.Frequency;
							public static Minutely: com.telerik.widget.calendar.events.read.Frequency;
							public static Hourly: com.telerik.widget.calendar.events.read.Frequency;
							public static Daily: com.telerik.widget.calendar.events.read.Frequency;
							public static Weekly: com.telerik.widget.calendar.events.read.Frequency;
							public static Monthly: com.telerik.widget.calendar.events.read.Frequency;
							public static Yearly: com.telerik.widget.calendar.events.read.Frequency;
							public static values(): native.Array<com.telerik.widget.calendar.events.read.Frequency>;
							public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
							public static valueOf(param0: string): com.telerik.widget.calendar.events.read.Frequency;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module events {
					export module read {
						export class GenericResultCallback<T>  extends java.lang.Object {
							public static class: java.lang.Class<com.telerik.widget.calendar.events.read.GenericResultCallback<any>>;
							/**
							 * Constructs a new instance of the com.telerik.widget.calendar.events.read.GenericResultCallback<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onResult(param0: T): void;
							});
							public constructor();
							public onResult(param0: T): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module calendar {
				export module events {
					export module read {
						export class RecurringEvent extends com.telerik.widget.calendar.events.Event {
							public static class: java.lang.Class<com.telerik.widget.calendar.events.read.RecurringEvent>;
							public extractUntilDate(param0: string): void;
							public byDayModifier(param0: number): number;
							public constructor(param0: string, param1: number, param2: string, param3: string);
							public byYearDay(): native.Array<number>;
							public buildRecurrenceRules(param0: string): void;
							public byHour(): native.Array<number>;
							public byWeekNo(): native.Array<number>;
							public repeatUntilDate(): number;
							public extractByDay(param0: string): void;
							public extractByMonth(param0: string): void;
							public constructor(param0: string, param1: number, param2: number);
							public byDay(param0: number): boolean;
							public frequency(): com.telerik.widget.calendar.events.read.Frequency;
							public isByWeekNo(): boolean;
							public isByYearDay(): boolean;
							public isBySetPos(): boolean;
							public isModified(): boolean;
							public extractByMonthDay(param0: string): void;
							public constructor(param0: string, param1: number, param2: number, param3: string);
							public extractByYearDay(param0: string): void;
							public weekStartDay(): number;
							public interval(): number;
							public extractByWeekNo(param0: string): void;
							public isBySecond(): boolean;
							public rrule(): string;
							public isByMinute(): boolean;
							public extractFrequency(param0: string): void;
							public bySetPos(): native.Array<number>;
							public isByDay(): boolean;
							public extractWeekStart(param0: string): void;
							public count(): number;
							public extractBySecond(param0: string): void;
							public byMinute(): native.Array<number>;
							public byMonthDay(): native.Array<number>;
							public extractByMinute(param0: string): void;
							public isByHour(): boolean;
							public isByDayModified(): boolean;
							public isByMonthDay(): boolean;
							public extractBySetPos(param0: string): void;
							public extractTokens(param0: string): native.Array<string>;
							public extractTokenValue(param0: string): string;
							public byMonth(param0: number): boolean;
							public isByMonth(): boolean;
							public extractByHour(param0: string): void;
							public extractCount(param0: string): void;
							public bySecond(): native.Array<number>;
							public extractInterval(param0: string): void;
						}
					}
				}
			}
		}
	}
}

//Generics information:
//com.telerik.widget.calendar.events.read.GenericResultCallback:1