import * as commonModule from "./ui-chart.common";
import { ObservableArray } from "tns-core-modules/data/observable-array";
import * as commonAxisModule from "./visualization/views/chart-axis.common";
import * as publicEnumModule from "./misc/chart-public-enum";
import * as trackBallCommonModule from "./visualization/parts/chart-track-ball.common";
import * as cartesianChartGridCommonModule from "./visualization/parts/chart-cartesian-chart-grid.common";
import * as commonLegendModule from "./visualization/views/chart-legend-view.common";
export * from "./ui-chart.common";
export * from "./misc/chart-public-enum";
export * from './visualization/views/chart-legend-view';
export * from "./visualization/views/chart-axis";
export * from "./misc/chart-event-data.common";
export * from "./visualization/parts/chart-label-style.common";
export * from "./visualization/views/chart-series";
export * from "./visualization/parts/chart-palette.common";
export * from "./visualization/parts/chart-annotation";
export * from "./visualization/parts/chart-cartesian-chart-grid.common";
export { RadCartesianChartGrid } from "./visualization/parts/chart-cartesian-chart-grid";
export * from "./visualization/parts/chart-track-ball";
export declare class RadPieChart extends commonModule.RadPieChart {
    protected _android: com.telerik.widget.chart.visualization.pieChart.RadPieChartView;
    private _rootLayout;
    private _selectionBehavior;
    constructor();
    readonly androidView: any;
    readonly rootLayout: any;
    readonly _nativeView: any;
    createNativeView(): globalAndroid.widget.RelativeLayout;
    disposeNativeView(): void;
    _onDetach(force: any): void;
    private detachSeries;
    initSelectionBehavior(): void;
    protected onLegendChanged(oldValue: commonLegendModule.RadLegendView, newValue: commonLegendModule.RadLegendView): void;
}
export declare class RadCartesianChart extends commonModule.RadCartesianChart {
    private _android;
    _rootLayout: android.widget.RelativeLayout;
    private _panZoomBehavior;
    private _selectionBehavior;
    constructor();
    readonly android: any;
    readonly androidView: any;
    readonly rootLayout: any;
    readonly _nativeView: any;
    createNativeView(): globalAndroid.widget.RelativeLayout;
    disposeNativeView(): void;
    protected onLegendChanged(oldValue: commonLegendModule.RadLegendView, newValue: commonLegendModule.RadLegendView): void;
    getAxisByID(axisID: string): commonAxisModule.CartesianAxis;
    _onDetach(force: any): void;
    private detachSeries;
    private initNativeAnnotation;
    updatePanZoomBehavior(): void;
    _syncZoomValues(): void;
    private initSelectionBehavior;
    protected onSeriesChanged(oldValue: ObservableArray<any>, newValue: ObservableArray<any>): void;
    protected onSeriesSelectionModeChanged(oldValue: publicEnumModule.ChartSelectionMode, newValue: publicEnumModule.ChartSelectionMode): void;
    protected onPointSelectionModeChanged(oldValue: publicEnumModule.ChartSelectionMode, newValue: publicEnumModule.ChartSelectionMode): void;
    protected onHorizontalAxisChanged(oldValue: commonAxisModule.CartesianAxis, newValue: commonAxisModule.CartesianAxis): void;
    protected onVerticalAxisChanged(oldValue: commonAxisModule.CartesianAxis, newValue: commonAxisModule.CartesianAxis): void;
    protected onGridChanged(oldValue: cartesianChartGridCommonModule.RadCartesianChartGrid, newValue: cartesianChartGridCommonModule.RadCartesianChartGrid): void;
    protected onAnnotationsChanged(oldValue: ObservableArray<any>, newValue: ObservableArray<any>): void;
    protected onHorizontalZoomChanged(oldValue: number, newValue: number): void;
    protected onVerticalZoomChanged(oldValue: number, newValue: number): void;
    protected onTrackballChanged(oldValue: trackBallCommonModule.Trackball, newValue: trackBallCommonModule.Trackball): void;
    private removeTrackball;
    private setNativeTrackballBehavior;
}
