import { View, Property } from "tns-core-modules/ui/core/view";
import { RadChartBase } from "../../ui-chart.common";
import { ChartLegendPosition, ChartLegendOffsetOrigin } from "../../misc/chart-public-enum";
import { Color } from "tns-core-modules/color";
export declare class RadLegendView extends View {
    position: ChartLegendPosition;
    offsetOrigin: ChartLegendOffsetOrigin;
    horizontalOffset: number;
    verticalOffset: number;
    title: string;
    titleColor: Color;
    titleSize: number;
    enableSelection: boolean;
    static titleSizeProperty: Property<RadLegendView, number>;
    protected onTitleSizeChanged(oldValue: number, newValue: number): void;
    static titleColorProperty: Property<RadLegendView, Color>;
    protected onTitleColorChanged(oldValue: Color, newValue: Color): void;
    static enableSelectionProperty: Property<RadLegendView, boolean>;
    private onEnableSelectionChanged;
    static positionProperty: Property<RadLegendView, ChartLegendPosition>;
    private onPositionPropertyChanged;
    protected onPositionChanged(oldValue: ChartLegendPosition, newValue: ChartLegendPosition): void;
    static offsetOriginProperty: Property<RadLegendView, ChartLegendOffsetOrigin>;
    private onOffsetOriginPropertyChanged;
    protected onOffsetOriginChanged(oldValue: ChartLegendOffsetOrigin, newValue: ChartLegendOffsetOrigin): void;
    static horizontalOffsetProperty: Property<RadLegendView, number>;
    private onHorizontalOffsetPropertyChanged;
    protected onHorizontalOffsetChanged(oldValue: number, newValue: number): void;
    static verticalOffsetProperty: Property<RadLegendView, number>;
    private onVerticalOffsetPropertyChanged;
    protected onVerticalOffsetChanged(oldValue: number, newValue: number): void;
    static titleProperty: Property<RadLegendView, string>;
    private onTitlePropertyChanged;
    protected onTitleChanged(oldValue: string, newValue: string): void;
    updateLegendView(chartView: RadChartBase): void;
}
