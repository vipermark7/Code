'use strict';

var _index = require('./index');

var _index2 = _interopRequireDefault(_index);

var _tape = require('tape');

var _tape2 = _interopRequireDefault(_tape);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _tape2.default)('nested', t => {
	t.deepLooseEqual({
		'SOME_DB.CONN': {
			DESCRIPTION: {
				PROP1: '1',
				PROP2: '2',
				OBJ: { PROP3: '3' }
			}
		},
		OTHER: { SHALLOW: 'true' }
	}, (0, _index2.default)(`
		SOME_DB.CONN = (DESCRIPTION =
			(PROP1 = 1)
			(PROP2 = 2)
			(OBJ = (PROP3 = 3)))
		OTHER = (SHALLOW = true)
	`));
	t.end();
});

(0, _tape2.default)('WORDs (dashes)', t => {
	t.deepLooseEqual({
		ABCD: {
			DESCRIPTION: {
				ADDRESS_LIST: {
					ADDRESS: {
						PROTOCOL: 'TCP',
						HOST: 'rac-scan.dbs.myorg.com',
						PORT: '1521'
					}
				},
				CONNECT_DATA: { SERVICE_NAME: 'ABCD' }
			}
		}
	}, (0, _index2.default)('ABCD=(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=rac-scan.dbs.myorg.com)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=ABCD)))'));
	t.end();
});

(0, _tape2.default)('toString', t => {
	t.equal('ABC=(X=Y)', (0, _index2.default)('ABC = (X = Y)').toString());
	t.equal('ABC=(X=Y)\nDEF=(U=V)', (0, _index2.default)('ABC = (X = Y) DEF = (U = V)').toString());
	t.end();
});