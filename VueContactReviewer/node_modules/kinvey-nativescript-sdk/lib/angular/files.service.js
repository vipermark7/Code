Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var nativescript_1 = require("../nativescript");
var utils_1 = require("./utils");
var i0 = __importStar(require("@angular/core"));
var i1 = __importStar(require("./utils"));
var FilesService = /** @class */ (function () {
    function FilesService(config) {
        nativescript_1.init(config);
    }
    FilesService.prototype.create = function (file, metadata, options) {
        return nativescript_1.Files.create(file, metadata, options);
    };
    FilesService.prototype.download = function (id, options) {
        return nativescript_1.Files.download(id, options);
    };
    FilesService.prototype.downloadByUrl = function (url, options) {
        return nativescript_1.Files.downloadByUrl(url, options);
    };
    FilesService.prototype.find = function (query, options) {
        return nativescript_1.Files.find(query, options);
    };
    FilesService.prototype.findById = function (id, options) {
        return nativescript_1.Files.findById(id, options);
    };
    FilesService.prototype.remove = function () {
        return nativescript_1.Files.remove();
    };
    FilesService.prototype.removeById = function (id, options) {
        return nativescript_1.Files.removeById(id, options);
    };
    FilesService.prototype.stream = function (id, options) {
        return nativescript_1.Files.stream(id, options);
    };
    FilesService.prototype.update = function (file, metadata, options) {
        return nativescript_1.Files.update(file, metadata, options);
    };
    FilesService.prototype.upload = function (file, metadata, options) {
        return nativescript_1.Files.upload(file, metadata, options);
    };
    FilesService.ngInjectableDef = i0.defineInjectable({ factory: function FilesService_Factory() { return new FilesService(i0.inject(i1.KinveyConfigToken)); }, token: FilesService, providedIn: "root" });
    FilesService = __decorate([
        core_1.Injectable({
            providedIn: 'root'
        }),
        __param(0, core_1.Inject(utils_1.KinveyConfigToken)),
        __metadata("design:paramtypes", [Object])
    ], FilesService);
    return FilesService;
}());
exports.FilesService = FilesService;
//# sourceMappingURL=files.service.js.map