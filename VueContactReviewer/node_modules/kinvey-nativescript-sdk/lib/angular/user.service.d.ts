import { User, Query } from '../nativescript';
export declare class UserService {
    constructor(config: any);
    exists(username: string, options?: any): Promise<boolean>;
    forgotUsername(email: string, options?: any): Promise<any>;
    login(username: string | {
        username?: string;
        password?: string;
        _socialIdentity?: any;
    }, password?: string, options?: any): Promise<User>;
    loginWithRedirectUri(redirectUri: string, options?: any): Promise<User>;
    loginWithMICUsingResourceOwnerCredentials(username: string, password: string, options?: any): Promise<User>;
    loginWithMIC(redirectUri: string, authorizationGrant: any, options?: any): Promise<User>;
    logout(options?: any): Promise<User>;
    lookup(query?: Query, options?: any): any;
    me(options?: {
        timeout?: number;
    }): Promise<User>;
    remove(id: string, options?: {
        timeout?: number;
        hard?: boolean;
    }): Promise<any>;
    resetPassword(username: string, options?: {
        timeout?: number;
    }): Promise<any>;
    restore(): Promise<void>;
    signup(data: object | User, options?: {
        timeout?: number;
        state?: boolean;
    }): Promise<User>;
    signUpWithIdentity(): Promise<void>;
    update(data: any, options?: {
        timeout?: number;
    }): Promise<User>;
    getActiveUser(): User;
    verifyEmail(username: string, options?: any): Promise<any>;
    registerForLiveService(options?: {
        timeout?: number;
    }): Promise<boolean>;
    unregisterFromLiveService(options?: {
        timeout?: number;
    }): Promise<boolean>;
}
