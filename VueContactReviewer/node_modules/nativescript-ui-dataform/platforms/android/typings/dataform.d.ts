declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export class BuildConfig extends java.lang.Object {
					public static class: java.lang.Class<com.telerik.widget.dataform.BuildConfig>;
					public static DEBUG: boolean;
					public static APPLICATION_ID: string;
					public static BUILD_TYPE: string;
					public static FLAVOR: string;
					public static VERSION_CODE: number;
					public static VERSION_NAME: string;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class DataFormMetadata extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.DataFormMetadata>;
						public putMetadataForProperty(param0: string, param1: com.telerik.widget.dataform.engine.EntityPropertyMetadata): void;
						public constructor();
						public setIsReadOnly(param0: boolean): void;
						public setValidationMode(param0: com.telerik.widget.dataform.visualization.core.ValidationMode): void;
						public getMetadataForProperty(param0: string): com.telerik.widget.dataform.engine.EntityPropertyMetadata;
						public constructor(param0: org.json.JSONObject);
						public isReadOnly(): boolean;
						public getCommitMode(): com.telerik.widget.dataform.visualization.core.CommitMode;
						public setCommitMode(param0: com.telerik.widget.dataform.visualization.core.CommitMode): void;
						public getValidationMode(): com.telerik.widget.dataform.visualization.core.ValidationMode;
						public constructor(param0: org.json.JSONArray);
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class EditorSetupListener extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.EditorSetupListener>;
						/**
						 * Constructs a new instance of the com.telerik.widget.dataform.engine.EditorSetupListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onEditorSetupStarted(param0: com.telerik.widget.dataform.visualization.core.EntityPropertyViewer): void;
							onEditorSetupFinished(param0: com.telerik.widget.dataform.visualization.core.EntityPropertyViewer): void;
						});
						public constructor();
						public onEditorSetupStarted(param0: com.telerik.widget.dataform.visualization.core.EntityPropertyViewer): void;
						public onEditorSetupFinished(param0: com.telerik.widget.dataform.visualization.core.EntityPropertyViewer): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class EmptyConverter extends java.lang.Object implements com.telerik.widget.dataform.engine.PropertyConverter {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.EmptyConverter>;
						public constructor();
						public convertTo(param0: any): any;
						public convertFrom(param0: any): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class EmptyValidator extends com.telerik.widget.dataform.engine.PropertyValidatorBase {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.EmptyValidator>;
						public getPositiveMessage(): string;
						public constructor();
						public setNegativeMessage(param0: string): void;
						public validate(param0: any, param1: string, param2: com.telerik.widget.dataform.engine.ValidationCompletedListener): void;
						public validateCore(param0: any, param1: string): boolean;
						public setPositiveMessage(param0: string): void;
						public getNegativeMessage(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class Entity extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.Entity>;
						/**
						 * Constructs a new instance of the com.telerik.widget.dataform.engine.Entity interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setProperty(param0: com.telerik.widget.dataform.engine.EntityProperty, param1: any): void;
							getProperty(param0: com.telerik.widget.dataform.engine.EntityProperty): any;
							properties(): java.lang.Iterable<com.telerik.widget.dataform.engine.EntityProperty>;
							getSourceObject(): any;
							addCommitListener(param0: com.telerik.widget.dataform.engine.EntityPropertyCommitListener): void;
							removeCommitListener(param0: com.telerik.widget.dataform.engine.EntityPropertyCommitListener): void;
							addValidationListener(param0: com.telerik.widget.dataform.engine.EntityPropertyValidationListener): void;
							removeValidationListener(param0: com.telerik.widget.dataform.engine.EntityPropertyValidationListener): void;
							notifyCommitListenersBefore(param0: com.telerik.widget.dataform.engine.EntityProperty): boolean;
							notifyCommitListenersAfter(param0: com.telerik.widget.dataform.engine.EntityProperty): void;
							notifyValidate(param0: com.telerik.widget.dataform.engine.EntityProperty): void;
							notifyDidValidate(param0: com.telerik.widget.dataform.engine.EntityProperty): void;
						});
						public constructor();
						public removeCommitListener(param0: com.telerik.widget.dataform.engine.EntityPropertyCommitListener): void;
						public getProperty(param0: com.telerik.widget.dataform.engine.EntityProperty): any;
						public addValidationListener(param0: com.telerik.widget.dataform.engine.EntityPropertyValidationListener): void;
						public addCommitListener(param0: com.telerik.widget.dataform.engine.EntityPropertyCommitListener): void;
						public notifyDidValidate(param0: com.telerik.widget.dataform.engine.EntityProperty): void;
						public properties(): java.lang.Iterable<com.telerik.widget.dataform.engine.EntityProperty>;
						public notifyCommitListenersAfter(param0: com.telerik.widget.dataform.engine.EntityProperty): void;
						public removeValidationListener(param0: com.telerik.widget.dataform.engine.EntityPropertyValidationListener): void;
						public setProperty(param0: com.telerik.widget.dataform.engine.EntityProperty, param1: any): void;
						public getSourceObject(): any;
						public notifyCommitListenersBefore(param0: com.telerik.widget.dataform.engine.EntityProperty): boolean;
						public notifyValidate(param0: com.telerik.widget.dataform.engine.EntityProperty): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class EntityBase extends com.telerik.widget.dataform.engine.EntityCore {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.EntityBase>;
						public sourceObject: any;
						public reflectionCache: java.util.HashMap<string,java.lang.reflect.Method>;
						public constructor();
						public addValidationListener(param0: com.telerik.widget.dataform.engine.EntityPropertyValidationListener): void;
						public addCommitListener(param0: com.telerik.widget.dataform.engine.EntityPropertyCommitListener): void;
						public properties(): java.lang.Iterable<com.telerik.widget.dataform.engine.EntityProperty>;
						public resolveCoreProperties(param0: java.lang.Class<any>): java.util.LinkedHashMap<string,java.lang.Class<any>>;
						public notifyCommitListenersAfter(param0: com.telerik.widget.dataform.engine.EntityProperty): void;
						public constructor(param0: any);
						public getSourceObject(): any;
						public notifyCommitListenersBefore(param0: com.telerik.widget.dataform.engine.EntityProperty): boolean;
						public notifyValidate(param0: com.telerik.widget.dataform.engine.EntityProperty): void;
						public initializePropertyMap(): void;
						public removeCommitListener(param0: com.telerik.widget.dataform.engine.EntityPropertyCommitListener): void;
						public getProperty(param0: com.telerik.widget.dataform.engine.EntityProperty): any;
						public notifyDidValidate(param0: com.telerik.widget.dataform.engine.EntityProperty): void;
						public removeValidationListener(param0: com.telerik.widget.dataform.engine.EntityPropertyValidationListener): void;
						public setProperty(param0: com.telerik.widget.dataform.engine.EntityProperty, param1: any): void;
						public createProperty(param0: string, param1: any): com.telerik.widget.dataform.engine.EntityProperty;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export abstract class EntityCore extends java.lang.Object implements com.telerik.widget.dataform.engine.Entity {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.EntityCore>;
						public constructor();
						public addValidationListener(param0: com.telerik.widget.dataform.engine.EntityPropertyValidationListener): void;
						public addCommitListener(param0: com.telerik.widget.dataform.engine.EntityPropertyCommitListener): void;
						public notifyCommitListenersAfter(param0: com.telerik.widget.dataform.engine.EntityProperty): void;
						public properties(): java.lang.Iterable<com.telerik.widget.dataform.engine.EntityProperty>;
						public getSourceObject(): any;
						public notifyCommitListenersBefore(param0: com.telerik.widget.dataform.engine.EntityProperty): boolean;
						public notifyValidate(param0: com.telerik.widget.dataform.engine.EntityProperty): void;
						public removeCommitListener(param0: com.telerik.widget.dataform.engine.EntityPropertyCommitListener): void;
						public getProperty(param0: com.telerik.widget.dataform.engine.EntityProperty): any;
						public notifyDidValidate(param0: com.telerik.widget.dataform.engine.EntityProperty): void;
						public removeValidationListener(param0: com.telerik.widget.dataform.engine.EntityPropertyValidationListener): void;
						public setProperty(param0: com.telerik.widget.dataform.engine.EntityProperty, param1: any): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class EntityProperties extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.EntityProperties>;
						public setPropertyMode(param0: com.telerik.widget.dataform.engine.EntityProperties.PropertyResolutionMode): void;
						public constructor();
						public getPropertyMode(): com.telerik.widget.dataform.engine.EntityProperties.PropertyResolutionMode;
					}
					export module EntityProperties {
						export class PropertyResolutionMode {
							public static class: java.lang.Class<com.telerik.widget.dataform.engine.EntityProperties.PropertyResolutionMode>;
							public static All: com.telerik.widget.dataform.engine.EntityProperties.PropertyResolutionMode;
							public static Getters: com.telerik.widget.dataform.engine.EntityProperties.PropertyResolutionMode;
							public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
							public static values(): native.Array<com.telerik.widget.dataform.engine.EntityProperties.PropertyResolutionMode>;
							public static valueOf(param0: string): com.telerik.widget.dataform.engine.EntityProperties.PropertyResolutionMode;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class EntityProperty extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.EntityProperty>;
						/**
						 * Constructs a new instance of the com.telerik.widget.dataform.engine.EntityProperty interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setCustomMetadata(param0: any): void;
							getCustomMetadata(): any;
							setReadOnly(param0: boolean): void;
							getReadOnly(): boolean;
							getEditorLayoutId(): number;
							setEditorLayoutId(param0: number): void;
							getCoreEditorLayoutId(): number;
							setCoreEditorLayoutId(param0: number): void;
							getHeaderLayoutId(): number;
							setHeaderLayoutId(param0: number): void;
							getValidationLayoutId(): number;
							setValidationLayoutId(param0: number): void;
							getEnumConstants(): native.Array<any>;
							isTypePrimitive(): boolean;
							readMetadata(param0: com.telerik.widget.dataform.engine.EntityPropertyMetadata): void;
							getViewerType(): java.lang.Class<any>;
							setViewerType(param0: java.lang.Class<com.telerik.widget.dataform.visualization.core.EntityPropertyViewer>): void;
							getEditorType(): java.lang.Class<any>;
							setEditorType(param0: java.lang.Class<com.telerik.widget.dataform.visualization.core.EntityPropertyEditor>): void;
							getEditorParams(): java.util.HashMap<string,any>;
							setEditorParams(param0: java.util.HashMap<string,any>): void;
							getSkip(): boolean;
							setSkip(param0: boolean): void;
							setColumnPosition(param0: number): void;
							getColumnPosition(): number;
							getColumnSpan(): number;
							setColumnSpan(param0: number): void;
							getPosition(): number;
							setPosition(param0: number): void;
							getHeader(): string;
							setHeader(param0: string): void;
							getImageResource(): number;
							setImageResource(param0: number): void;
							getGroupName(): string;
							setGroupName(param0: string): void;
							getHintText(): string;
							setHintText(param0: string): void;
							getRequired(): boolean;
							setRequired(param0: boolean): void;
							addOnChangedListener(param0: com.telerik.widget.dataform.engine.EntityPropertyChangedListener): void;
							removeOnChangedListener(param0: com.telerik.widget.dataform.engine.EntityPropertyChangedListener): void;
							addValidationCompletedListener(param0: com.telerik.widget.dataform.engine.ValidationCompletedListener): void;
							removeValidationCompletedListener(param0: com.telerik.widget.dataform.engine.ValidationCompletedListener): void;
							addCommitListener(param0: com.telerik.widget.dataform.engine.EntityPropertyCommitListener): void;
							removeCommitListener(param0: com.telerik.widget.dataform.engine.EntityPropertyCommitListener): void;
							type(): java.lang.Class<any>;
							name(): string;
							getValueCandidate(): any;
							setValueCandidate(param0: any): void;
							getOwner(): com.telerik.widget.dataform.engine.Entity;
							getValue(): any;
							commit(): void;
							tryCommit(param0: any): void;
							setConverter(param0: com.telerik.widget.dataform.engine.PropertyConverter): void;
							getConverter(): com.telerik.widget.dataform.engine.PropertyConverter;
							setValidator(param0: com.telerik.widget.dataform.engine.PropertyValidator): void;
							getValidator(): com.telerik.widget.dataform.engine.PropertyValidator;
							validate(param0: any): void;
							isValid(): boolean;
							updateValues(param0: native.Array<any>): void;
						});
						public constructor();
						public setEditorLayoutId(param0: number): void;
						public addCommitListener(param0: com.telerik.widget.dataform.engine.EntityPropertyCommitListener): void;
						public setEditorType(param0: java.lang.Class<com.telerik.widget.dataform.visualization.core.EntityPropertyEditor>): void;
						public getValueCandidate(): any;
						public getRequired(): boolean;
						public setViewerType(param0: java.lang.Class<com.telerik.widget.dataform.visualization.core.EntityPropertyViewer>): void;
						public getCoreEditorLayoutId(): number;
						public tryCommit(param0: any): void;
						public setEditorParams(param0: java.util.HashMap<string,any>): void;
						public setSkip(param0: boolean): void;
						public getValidator(): com.telerik.widget.dataform.engine.PropertyValidator;
						public addOnChangedListener(param0: com.telerik.widget.dataform.engine.EntityPropertyChangedListener): void;
						public getReadOnly(): boolean;
						public getPosition(): number;
						public setGroupName(param0: string): void;
						public getEnumConstants(): native.Array<any>;
						public updateValues(param0: native.Array<any>): void;
						public validate(param0: any): void;
						public addValidationCompletedListener(param0: com.telerik.widget.dataform.engine.ValidationCompletedListener): void;
						public setValidator(param0: com.telerik.widget.dataform.engine.PropertyValidator): void;
						public getHeader(): string;
						public isTypePrimitive(): boolean;
						public setPosition(param0: number): void;
						public setHeader(param0: string): void;
						public removeValidationCompletedListener(param0: com.telerik.widget.dataform.engine.ValidationCompletedListener): void;
						public getImageResource(): number;
						public readMetadata(param0: com.telerik.widget.dataform.engine.EntityPropertyMetadata): void;
						public getEditorLayoutId(): number;
						public name(): string;
						public getValue(): any;
						public getGroupName(): string;
						public setValidationLayoutId(param0: number): void;
						public setCoreEditorLayoutId(param0: number): void;
						public setImageResource(param0: number): void;
						public getConverter(): com.telerik.widget.dataform.engine.PropertyConverter;
						public setReadOnly(param0: boolean): void;
						public getValidationLayoutId(): number;
						public setCustomMetadata(param0: any): void;
						public getColumnSpan(): number;
						public setColumnPosition(param0: number): void;
						public getEditorType(): java.lang.Class<any>;
						public getColumnPosition(): number;
						public commit(): void;
						public setRequired(param0: boolean): void;
						public setColumnSpan(param0: number): void;
						public setConverter(param0: com.telerik.widget.dataform.engine.PropertyConverter): void;
						public setHeaderLayoutId(param0: number): void;
						public isValid(): boolean;
						public removeCommitListener(param0: com.telerik.widget.dataform.engine.EntityPropertyCommitListener): void;
						public getCustomMetadata(): any;
						public getHeaderLayoutId(): number;
						public getEditorParams(): java.util.HashMap<string,any>;
						public setValueCandidate(param0: any): void;
						public setHintText(param0: string): void;
						public getSkip(): boolean;
						public getViewerType(): java.lang.Class<any>;
						public type(): java.lang.Class<any>;
						public getOwner(): com.telerik.widget.dataform.engine.Entity;
						public getHintText(): string;
						public removeOnChangedListener(param0: com.telerik.widget.dataform.engine.EntityPropertyChangedListener): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class EntityPropertyBase extends com.telerik.widget.dataform.engine.EntityPropertyCore {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.EntityPropertyBase>;
						public readMetadata(param0: string, param1: com.telerik.widget.dataform.engine.Entity): void;
						public setEditorLayoutId(param0: number): void;
						public addCommitListener(param0: com.telerik.widget.dataform.engine.EntityPropertyCommitListener): void;
						public setEditorType(param0: java.lang.Class<com.telerik.widget.dataform.visualization.core.EntityPropertyEditor>): void;
						public getValueCandidate(): any;
						public getRequired(): boolean;
						public setViewerType(param0: java.lang.Class<com.telerik.widget.dataform.visualization.core.EntityPropertyViewer>): void;
						public getCoreEditorLayoutId(): number;
						public tryCommit(param0: any): void;
						public setEditorParams(param0: java.util.HashMap<string,any>): void;
						public setSkip(param0: boolean): void;
						public getValidator(): com.telerik.widget.dataform.engine.PropertyValidator;
						public addOnChangedListener(param0: com.telerik.widget.dataform.engine.EntityPropertyChangedListener): void;
						public getReadOnly(): boolean;
						public getPosition(): number;
						public setGroupName(param0: string): void;
						public getEnumConstants(): native.Array<any>;
						public updateValues(param0: native.Array<any>): void;
						public validate(param0: any): void;
						public addValidationCompletedListener(param0: com.telerik.widget.dataform.engine.ValidationCompletedListener): void;
						public setValidator(param0: com.telerik.widget.dataform.engine.PropertyValidator): void;
						public findMethod(param0: string, param1: string, param2: java.lang.Class<any>): java.lang.reflect.Method;
						public getHeader(): string;
						public isTypePrimitive(): boolean;
						public setPosition(param0: number): void;
						public setHeader(param0: string): void;
						public constructor(param0: string, param1: java.lang.Class<any>, param2: com.telerik.widget.dataform.engine.Entity);
						public removeValidationCompletedListener(param0: com.telerik.widget.dataform.engine.ValidationCompletedListener): void;
						public getImageResource(): number;
						public readMetadata(param0: com.telerik.widget.dataform.engine.EntityPropertyMetadata): void;
						public getEditorLayoutId(): number;
						public name(): string;
						public getValue(): any;
						public getGroupName(): string;
						public setValidationLayoutId(param0: number): void;
						public onPropertyChanged(param0: string, param1: any): void;
						public setCoreEditorLayoutId(param0: number): void;
						public setImageResource(param0: number): void;
						public getConverter(): com.telerik.widget.dataform.engine.PropertyConverter;
						public setReadOnly(param0: boolean): void;
						public getValidationLayoutId(): number;
						public setCustomMetadata(param0: any): void;
						public getColumnSpan(): number;
						public findMetadata(param0: java.lang.reflect.Method): com.telerik.widget.dataform.visualization.annotations.DataFormProperty;
						public setColumnPosition(param0: number): void;
						public getEditorType(): java.lang.Class<any>;
						public getColumnPosition(): number;
						public commit(): void;
						public setRequired(param0: boolean): void;
						public setColumnSpan(param0: number): void;
						public setConverter(param0: com.telerik.widget.dataform.engine.PropertyConverter): void;
						public setHeaderLayoutId(param0: number): void;
						public isValid(): boolean;
						public removeCommitListener(param0: com.telerik.widget.dataform.engine.EntityPropertyCommitListener): void;
						public getCustomMetadata(): any;
						public getHeaderLayoutId(): number;
						public getEditorParams(): java.util.HashMap<string,any>;
						public setValueCandidate(param0: any): void;
						public setHintText(param0: string): void;
						public getSkip(): boolean;
						public getViewerType(): java.lang.Class<any>;
						public type(): java.lang.Class<any>;
						public getOwner(): com.telerik.widget.dataform.engine.Entity;
						public getHintText(): string;
						public removeOnChangedListener(param0: com.telerik.widget.dataform.engine.EntityPropertyChangedListener): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class EntityPropertyChangedListener extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.EntityPropertyChangedListener>;
						/**
						 * Constructs a new instance of the com.telerik.widget.dataform.engine.EntityPropertyChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onChanged(param0: com.telerik.widget.dataform.engine.EntityProperty): void;
						});
						public constructor();
						public onChanged(param0: com.telerik.widget.dataform.engine.EntityProperty): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class EntityPropertyCommitListener extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.EntityPropertyCommitListener>;
						/**
						 * Constructs a new instance of the com.telerik.widget.dataform.engine.EntityPropertyCommitListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onBeforeCommit(param0: com.telerik.widget.dataform.engine.EntityProperty): boolean;
							onAfterCommit(param0: com.telerik.widget.dataform.engine.EntityProperty): void;
						});
						public constructor();
						public onBeforeCommit(param0: com.telerik.widget.dataform.engine.EntityProperty): boolean;
						public onAfterCommit(param0: com.telerik.widget.dataform.engine.EntityProperty): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export abstract class EntityPropertyCore extends java.lang.Object implements com.telerik.widget.dataform.engine.EntityProperty, com.telerik.widget.dataform.engine.PropertyChangedListener {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.EntityPropertyCore>;
						public readMetadata(param0: string, param1: com.telerik.widget.dataform.engine.Entity): void;
						public setEditorLayoutId(param0: number): void;
						public addCommitListener(param0: com.telerik.widget.dataform.engine.EntityPropertyCommitListener): void;
						public setEditorType(param0: java.lang.Class<com.telerik.widget.dataform.visualization.core.EntityPropertyEditor>): void;
						public getValueCandidate(): any;
						public getRequired(): boolean;
						public setViewerType(param0: java.lang.Class<com.telerik.widget.dataform.visualization.core.EntityPropertyViewer>): void;
						public getCoreEditorLayoutId(): number;
						public notifyValidate(): void;
						public tryCommit(param0: any): void;
						public setEditorParams(param0: java.util.HashMap<string,any>): void;
						public setSkip(param0: boolean): void;
						public notifyCommitListenersAfter(): void;
						public getValidator(): com.telerik.widget.dataform.engine.PropertyValidator;
						public addOnChangedListener(param0: com.telerik.widget.dataform.engine.EntityPropertyChangedListener): void;
						public getReadOnly(): boolean;
						public getPosition(): number;
						public setGroupName(param0: string): void;
						public getEnumConstants(): native.Array<any>;
						public updateValues(param0: native.Array<any>): void;
						public validate(param0: any): void;
						public addValidationCompletedListener(param0: com.telerik.widget.dataform.engine.ValidationCompletedListener): void;
						public setValidator(param0: com.telerik.widget.dataform.engine.PropertyValidator): void;
						public findMethod(param0: string, param1: string, param2: java.lang.Class<any>): java.lang.reflect.Method;
						public getHeader(): string;
						public isTypePrimitive(): boolean;
						public notifyCommitListenersBefore(): boolean;
						public setPosition(param0: number): void;
						public setHeader(param0: string): void;
						public constructor(param0: string, param1: java.lang.Class<any>, param2: com.telerik.widget.dataform.engine.Entity);
						public removeValidationCompletedListener(param0: com.telerik.widget.dataform.engine.ValidationCompletedListener): void;
						public getImageResource(): number;
						public readMetadata(param0: com.telerik.widget.dataform.engine.EntityPropertyMetadata): void;
						public getEditorLayoutId(): number;
						public name(): string;
						public getValue(): any;
						public notifyDidValidate(): void;
						public getGroupName(): string;
						public setValidationLayoutId(param0: number): void;
						public setCoreEditorLayoutId(param0: number): void;
						public onPropertyChanged(param0: string, param1: any): void;
						public setImageResource(param0: number): void;
						public getConverter(): com.telerik.widget.dataform.engine.PropertyConverter;
						public setReadOnly(param0: boolean): void;
						public getValidationLayoutId(): number;
						public setCustomMetadata(param0: any): void;
						public getColumnSpan(): number;
						public findMetadata(param0: java.lang.reflect.Method): com.telerik.widget.dataform.visualization.annotations.DataFormProperty;
						public setColumnPosition(param0: number): void;
						public onValidationStarted(): void;
						public getEditorType(): java.lang.Class<any>;
						public getColumnPosition(): number;
						public commit(): void;
						public setRequired(param0: boolean): void;
						public setColumnSpan(param0: number): void;
						public setConverter(param0: com.telerik.widget.dataform.engine.PropertyConverter): void;
						public setHeaderLayoutId(param0: number): void;
						public isValid(): boolean;
						public removeCommitListener(param0: com.telerik.widget.dataform.engine.EntityPropertyCommitListener): void;
						public onValidationResult(param0: any, param1: boolean, param2: string): void;
						public notifyValidationListeners(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
						public getCustomMetadata(): any;
						public getHeaderLayoutId(): number;
						public getEditorParams(): java.util.HashMap<string,any>;
						public setValueCandidate(param0: any): void;
						public setHintText(param0: string): void;
						public getSkip(): boolean;
						public notifyChangedListeners(): void;
						public headerFormat(param0: string): string;
						public getViewerType(): java.lang.Class<any>;
						public type(): java.lang.Class<any>;
						public getOwner(): com.telerik.widget.dataform.engine.Entity;
						public getHintText(): string;
						public removeOnChangedListener(param0: com.telerik.widget.dataform.engine.EntityPropertyChangedListener): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class EntityPropertyEditorChangeListener extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.EntityPropertyEditorChangeListener>;
						/**
						 * Constructs a new instance of the com.telerik.widget.dataform.engine.EntityPropertyEditorChangeListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onEditorChanged(param0: com.telerik.widget.dataform.visualization.core.EntityPropertyEditor): void;
						});
						public constructor();
						public onEditorChanged(param0: com.telerik.widget.dataform.visualization.core.EntityPropertyEditor): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class EntityPropertyEditorDependency extends java.lang.Object implements com.telerik.widget.dataform.engine.EntityPropertyEditorChangeListener {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.EntityPropertyEditorDependency>;
						public unload(): void;
						public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: string, param2: com.telerik.android.common.Procedure2<com.telerik.widget.dataform.visualization.RadDataForm,com.telerik.widget.dataform.visualization.core.EntityPropertyEditor>, param3: native.Array<string>);
						public onEditorChanged(param0: com.telerik.widget.dataform.visualization.core.EntityPropertyEditor): void;
						public load(): void;
						public update(): void;
						public editorName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class EntityPropertyMetadata extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.EntityPropertyMetadata>;
						public constructor(param0: com.telerik.widget.dataform.visualization.annotations.DataFormProperty);
						public setEditorLayoutId(param0: number): void;
						public getImageResource(): number;
						public getEditorLayoutId(): number;
						public setEditorType(param0: java.lang.Class<any>): void;
						public getRequired(): boolean;
						public getGroupName(): string;
						public setValidationLayoutId(param0: number): void;
						public setCoreEditorLayoutId(param0: number): void;
						public getCoreEditorLayoutId(): number;
						public setImageResource(param0: number): void;
						public getConverter(): com.telerik.widget.dataform.engine.PropertyConverter;
						public setReadOnly(param0: boolean): void;
						public setViewerType(param0: java.lang.Class<any>): void;
						public getValidationLayoutId(): number;
						public setCustomMetadata(param0: any): void;
						public setEditorParams(param0: java.util.HashMap<string,any>): void;
						public getColumnSpan(): number;
						public setValidatorParams(param0: java.util.HashMap<string,any>): void;
						public setSkip(param0: boolean): void;
						public setValues(param0: java.util.ArrayList<any>): void;
						public setColumnPosition(param0: number): void;
						public getValidator(): com.telerik.widget.dataform.engine.PropertyValidator;
						public constructor();
						public getEditorType(): java.lang.Class<any>;
						public getColumnPosition(): number;
						public getReadOnly(): boolean;
						public getPosition(): number;
						public setGroupName(param0: string): void;
						public getValues(): java.util.ArrayList<any>;
						public setRequired(param0: boolean): void;
						public getValidatorParams(): java.util.HashMap<string,any>;
						public setColumnSpan(param0: number): void;
						public setConverter(param0: com.telerik.widget.dataform.engine.PropertyConverter): void;
						public setHeaderLayoutId(param0: number): void;
						public setValidator(param0: com.telerik.widget.dataform.engine.PropertyValidator): void;
						public getCustomMetadata(): any;
						public getHeaderLayoutId(): number;
						public getEditorParams(): java.util.HashMap<string,any>;
						public getHeader(): string;
						public setHintText(param0: string): void;
						public getSkip(): boolean;
						public setPosition(param0: number): void;
						public getViewerType(): java.lang.Class<any>;
						public setHeader(param0: string): void;
						public getHintText(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class EntityPropertyValidationListener extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.EntityPropertyValidationListener>;
						/**
						 * Constructs a new instance of the com.telerik.widget.dataform.engine.EntityPropertyValidationListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onValidate(param0: com.telerik.widget.dataform.engine.EntityProperty): void;
							onDidValidate(param0: com.telerik.widget.dataform.engine.EntityProperty): void;
						});
						public constructor();
						public onDidValidate(param0: com.telerik.widget.dataform.engine.EntityProperty): void;
						public onValidate(param0: com.telerik.widget.dataform.engine.EntityProperty): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class IsTrueValidator extends com.telerik.widget.dataform.engine.PropertyValidatorBase {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.IsTrueValidator>;
						public getPositiveMessage(): string;
						public constructor();
						public setNegativeMessage(param0: string): void;
						public validate(param0: any, param1: string, param2: com.telerik.widget.dataform.engine.ValidationCompletedListener): void;
						public validateCore(param0: any, param1: string): boolean;
						public setPositiveMessage(param0: string): void;
						public getNegativeMessage(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class JsonEntity extends com.telerik.widget.dataform.engine.EntityCore {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.JsonEntity>;
						public constructor();
						public addValidationListener(param0: com.telerik.widget.dataform.engine.EntityPropertyValidationListener): void;
						public addCommitListener(param0: com.telerik.widget.dataform.engine.EntityPropertyCommitListener): void;
						public properties(): java.lang.Iterable<com.telerik.widget.dataform.engine.EntityProperty>;
						public notifyCommitListenersAfter(param0: com.telerik.widget.dataform.engine.EntityProperty): void;
						public constructor(param0: org.json.JSONObject);
						public getSourceObject(): any;
						public notifyCommitListenersBefore(param0: com.telerik.widget.dataform.engine.EntityProperty): boolean;
						public notifyValidate(param0: com.telerik.widget.dataform.engine.EntityProperty): void;
						public removeCommitListener(param0: com.telerik.widget.dataform.engine.EntityPropertyCommitListener): void;
						public getProperty(param0: com.telerik.widget.dataform.engine.EntityProperty): any;
						public notifyDidValidate(param0: com.telerik.widget.dataform.engine.EntityProperty): void;
						public removeValidationListener(param0: com.telerik.widget.dataform.engine.EntityPropertyValidationListener): void;
						public setProperty(param0: com.telerik.widget.dataform.engine.EntityProperty, param1: any): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class JsonEntityProperty extends com.telerik.widget.dataform.engine.EntityPropertyCore {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.JsonEntityProperty>;
						public setEditorLayoutId(param0: number): void;
						public readMetadata(param0: string, param1: com.telerik.widget.dataform.engine.Entity): void;
						public addCommitListener(param0: com.telerik.widget.dataform.engine.EntityPropertyCommitListener): void;
						public setEditorType(param0: java.lang.Class<com.telerik.widget.dataform.visualization.core.EntityPropertyEditor>): void;
						public getValueCandidate(): any;
						public getRequired(): boolean;
						public setViewerType(param0: java.lang.Class<com.telerik.widget.dataform.visualization.core.EntityPropertyViewer>): void;
						public getCoreEditorLayoutId(): number;
						public tryCommit(param0: any): void;
						public setEditorParams(param0: java.util.HashMap<string,any>): void;
						public setSkip(param0: boolean): void;
						public getValidator(): com.telerik.widget.dataform.engine.PropertyValidator;
						public addOnChangedListener(param0: com.telerik.widget.dataform.engine.EntityPropertyChangedListener): void;
						public getReadOnly(): boolean;
						public getPosition(): number;
						public setGroupName(param0: string): void;
						public getEnumConstants(): native.Array<any>;
						public updateValues(param0: native.Array<any>): void;
						public validate(param0: any): void;
						public addValidationCompletedListener(param0: com.telerik.widget.dataform.engine.ValidationCompletedListener): void;
						public setValidator(param0: com.telerik.widget.dataform.engine.PropertyValidator): void;
						public getHeader(): string;
						public isTypePrimitive(): boolean;
						public setPosition(param0: number): void;
						public setHeader(param0: string): void;
						public constructor(param0: string, param1: java.lang.Class<any>, param2: com.telerik.widget.dataform.engine.Entity);
						public removeValidationCompletedListener(param0: com.telerik.widget.dataform.engine.ValidationCompletedListener): void;
						public getImageResource(): number;
						public readMetadata(param0: com.telerik.widget.dataform.engine.EntityPropertyMetadata): void;
						public getEditorLayoutId(): number;
						public getValue(): any;
						public name(): string;
						public getGroupName(): string;
						public setValidationLayoutId(param0: number): void;
						public onPropertyChanged(param0: string, param1: any): void;
						public setCoreEditorLayoutId(param0: number): void;
						public setImageResource(param0: number): void;
						public getConverter(): com.telerik.widget.dataform.engine.PropertyConverter;
						public setReadOnly(param0: boolean): void;
						public getValidationLayoutId(): number;
						public setCustomMetadata(param0: any): void;
						public getColumnSpan(): number;
						public setColumnPosition(param0: number): void;
						public getEditorType(): java.lang.Class<any>;
						public getColumnPosition(): number;
						public commit(): void;
						public setRequired(param0: boolean): void;
						public setColumnSpan(param0: number): void;
						public setConverter(param0: com.telerik.widget.dataform.engine.PropertyConverter): void;
						public setHeaderLayoutId(param0: number): void;
						public isValid(): boolean;
						public removeCommitListener(param0: com.telerik.widget.dataform.engine.EntityPropertyCommitListener): void;
						public getCustomMetadata(): any;
						public getHeaderLayoutId(): number;
						public getEditorParams(): java.util.HashMap<string,any>;
						public setValueCandidate(param0: any): void;
						public setHintText(param0: string): void;
						public getSkip(): boolean;
						public headerFormat(param0: string): string;
						public getViewerType(): java.lang.Class<any>;
						public type(): java.lang.Class<any>;
						public getOwner(): com.telerik.widget.dataform.engine.Entity;
						public getHintText(): string;
						public removeOnChangedListener(param0: com.telerik.widget.dataform.engine.EntityPropertyChangedListener): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class LabelPosition {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.LabelPosition>;
						public static TOP: com.telerik.widget.dataform.engine.LabelPosition;
						public static LEFT: com.telerik.widget.dataform.engine.LabelPosition;
						public static valueOf(param0: string): com.telerik.widget.dataform.engine.LabelPosition;
						public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
						public static values(): native.Array<com.telerik.widget.dataform.engine.LabelPosition>;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class MailValidator extends com.telerik.widget.dataform.engine.PropertyValidatorBase {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.MailValidator>;
						public getPositiveMessage(): string;
						public constructor();
						public setNegativeMessage(param0: string): void;
						public validate(param0: any, param1: string, param2: com.telerik.widget.dataform.engine.ValidationCompletedListener): void;
						public validateCore(param0: any, param1: string): boolean;
						public setPositiveMessage(param0: string): void;
						public getNegativeMessage(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class MaximumLengthValidator extends com.telerik.widget.dataform.engine.PropertyValidatorBase {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.MaximumLengthValidator>;
						public getPositiveMessage(): string;
						public constructor();
						public applyParams(param0: java.util.HashMap<string,any>): void;
						public setMaximumLength(param0: number): void;
						public getMaximumLength(): number;
						public setNegativeMessage(param0: string): void;
						public validate(param0: any, param1: string, param2: com.telerik.widget.dataform.engine.ValidationCompletedListener): void;
						public validateCore(param0: any, param1: string): boolean;
						public getNegativeMessage(): string;
						public setPositiveMessage(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class MinimumLengthValidator extends com.telerik.widget.dataform.engine.PropertyValidatorBase {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.MinimumLengthValidator>;
						public getMinimumLength(): number;
						public getPositiveMessage(): string;
						public constructor();
						public setMinimumLength(param0: number): void;
						public applyParams(param0: java.util.HashMap<string,any>): void;
						public setNegativeMessage(param0: string): void;
						public validate(param0: any, param1: string, param2: com.telerik.widget.dataform.engine.ValidationCompletedListener): void;
						public validateCore(param0: any, param1: string): boolean;
						public getNegativeMessage(): string;
						public setPositiveMessage(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class NonEmptyValidator extends com.telerik.widget.dataform.engine.PropertyValidatorBase {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.NonEmptyValidator>;
						public getPositiveMessage(): string;
						public constructor();
						public setNegativeMessage(param0: string): void;
						public validate(param0: any, param1: string, param2: com.telerik.widget.dataform.engine.ValidationCompletedListener): void;
						public validateCore(param0: any, param1: string): boolean;
						public setPositiveMessage(param0: string): void;
						public getNegativeMessage(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class NotifyPropertyChanged extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.NotifyPropertyChanged>;
						/**
						 * Constructs a new instance of the com.telerik.widget.dataform.engine.NotifyPropertyChanged interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							addPropertyChangedListener(param0: com.telerik.widget.dataform.engine.PropertyChangedListener): void;
							removePropertyChangedListener(param0: com.telerik.widget.dataform.engine.PropertyChangedListener): void;
						});
						public constructor();
						public removePropertyChangedListener(param0: com.telerik.widget.dataform.engine.PropertyChangedListener): void;
						public addPropertyChangedListener(param0: com.telerik.widget.dataform.engine.PropertyChangedListener): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class NotifyPropertyChangedBase extends java.lang.Object implements com.telerik.widget.dataform.engine.NotifyPropertyChanged {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.NotifyPropertyChangedBase>;
						public constructor();
						public notifyListeners(param0: string, param1: any): void;
						public removePropertyChangedListener(param0: com.telerik.widget.dataform.engine.PropertyChangedListener): void;
						public addPropertyChangedListener(param0: com.telerik.widget.dataform.engine.PropertyChangedListener): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class PhoneValidator extends com.telerik.widget.dataform.engine.PropertyValidatorBase {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.PhoneValidator>;
						public getPositiveMessage(): string;
						public constructor();
						public setNegativeMessage(param0: string): void;
						public validate(param0: any, param1: string, param2: com.telerik.widget.dataform.engine.ValidationCompletedListener): void;
						public validateCore(param0: any, param1: string): boolean;
						public setPositiveMessage(param0: string): void;
						public getNegativeMessage(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class PropertyChangedListener extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.PropertyChangedListener>;
						/**
						 * Constructs a new instance of the com.telerik.widget.dataform.engine.PropertyChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onPropertyChanged(param0: string, param1: any): void;
						});
						public constructor();
						public onPropertyChanged(param0: string, param1: any): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class PropertyConverter extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.PropertyConverter>;
						/**
						 * Constructs a new instance of the com.telerik.widget.dataform.engine.PropertyConverter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							convertTo(param0: any): any;
							convertFrom(param0: any): any;
						});
						public constructor();
						public convertTo(param0: any): any;
						public convertFrom(param0: any): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class PropertyValidator extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.PropertyValidator>;
						/**
						 * Constructs a new instance of the com.telerik.widget.dataform.engine.PropertyValidator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							validate(param0: any, param1: string, param2: com.telerik.widget.dataform.engine.ValidationCompletedListener): void;
							getPositiveMessage(): string;
							setPositiveMessage(param0: string): void;
							getNegativeMessage(): string;
							setNegativeMessage(param0: string): void;
						});
						public constructor();
						public getPositiveMessage(): string;
						public setNegativeMessage(param0: string): void;
						public validate(param0: any, param1: string, param2: com.telerik.widget.dataform.engine.ValidationCompletedListener): void;
						public setPositiveMessage(param0: string): void;
						public getNegativeMessage(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export abstract class PropertyValidatorBase extends java.lang.Object implements com.telerik.widget.dataform.engine.PropertyValidator {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.PropertyValidatorBase>;
						public getPositiveMessage(): string;
						public constructor();
						public applyParams(param0: java.util.HashMap<string,any>): void;
						public setNegativeMessage(param0: string): void;
						public validate(param0: any, param1: string, param2: com.telerik.widget.dataform.engine.ValidationCompletedListener): void;
						public validateCore(param0: any, param1: string): boolean;
						public setPositiveMessage(param0: string): void;
						public getNegativeMessage(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class PropertyValidatorManual extends com.telerik.widget.dataform.engine.PropertyValidatorBase {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.PropertyValidatorManual>;
						public getPositiveMessage(): string;
						public getValidationProvider(): com.telerik.widget.dataform.engine.PropertyValidatorManual.ValidationProvider;
						public constructor();
						public setValidationProvider(param0: com.telerik.widget.dataform.engine.PropertyValidatorManual.ValidationProvider): void;
						public setNegativeMessage(param0: string): void;
						public validate(param0: any, param1: string, param2: com.telerik.widget.dataform.engine.ValidationCompletedListener): void;
						public validateCore(param0: any, param1: string): boolean;
						public setPositiveMessage(param0: string): void;
						public getNegativeMessage(): string;
					}
					export module PropertyValidatorManual {
						export class ValidationProvider extends java.lang.Object {
							public static class: java.lang.Class<com.telerik.widget.dataform.engine.PropertyValidatorManual.ValidationProvider>;
							/**
							 * Constructs a new instance of the com.telerik.widget.dataform.engine.PropertyValidatorManual$ValidationProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								validate(param0: any, param1: string): boolean;
							});
							public constructor();
							public validate(param0: any, param1: string): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class PropertyValidatorSet extends com.telerik.widget.dataform.engine.PropertyValidatorBase {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.PropertyValidatorSet>;
						public remove(param0: com.telerik.widget.dataform.engine.PropertyValidatorBase): void;
						public getPositiveMessage(): string;
						public constructor();
						public clear(): void;
						public validators(): java.util.ArrayList<com.telerik.widget.dataform.engine.PropertyValidatorBase>;
						public setNegativeMessage(param0: string): void;
						public add(param0: com.telerik.widget.dataform.engine.PropertyValidatorBase): void;
						public validate(param0: any, param1: string, param2: com.telerik.widget.dataform.engine.ValidationCompletedListener): void;
						public validateCore(param0: any, param1: string): boolean;
						public setPositiveMessage(param0: string): void;
						public getNegativeMessage(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class RangeValidator extends com.telerik.widget.dataform.engine.PropertyValidatorBase {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.RangeValidator>;
						public getPositiveMessage(): string;
						public constructor();
						public applyParams(param0: java.util.HashMap<string,any>): void;
						public setMin(param0: number): void;
						public setMax(param0: number): void;
						public getMin(): number;
						public validate(param0: any, param1: string, param2: com.telerik.widget.dataform.engine.ValidationCompletedListener): void;
						public getNegativeMessage(): string;
						public setPositiveMessage(param0: string): void;
						public setNegativeMessage(param0: string): void;
						public constructor(param0: number, param1: number);
						public getMax(): number;
						public validateCore(param0: any, param1: string): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class RegExValidator extends com.telerik.widget.dataform.engine.PropertyValidatorBase {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.RegExValidator>;
						public getPositiveMessage(): string;
						public getRegEx(): string;
						public constructor();
						public applyParams(param0: java.util.HashMap<string,any>): void;
						public setNegativeMessage(param0: string): void;
						public setRegEx(param0: string): void;
						public validate(param0: any, param1: string, param2: com.telerik.widget.dataform.engine.ValidationCompletedListener): void;
						public validateCore(param0: any, param1: string): boolean;
						public setPositiveMessage(param0: string): void;
						public getNegativeMessage(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class StringToDateConverter extends com.telerik.widget.dataform.engine.StringToLongConverter {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.StringToDateConverter>;
						public constructor();
						public convertTo(param0: any): any;
						public convertFrom(param0: any): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export abstract class StringToLongConverter extends java.lang.Object implements com.telerik.widget.dataform.engine.PropertyConverter {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.StringToLongConverter>;
						public constructor();
						public getTemplate(): string;
						public convertTo(param0: any): any;
						public setTemplate(param0: string): void;
						public getLocale(): java.util.Locale;
						public format(): java.text.SimpleDateFormat;
						public setLocale(param0: java.util.Locale): void;
						public convertFrom(param0: any): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class StringToTimeConverter extends com.telerik.widget.dataform.engine.StringToLongConverter {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.StringToTimeConverter>;
						public constructor();
						public convertTo(param0: any): any;
						public convertFrom(param0: any): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class ValidationCompletedListener extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.ValidationCompletedListener>;
						/**
						 * Constructs a new instance of the com.telerik.widget.dataform.engine.ValidationCompletedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
						});
						public constructor();
						public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module engine {
					export class ValidationInfo extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.dataform.engine.ValidationInfo>;
						public message(): string;
						public constructor(param0: boolean, param1: string, param2: string, param3: any);
						public propertyName(): string;
						public editorValue(): any;
						public isValid(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export class DataFormEntityAdapter extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.dataform.visualization.DataFormEntityAdapter>;
						public getEditorsForEntity(param0: com.telerik.widget.dataform.engine.Entity): java.lang.Iterable<com.telerik.widget.dataform.visualization.core.EntityPropertyViewer>;
						public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm);
						public setEditorProvider(param0: com.telerik.android.common.Function<com.telerik.widget.dataform.engine.EntityProperty,com.telerik.widget.dataform.visualization.core.EntityPropertyEditor>): void;
						public setViewerProvider(param0: com.telerik.android.common.Function<com.telerik.widget.dataform.engine.EntityProperty,com.telerik.widget.dataform.visualization.core.EntityPropertyViewer>): void;
						public getEditorRegistry(): com.telerik.widget.dataform.visualization.registries.EditorRegistry;
						public getViewersForEntity(param0: com.telerik.widget.dataform.engine.Entity): java.lang.Iterable<com.telerik.widget.dataform.visualization.core.EntityPropertyViewer>;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export class DataFormGroupLayoutManager extends com.telerik.widget.dataform.visualization.DataFormLayoutManager {
						public static class: java.lang.Class<com.telerik.widget.dataform.visualization.DataFormGroupLayoutManager>;
						public constructor(param0: globalAndroid.content.Context);
						public setSortGroups(param0: com.telerik.android.common.Procedure<java.util.List<com.telerik.widget.dataform.visualization.EditorGroup>>): void;
						public getEditorGroupCustomizations(): com.telerik.android.common.Procedure<com.telerik.widget.dataform.visualization.EditorGroup>;
						public getCreateGroup(): com.telerik.android.common.Function2<globalAndroid.content.Context,string,com.telerik.widget.dataform.visualization.EditorGroup>;
						public createEditorGroup(param0: string): com.telerik.widget.dataform.visualization.EditorGroup;
						public applyEditorGroupCustomizations(): void;
						public groupEditors(param0: java.lang.Iterable<com.telerik.widget.dataform.visualization.core.EntityPropertyViewer>): java.util.List<com.telerik.widget.dataform.visualization.EditorGroup>;
						public editorGroups(): java.util.List<com.telerik.widget.dataform.visualization.EditorGroup>;
						public arrangeEditorsCore(param0: java.lang.Iterable<com.telerik.widget.dataform.visualization.core.EntityPropertyViewer>, param1: globalAndroid.view.ViewGroup): void;
						public setCreateGroup(param0: com.telerik.android.common.Function2<globalAndroid.content.Context,string,com.telerik.widget.dataform.visualization.EditorGroup>): void;
						public constructor(param0: globalAndroid.content.Context, param1: number);
						public getSortGroups(): com.telerik.android.common.Procedure<java.util.List<com.telerik.widget.dataform.visualization.EditorGroup>>;
						public arrangeGroups(param0: java.util.Collection<com.telerik.widget.dataform.visualization.EditorGroup>, param1: globalAndroid.view.ViewGroup): void;
						public setEditorGroupCustomizations(param0: com.telerik.android.common.Procedure<com.telerik.widget.dataform.visualization.EditorGroup>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export abstract class DataFormLayoutManager extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.dataform.visualization.DataFormLayoutManager>;
						public context: globalAndroid.content.Context;
						public unload(): void;
						public updateEditorsFocusOrder(param0: java.lang.Iterable<com.telerik.widget.dataform.visualization.core.EntityPropertyViewer>): void;
						public arrangeEditorsCore(param0: java.lang.Iterable<com.telerik.widget.dataform.visualization.core.EntityPropertyViewer>, param1: globalAndroid.view.ViewGroup): void;
						public constructor(param0: globalAndroid.content.Context, param1: number);
						public arrangeEditors(param0: java.lang.Iterable<com.telerik.widget.dataform.visualization.core.EntityPropertyViewer>): globalAndroid.view.ViewGroup;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export class DataFormLinearLayoutManager extends com.telerik.widget.dataform.visualization.DataFormLayoutManager {
						public static class: java.lang.Class<com.telerik.widget.dataform.visualization.DataFormLinearLayoutManager>;
						public constructor(param0: globalAndroid.content.Context);
						public arrangeEditorsCore(param0: java.lang.Iterable<com.telerik.widget.dataform.visualization.core.EntityPropertyViewer>, param1: globalAndroid.view.ViewGroup): void;
						public constructor(param0: globalAndroid.content.Context, param1: number);
						public setOrientation(param0: number): void;
						public getOrientation(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export class DataFormPlaceholderLayoutManager extends com.telerik.widget.dataform.visualization.DataFormLayoutManager {
						public static class: java.lang.Class<com.telerik.widget.dataform.visualization.DataFormPlaceholderLayoutManager>;
						public arrangeEditorsCore(param0: java.lang.Iterable<com.telerik.widget.dataform.visualization.core.EntityPropertyViewer>, param1: globalAndroid.view.ViewGroup): void;
						public constructor(param0: globalAndroid.content.Context, param1: number);
						public findPlaceHolder(param0: any, param1: globalAndroid.view.ViewGroup): globalAndroid.view.ViewGroup;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export class DataFormPositiveValidationViewBehavior extends com.telerik.widget.dataform.visualization.DataFormValidationViewBehavior {
						public static class: java.lang.Class<com.telerik.widget.dataform.visualization.DataFormPositiveValidationViewBehavior>;
						public validDrawable: globalAndroid.graphics.drawable.Drawable;
						public validBackgroundDrawable: globalAndroid.graphics.drawable.Drawable;
						public validTextColor: number;
						public setValidBackgroundDrawable(param0: number): void;
						public hideNegativeFeedback(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
						public showPositiveFeedback(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
						public constructor(param0: globalAndroid.content.Context);
						public setValidTextColor(param0: number): void;
						public setValidDrawable(param0: number): void;
						public updateViewBackground(param0: globalAndroid.view.View, param1: boolean): void;
						public getValidDrawable(): globalAndroid.graphics.drawable.Drawable;
						public onValidationEvent(param0: com.telerik.widget.dataform.visualization.core.EntityPropertyEditor, param1: com.telerik.widget.dataform.engine.ValidationInfo): void;
						public getValidBackgroundDrawable(): globalAndroid.graphics.drawable.Drawable;
						public hideNegativeFeedback(): void;
						public setValidBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public setValidDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public getValidTextColor(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export class DataFormTableLayoutManager extends com.telerik.widget.dataform.visualization.DataFormLayoutManager {
						public static class: java.lang.Class<com.telerik.widget.dataform.visualization.DataFormTableLayoutManager>;
						public constructor(param0: globalAndroid.content.Context);
						public unload(): void;
						public arrangeEditorsCore(param0: java.lang.Iterable<com.telerik.widget.dataform.visualization.core.EntityPropertyViewer>, param1: globalAndroid.view.ViewGroup): void;
						public constructor(param0: globalAndroid.content.Context, param1: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export class DataFormValidationInfo extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.dataform.visualization.DataFormValidationInfo>;
						public constructor(param0: java.util.List<com.telerik.widget.dataform.engine.ValidationInfo>);
						public failedValidationInfos(): java.util.List<com.telerik.widget.dataform.engine.ValidationInfo>;
						public hasErrors(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export class DataFormValidationViewBehavior extends java.lang.Object implements com.telerik.widget.dataform.visualization.core.EntityPropertyEditor.OnValidationEventListener {
						public static class: java.lang.Class<com.telerik.widget.dataform.visualization.DataFormValidationViewBehavior>;
						public editor: com.telerik.widget.dataform.visualization.core.EntityPropertyEditor;
						public negativeFeedbackVisible: boolean;
						public invalidDrawable: globalAndroid.graphics.drawable.Drawable;
						public invalidBackgroundDrawable: globalAndroid.graphics.drawable.Drawable;
						public invalidTextColor: number;
						public setEditor(param0: com.telerik.widget.dataform.visualization.core.EntityPropertyEditor): void;
						public constructor(param0: globalAndroid.content.Context);
						public findMessageView(param0: com.telerik.widget.dataform.visualization.core.EntityPropertyEditor): globalAndroid.widget.TextView;
						public setInvalidTextColor(param0: number): void;
						public getInvalidBackgroundDrawable(): globalAndroid.graphics.drawable.Drawable;
						public setChangeBackground(param0: boolean): void;
						public updateViewBackground(param0: globalAndroid.view.View, param1: boolean): void;
						public setInvalidDrawable(param0: number): void;
						public setInvalidDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public ensureBackgroundDrawableStateWorkaround(param0: globalAndroid.widget.EditText): void;
						public messageView(): globalAndroid.widget.TextView;
						public getInvalidTextColor(): number;
						public onValidationEvent(param0: com.telerik.widget.dataform.visualization.core.EntityPropertyEditor, param1: com.telerik.widget.dataform.engine.ValidationInfo): void;
						public showNegativeFeedback(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
						public setInvalidBackgroundDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public hideNegativeFeedback(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
						public validationIcon(): globalAndroid.widget.ImageView;
						public setInvalidBackgroundDrawable(param0: number): void;
						public getContext(): globalAndroid.content.Context;
						public getInvalidDrawable(): globalAndroid.graphics.drawable.Drawable;
						public updateUI(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
						public getEditor(): com.telerik.widget.dataform.visualization.core.EntityPropertyEditor;
						public isChangeBackground(): boolean;
						public hideNegativeFeedback(): void;
						public findValidationIcon(param0: com.telerik.widget.dataform.visualization.core.EntityPropertyEditor): globalAndroid.widget.ImageView;
						public reset(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export class EditorGroup extends java.lang.Object {
						public static class: java.lang.Class<com.telerik.widget.dataform.visualization.EditorGroup>;
						public getLayoutManager(): com.telerik.widget.dataform.visualization.DataFormLayoutManager;
						public name(): string;
						public setLayoutManager(param0: com.telerik.widget.dataform.visualization.DataFormLayoutManager): void;
						public rootLayout(): globalAndroid.view.View;
						public getEditorsContainer(): globalAndroid.view.ViewGroup;
						public constructor(param0: globalAndroid.content.Context, param1: string, param2: globalAndroid.view.ViewGroup, param3: globalAndroid.view.ViewGroup);
						public constructor(param0: globalAndroid.content.Context, param1: string);
						public initGroupHeader(param0: globalAndroid.view.View, param1: string): void;
						public static getDefaultLayoutManager(param0: globalAndroid.content.Context): com.telerik.widget.dataform.visualization.DataFormLayoutManager;
						public constructor(param0: globalAndroid.content.Context, param1: string, param2: globalAndroid.view.ViewGroup);
						public getHeaderContainer(): globalAndroid.view.ViewGroup;
						public getHeaderView(): globalAndroid.view.View;
						public arrangeEditors(): void;
						public static setDefaultLayoutManager(param0: com.telerik.widget.dataform.visualization.DataFormLayoutManager): void;
						public editors(): java.util.List<com.telerik.widget.dataform.visualization.core.EntityPropertyViewer>;
						public getView(): globalAndroid.view.View;
						public constructor(param0: globalAndroid.content.Context, param1: string, param2: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export class ExpandableEditorGroup extends com.telerik.widget.dataform.visualization.EditorGroup implements globalAndroid.view.View.OnClickListener {
						public static class: java.lang.Class<com.telerik.widget.dataform.visualization.ExpandableEditorGroup>;
						public constructor(param0: globalAndroid.content.Context, param1: string, param2: globalAndroid.view.ViewGroup, param3: globalAndroid.view.ViewGroup);
						public constructor(param0: globalAndroid.content.Context, param1: string);
						public constructor(param0: globalAndroid.content.Context, param1: string, param2: globalAndroid.view.ViewGroup);
						public constructor(param0: globalAndroid.content.Context, param1: string, param2: boolean);
						public removeIsExpandedChangedListener(param0: com.telerik.widget.dataform.visualization.ExpandableEditorGroup.IsExpandedChangedListener): void;
						public setIsExpanded(param0: boolean): void;
						public setExpandable(param0: boolean): void;
						public expandEditors(): void;
						public expandButton(): globalAndroid.view.View;
						public getIsExpanded(): boolean;
						public isExpandable(): boolean;
						public collapseEditors(): void;
						public constructor(param0: globalAndroid.content.Context, param1: string, param2: number);
						public addIsExpandedChangedListener(param0: com.telerik.widget.dataform.visualization.ExpandableEditorGroup.IsExpandedChangedListener): void;
						public constructor(param0: globalAndroid.content.Context, param1: string, param2: number, param3: boolean);
						public onClick(param0: globalAndroid.view.View): void;
					}
					export module ExpandableEditorGroup {
						export class IsExpandedChangedListener extends java.lang.Object {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.ExpandableEditorGroup.IsExpandedChangedListener>;
							/**
							 * Constructs a new instance of the com.telerik.widget.dataform.visualization.ExpandableEditorGroup$IsExpandedChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onChanged(param0: boolean): void;
							});
							public constructor();
							public onChanged(param0: boolean): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export class RadDataForm extends globalAndroid.widget.ScrollView implements com.telerik.widget.dataform.visualization.core.EntityPropertyEditor.OnValidationEventListener {
						public static class: java.lang.Class<com.telerik.widget.dataform.visualization.RadDataForm>;
						public getLabelPosition(): com.telerik.widget.dataform.engine.LabelPosition;
						public isLayoutRequested(): boolean;
						public setLabelPosition(param0: com.telerik.widget.dataform.engine.LabelPosition): void;
						public constructor(param0: globalAndroid.content.Context);
						public addCommitListener(param0: com.telerik.widget.dataform.engine.EntityPropertyCommitListener): void;
						public getValidationMode(): com.telerik.widget.dataform.visualization.core.ValidationMode;
						public setAdapter(param0: com.telerik.widget.dataform.visualization.DataFormEntityAdapter): void;
						public getEditorCustomizations(): com.telerik.android.common.Procedure<com.telerik.widget.dataform.visualization.core.EntityPropertyViewer>;
						public isCanScroll(): boolean;
						public removeValidationListener(param0: com.telerik.widget.dataform.engine.EntityPropertyValidationListener): void;
						public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
						public getExistingEditorForProperty(param0: string): com.telerik.widget.dataform.visualization.core.EntityPropertyViewer;
						public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public loadEntityValues(): void;
						public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
						public setEditorsHeaderLayout(param0: number): void;
						public recomputeViewAttributes(param0: globalAndroid.view.View): void;
						public requestDisallowInterceptTouchEvent(param0: boolean): void;
						public invalidateChildInParent(param0: native.Array<number>, param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
						public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public notifyEditorSetupStarted(param0: com.telerik.widget.dataform.visualization.core.EntityPropertyViewer): void;
						public getEditorsMainLayout(): number;
						public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public commitChanges(): void;
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public requestLayout(): void;
						public bringChildToFront(param0: globalAndroid.view.View): void;
						public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
						public addView(param0: globalAndroid.view.View, param1: number): void;
						public getLayoutManager(): com.telerik.widget.dataform.visualization.DataFormLayoutManager;
						public resetManualCommit(): void;
						public setLayoutManager(param0: com.telerik.widget.dataform.visualization.DataFormLayoutManager): void;
						public setCanScroll(param0: boolean): void;
						public setEditorsMainLayout(param0: number): void;
						public addValidationFinishedListener(param0: com.telerik.android.common.Procedure<com.telerik.widget.dataform.visualization.DataFormValidationInfo>): void;
						public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
						public getPropertyByName(param0: string): com.telerik.widget.dataform.engine.EntityProperty;
						public requestTransparentRegion(param0: globalAndroid.view.View): void;
						public getEditorsValidationLayout(): number;
						public addView(param0: globalAndroid.view.View): void;
						public onInterceptTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public getCommitMode(): com.telerik.widget.dataform.visualization.core.CommitMode;
						public setCommitMode(param0: com.telerik.widget.dataform.visualization.core.CommitMode): void;
						public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
						public childDrawableStateChanged(param0: globalAndroid.view.View): void;
						public isReloadSuspended(): boolean;
						public requestFitSystemWindows(): void;
						public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
						public getParentForAccessibility(): globalAndroid.view.ViewParent;
						public setEnabled(param0: boolean): void;
						public setMetadata(param0: com.telerik.widget.dataform.engine.DataFormMetadata): void;
						public onSaveInstanceState(): globalAndroid.os.Parcelable;
						public getParent(): globalAndroid.view.ViewParent;
						public getAdapter(): com.telerik.widget.dataform.visualization.DataFormEntityAdapter;
						public sendAccessibilityEvent(param0: number): void;
						public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public addEditorSetupListener(param0: com.telerik.widget.dataform.engine.EditorSetupListener): void;
						public clearChildFocus(param0: globalAndroid.view.View): void;
						public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
						public setEditorsValidationLayout(param0: number): void;
						public onValidationEvent(param0: com.telerik.widget.dataform.visualization.core.EntityPropertyEditor, param1: com.telerik.widget.dataform.engine.ValidationInfo): void;
						public removeEditorDependency(param0: string): void;
						public getEditorsHeaderLayout(): number;
						public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
						public setEntity(param0: com.telerik.widget.dataform.engine.Entity): void;
						public applyEditorCustomizations(): void;
						public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
						public onValidationFinished(param0: com.telerik.widget.dataform.visualization.DataFormValidationInfo): void;
						public validateChanges(param0: com.telerik.android.common.Procedure<com.telerik.widget.dataform.visualization.DataFormValidationInfo>): void;
						public getEditedObject(): any;
						public removeView(param0: globalAndroid.view.View): void;
						public removeEditorSetupListener(param0: com.telerik.widget.dataform.engine.EditorSetupListener): void;
						public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public clearDependencies(): void;
						public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public commitForced(): void;
						public getMetadata(): com.telerik.widget.dataform.engine.DataFormMetadata;
						public reload(): void;
						public removeValidationFinishedListener(param0: com.telerik.android.common.Procedure<com.telerik.widget.dataform.visualization.DataFormValidationInfo>): void;
						public hasValidationErrors(): boolean;
						public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
						public setValidationMode(param0: com.telerik.widget.dataform.visualization.core.ValidationMode): void;
						public setReloadSuspended(param0: boolean): void;
						public notifyEditorSetupFinished(param0: com.telerik.widget.dataform.visualization.core.EntityPropertyViewer): void;
						public validateChanges(): void;
						public addEditorDependency(param0: string, param1: com.telerik.android.common.Procedure2<com.telerik.widget.dataform.visualization.RadDataForm,com.telerik.widget.dataform.visualization.core.EntityPropertyEditor>, param2: native.Array<string>): void;
						public getEntity(): com.telerik.widget.dataform.engine.Entity;
						public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
						public setIsReadOnly(param0: boolean): void;
						public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public getIsReadOnly(): boolean;
						public onFocusChanged(param0: boolean, param1: number, param2: globalAndroid.graphics.Rect): void;
						public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
						public addValidationListener(param0: com.telerik.widget.dataform.engine.EntityPropertyValidationListener): void;
						public setEditorCustomizations(param0: com.telerik.android.common.Procedure<com.telerik.widget.dataform.visualization.core.EntityPropertyViewer>): void;
						public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
						public focusableViewAvailable(param0: globalAndroid.view.View): void;
						public focusSearch(param0: number): globalAndroid.view.View;
						public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
						public removeCommitListener(param0: com.telerik.widget.dataform.engine.EntityPropertyCommitListener): void;
						public arrangeEditors(): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
						public setEntity(param0: any): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export class RadDataFormInstanceState extends globalAndroid.view.View.BaseSavedState {
						public static class: java.lang.Class<com.telerik.widget.dataform.visualization.RadDataFormInstanceState>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.telerik.widget.dataform.visualization.RadDataFormInstanceState>;
						public editorIds: java.util.HashMap<string,java.lang.Integer>;
						public validationMode: com.telerik.widget.dataform.visualization.core.ValidationMode;
						public commitMode: com.telerik.widget.dataform.visualization.core.CommitMode;
						public isReadOnly: boolean;
						public constructor(param0: globalAndroid.os.Parcel);
						public constructor(param0: globalAndroid.os.Parcelable, param1: com.telerik.widget.dataform.visualization.RadDataForm);
						public describeContents(): number;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public constructor(param0: globalAndroid.os.Parcelable);
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export class ValidationAnimationBehavior extends com.telerik.widget.dataform.visualization.DataFormValidationViewBehavior {
						public static class: java.lang.Class<com.telerik.widget.dataform.visualization.ValidationAnimationBehavior>;
						public constructor(param0: globalAndroid.content.Context);
						public showNegativeFeedback(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
						public animateEditor(param0: globalAndroid.view.View): void;
						public onValidationEvent(param0: com.telerik.widget.dataform.visualization.core.EntityPropertyEditor, param1: com.telerik.widget.dataform.engine.ValidationInfo): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module annotations {
						export class DataFormEditorParams extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.annotations.DataFormEditorParams>;
							/**
							 * Constructs a new instance of the com.telerik.widget.dataform.visualization.annotations.DataFormEditorParams interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								min(): number;
								max(): number;
								step(): number;
								annotationType(): java.lang.Class<any>;
								equals(param0: any): boolean;
								hashCode(): number;
								toString(): string;
							});
							public constructor();
							public static DEFAULT_STEP: number;
							public static DEFAULT_MAX: number;
							public static DEFAULT_MIN: number;
							public max(): number;
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public step(): number;
							public toString(): string;
							public min(): number;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module annotations {
						export class DataFormProperty extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.annotations.DataFormProperty>;
							/**
							 * Constructs a new instance of the com.telerik.widget.dataform.visualization.annotations.DataFormProperty interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								editorLayout(): number;
								coreEditorLayout(): number;
								headerLayout(): number;
								validationLayout(): number;
								imageResource(): number;
								viewer(): java.lang.Class<any>;
								editor(): java.lang.Class<any>;
								editorParams(): com.telerik.widget.dataform.visualization.annotations.DataFormEditorParams;
								validator(): java.lang.Class<any>;
								validatorParams(): com.telerik.widget.dataform.visualization.annotations.DataFormValidatorParams;
								validators(): native.Array<com.telerik.widget.dataform.visualization.annotations.DataFormValidator>;
								converter(): java.lang.Class<any>;
								columnSpan(): number;
								index(): number;
								columnIndex(): number;
								group(): string;
								hint(): string;
								required(): boolean;
								label(): string;
								readOnly(): boolean;
								skip(): boolean;
								additionalData(): native.Array<string>;
								annotationType(): java.lang.Class<any>;
								equals(param0: any): boolean;
								hashCode(): number;
								toString(): string;
							});
							public constructor();
							public static NULL: string;
							public index(): number;
							public hashCode(): number;
							public validator(): java.lang.Class<any>;
							public columnIndex(): number;
							public hint(): string;
							public label(): string;
							public editorLayout(): number;
							public toString(): string;
							public converter(): java.lang.Class<any>;
							public skip(): boolean;
							public additionalData(): native.Array<string>;
							public annotationType(): java.lang.Class<any>;
							public validationLayout(): number;
							public viewer(): java.lang.Class<any>;
							public columnSpan(): number;
							public readOnly(): boolean;
							public imageResource(): number;
							public editorParams(): com.telerik.widget.dataform.visualization.annotations.DataFormEditorParams;
							public validators(): native.Array<com.telerik.widget.dataform.visualization.annotations.DataFormValidator>;
							public coreEditorLayout(): number;
							public editor(): java.lang.Class<any>;
							public validatorParams(): com.telerik.widget.dataform.visualization.annotations.DataFormValidatorParams;
							public headerLayout(): number;
							public required(): boolean;
							public equals(param0: any): boolean;
							public group(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module annotations {
						export class DataFormValidator extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.annotations.DataFormValidator>;
							/**
							 * Constructs a new instance of the com.telerik.widget.dataform.visualization.annotations.DataFormValidator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								type(): java.lang.Class<any>;
								params(): com.telerik.widget.dataform.visualization.annotations.DataFormValidatorParams;
								annotationType(): java.lang.Class<any>;
								equals(param0: any): boolean;
								hashCode(): number;
								toString(): string;
							});
							public constructor();
							public type(): java.lang.Class<any>;
							public hashCode(): number;
							public annotationType(): java.lang.Class<any>;
							public toString(): string;
							public params(): com.telerik.widget.dataform.visualization.annotations.DataFormValidatorParams;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module annotations {
						export class DataFormValidatorParams extends java.lang.Object implements java.lang.annotation.Annotation {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.annotations.DataFormValidatorParams>;
							/**
							 * Constructs a new instance of the com.telerik.widget.dataform.visualization.annotations.DataFormValidatorParams interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								min(): number;
								max(): number;
								length(): number;
								regEx(): string;
								minimumLength(): number;
								positiveMessage(): string;
								negativeMessage(): string;
								annotationType(): java.lang.Class<any>;
								equals(param0: any): boolean;
								hashCode(): number;
								toString(): string;
							});
							public constructor();
							public static NULL: string;
							public static DEFAULT_MAX: number;
							public static DEFAULT_MIN: number;
							public static DEFAULT_LENGTH: number;
							public positiveMessage(): string;
							public max(): number;
							public regEx(): string;
							public negativeMessage(): string;
							public hashCode(): number;
							public minimumLength(): number;
							public annotationType(): java.lang.Class<any>;
							public toString(): string;
							public min(): number;
							public equals(param0: any): boolean;
							public length(): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module core {
						export class CommitMode {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.core.CommitMode>;
							public static IMMEDIATE: com.telerik.widget.dataform.visualization.core.CommitMode;
							public static ON_LOST_FOCUS: com.telerik.widget.dataform.visualization.core.CommitMode;
							public static MANUAL: com.telerik.widget.dataform.visualization.core.CommitMode;
							public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
							public static values(): native.Array<com.telerik.widget.dataform.visualization.core.CommitMode>;
							public static valueOf(param0: string): com.telerik.widget.dataform.visualization.core.CommitMode;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module core {
						export abstract class EntityPropertyEditor extends com.telerik.widget.dataform.visualization.core.EntityPropertyViewer implements com.telerik.widget.dataform.engine.ValidationCompletedListener {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.core.EntityPropertyEditor>;
							public updateLayoutWithElements(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: globalAndroid.view.View, param3: globalAndroid.view.View, param4: globalAndroid.view.View, param5: globalAndroid.view.View): void;
							public validationView(): globalAndroid.view.View;
							public value(): any;
							public setEditorValueChangedManually(param0: boolean): void;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public setCommitMode(param0: com.telerik.widget.dataform.visualization.core.CommitMode): void;
							public viewerSetupFinished(): void;
							public getCommitMode(): com.telerik.widget.dataform.visualization.core.CommitMode;
							public notifyChangeListeners(): void;
							public resetValidationLayout(param0: number): void;
							public setValidationViewBehavior(param0: com.telerik.widget.dataform.visualization.DataFormValidationViewBehavior): void;
							public removeValidationListener(param0: com.telerik.widget.dataform.visualization.core.EntityPropertyEditor.OnValidationEventListener): void;
							public loadPropertyValue(): void;
							public validationIcon(): globalAndroid.view.View;
							public addValidationListener(param0: com.telerik.widget.dataform.visualization.core.EntityPropertyEditor.OnValidationEventListener): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
							public validationInfo(): com.telerik.widget.dataform.engine.ValidationInfo;
							public removeEditorChangeListener(param0: com.telerik.widget.dataform.engine.EntityPropertyEditorChangeListener): void;
							public onEditorLostFocus(): void;
							public isValidated(): boolean;
							public getEditorValueChangedManually(): boolean;
							public validate(): void;
							public onEditorValueChanged(param0: any): void;
							public editorSetupFinished(): void;
							public tryApplyValueToProperty(): void;
							public load(): void;
							public getValidationLayoutId(): number;
							public unload(): void;
							public setValidationMode(param0: com.telerik.widget.dataform.visualization.core.ValidationMode): void;
							public canEditorFocus(): boolean;
							public isEditorValueSynced(param0: any): boolean;
							public getValidationMode(): com.telerik.widget.dataform.visualization.core.ValidationMode;
							public addEditorChangeListener(param0: com.telerik.widget.dataform.engine.EntityPropertyEditorChangeListener): void;
							public viewerSetupStarted(): void;
							public setValidationLayoutId(param0: number): void;
							public getValidationViewBehavior(): com.telerik.widget.dataform.visualization.DataFormValidationViewBehavior;
						}
						export module EntityPropertyEditor {
							export class OnValidationEventListener extends java.lang.Object {
								public static class: java.lang.Class<com.telerik.widget.dataform.visualization.core.EntityPropertyEditor.OnValidationEventListener>;
								/**
								 * Constructs a new instance of the com.telerik.widget.dataform.visualization.core.EntityPropertyEditor$OnValidationEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									onValidationEvent(param0: com.telerik.widget.dataform.visualization.core.EntityPropertyEditor, param1: com.telerik.widget.dataform.engine.ValidationInfo): void;
								});
								public constructor();
								public onValidationEvent(param0: com.telerik.widget.dataform.visualization.core.EntityPropertyEditor, param1: com.telerik.widget.dataform.engine.ValidationInfo): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module core {
						export abstract class EntityPropertyViewer extends java.lang.Object {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.core.EntityPropertyViewer>;
							public associatedProperty: com.telerik.widget.dataform.engine.EntityProperty;
							public editorView: globalAndroid.view.View;
							public headerView: globalAndroid.view.View;
							public mainLayout: globalAndroid.view.ViewGroup;
							public editorMainContainer: globalAndroid.view.ViewGroup;
							public editorContainer: globalAndroid.view.ViewGroup;
							public headerContainer: globalAndroid.view.ViewGroup;
							public dataForm: com.telerik.widget.dataform.visualization.RadDataForm;
							public editorLayoutId: number;
							public headerLayoutId: number;
							public headerViewId: number;
							public editorViewId: number;
							public getEditorTextSize(): number;
							public setEditorTextSize(param0: number): void;
							public getEditorColor(): number;
							public setEditorColor(param0: number): void;
							public getEditorTypeface(): globalAndroid.graphics.Typeface;
							public setEditorTypeface(param0: globalAndroid.graphics.Typeface): void;
							public onDataFormEnabledChanged(): void;
							public updateLayoutWithElements(param0: globalAndroid.view.View, param1: globalAndroid.view.View, param2: globalAndroid.view.View, param3: globalAndroid.view.View, param4: globalAndroid.view.View, param5: globalAndroid.view.View): void;
							public initImage(param0: globalAndroid.view.View, param1: com.telerik.widget.dataform.engine.EntityProperty): void;
							public property(): com.telerik.widget.dataform.engine.EntityProperty;
							public setEditorLayout(param0: number): void;
							public viewerSetupFinished(): void;
							public getHeaderView(): globalAndroid.view.View;
							public initHeader(param0: globalAndroid.view.View, param1: com.telerik.widget.dataform.engine.EntityProperty): void;
							public findEditorMainContainer(): globalAndroid.view.ViewGroup;
							public updateEditorLayout(): void;
							public onEntityPropertyChanged(): void;
							public notifyEntityPropertyChanged(): void;
							public loadPropertyValue(): void;
							public setEnabled(param0: boolean): void;
							public setLabelWidth(param0: number): void;
							public init(param0: number): void;
							public setLabelPosition(param0: com.telerik.widget.dataform.engine.LabelPosition): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
							public getLabelPosition(): com.telerik.widget.dataform.engine.LabelPosition;
							public createEditorView(param0: globalAndroid.content.Context): globalAndroid.view.View;
							public updateEnabledState(param0: boolean): void;
							public applyParams(param0: java.util.HashMap<string,any>): void;
							public load(): void;
							public unload(): void;
							public applyEntityValueToEditor(param0: any): void;
							public findMainLayout(): globalAndroid.view.ViewGroup;
							public getLabelWidth(): number;
							public getEditorView(): globalAndroid.view.View;
							public findHeaderContainer(): globalAndroid.view.ViewGroup;
							public isEnabled(): boolean;
							public findEditorContainer(): globalAndroid.view.ViewGroup;
							public initEditor(param0: globalAndroid.view.View, param1: com.telerik.widget.dataform.engine.EntityProperty): void;
							public viewerSetupStarted(): void;
							public createHeaderView(param0: globalAndroid.content.Context): globalAndroid.view.View;
							public findEditorImage(): globalAndroid.widget.ImageView;
							public setHeaderLayout(param0: number): void;
							public rootLayout(): globalAndroid.view.View;
							public getMainLayout(): globalAndroid.view.View;
							public imageView(): globalAndroid.view.View;
						}
						export module EntityPropertyViewer {
							export class HeaderTextWatcher extends java.lang.Object implements globalAndroid.text.TextWatcher {
								public static class: java.lang.Class<com.telerik.widget.dataform.visualization.core.EntityPropertyViewer.HeaderTextWatcher>;
								public beforeTextChanged(param0: string, param1: number, param2: number, param3: number): void;
								public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
								public afterTextChanged(param0: globalAndroid.text.Editable): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module core {
						export class ValidationMode {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.core.ValidationMode>;
							public static IMMEDIATE: com.telerik.widget.dataform.visualization.core.ValidationMode;
							public static ON_LOST_FOCUS: com.telerik.widget.dataform.visualization.core.ValidationMode;
							public static MANUAL: com.telerik.widget.dataform.visualization.core.ValidationMode;
							public static valueOf(param0: java.lang.Class<any>, param1: string): java.lang.Enum<any>;
							public static values(): native.Array<com.telerik.widget.dataform.visualization.core.ValidationMode>;
							public static valueOf(param0: string): com.telerik.widget.dataform.visualization.core.ValidationMode;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export class DataFormAutoCompleteEditor extends com.telerik.widget.dataform.visualization.editors.DataFormTextEditor {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormAutoCompleteEditor>;
							public autoComplete: globalAndroid.widget.AutoCompleteTextView;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public onFocusChange(param0: globalAndroid.view.View, param1: boolean): void;
							public afterTextChanged(param0: globalAndroid.text.Editable): void;
							public initEditor(param0: globalAndroid.view.View, param1: com.telerik.widget.dataform.engine.EntityProperty): void;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
							public getAutoCompleteView(): globalAndroid.widget.AutoCompleteTextView;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
							public beforeTextChanged(param0: string, param1: number, param2: number, param3: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export abstract class DataFormBooleanEditor extends com.telerik.widget.dataform.visualization.core.EntityPropertyEditor implements globalAndroid.widget.CompoundButton.OnCheckedChangeListener {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormBooleanEditor>;
							public initHeader(param0: globalAndroid.view.View, param1: com.telerik.widget.dataform.engine.EntityProperty): void;
							public changeCheckedState(): void;
							public onCheckedChanged(param0: globalAndroid.widget.CompoundButton, param1: boolean): void;
							public value(): any;
							public initEditor(param0: globalAndroid.view.View, param1: com.telerik.widget.dataform.engine.EntityProperty): void;
							public applyEntityValueToEditor(param0: any): void;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export class DataFormCheckBoxEditor extends com.telerik.widget.dataform.visualization.editors.DataFormBooleanEditor {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormCheckBoxEditor>;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public onEntityPropertyChanged(): void;
							public onCheckedChanged(param0: globalAndroid.widget.CompoundButton, param1: boolean): void;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public setLabelPosition(param0: com.telerik.widget.dataform.engine.LabelPosition): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export class DataFormCustomEditor extends com.telerik.widget.dataform.visualization.core.EntityPropertyEditor {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormCustomEditor>;
							public isEditorValueSynced(param0: any): boolean;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public setProvider(param0: com.telerik.widget.dataform.visualization.editors.DataFormCustomEditor.DataFormCustomEditorProvider): void;
							public notifyEditorValueChanged(): void;
							public getProvider(): com.telerik.widget.dataform.visualization.editors.DataFormCustomEditor.DataFormCustomEditorProvider;
							public value(): any;
							public applyEntityValueToEditor(param0: any): void;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
							public createEditorView(param0: globalAndroid.content.Context): globalAndroid.view.View;
							public notifyEditorLostFocus(): void;
						}
						export module DataFormCustomEditor {
							export class DataFormCustomEditorProvider extends java.lang.Object {
								public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormCustomEditor.DataFormCustomEditorProvider>;
								/**
								 * Constructs a new instance of the com.telerik.widget.dataform.visualization.editors.DataFormCustomEditor$DataFormCustomEditorProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									createView(param0: globalAndroid.content.Context): globalAndroid.view.View;
									applyValueToEditor(param0: any, param1: globalAndroid.view.View): void;
									getValue(param0: globalAndroid.view.View): any;
								});
								public constructor();
								public getValue(param0: globalAndroid.view.View): any;
								public createView(param0: globalAndroid.content.Context): globalAndroid.view.View;
								public applyValueToEditor(param0: any, param1: globalAndroid.view.View): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export class DataFormDateEditor extends com.telerik.widget.dataform.visualization.editors.DataFormDateTimeEditor implements globalAndroid.app.DatePickerDialog.OnDateSetListener {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormDateEditor>;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public createDialog(): globalAndroid.app.AlertDialog;
							public onClick(param0: globalAndroid.view.View): void;
							public onDateSet(param0: globalAndroid.widget.DatePicker, param1: number, param2: number, param3: number): void;
							public getDefaultFormat(): java.text.DateFormat;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export abstract class DataFormDateTimeEditor extends com.telerik.widget.dataform.visualization.core.EntityPropertyEditor implements globalAndroid.view.View.OnClickListener {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormDateTimeEditor>;
							public context: globalAndroid.content.Context;
							public getTimeInMillis(): java.lang.Long;
							public createDialog(): globalAndroid.app.AlertDialog;
							public getDialog(): globalAndroid.app.AlertDialog;
							public getDateFormat(): java.text.DateFormat;
							public getDefaultFormat(): java.text.DateFormat;
							public value(): any;
							public getValueToStringConverter(): com.telerik.android.common.Function<any,string>;
							public applyEntityValueToEditor(param0: any): void;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public setTimeInMillis(param0: java.lang.Long): void;
							public setDateFormat(param0: java.text.DateFormat): void;
							public showDialog(): void;
							public onClick(param0: globalAndroid.view.View): void;
							public onPropertyValueChanged(param0: any): void;
							public onEntityPropertyChanged(): void;
							public getCalendar(): java.util.Calendar;
							public initEditor(param0: globalAndroid.view.View, param1: com.telerik.widget.dataform.engine.EntityProperty): void;
							public setValueToStringConverter(param0: com.telerik.android.common.Function<any,string>): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
							public setCalendar(param0: java.util.Calendar): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export class DataFormDecimalEditor extends com.telerik.widget.dataform.visualization.editors.DataFormIntegerEditor implements globalAndroid.text.TextWatcher, globalAndroid.view.View.OnFocusChangeListener {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormDecimalEditor>;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public onFocusChange(param0: globalAndroid.view.View, param1: boolean): void;
							public parseNumber(): java.lang.Number;
							public afterTextChanged(param0: globalAndroid.text.Editable): void;
							public initEditor(param0: globalAndroid.view.View, param1: com.telerik.widget.dataform.engine.EntityProperty): void;
							public applyEntityValueToEditor(param0: any): void;
							public getDefaultValue(): java.lang.Number;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
							public beforeTextChanged(param0: string, param1: number, param2: number, param3: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export class DataFormEmailEditor extends com.telerik.widget.dataform.visualization.editors.DataFormTextEditor {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormEmailEditor>;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public onFocusChange(param0: globalAndroid.view.View, param1: boolean): void;
							public afterTextChanged(param0: globalAndroid.text.Editable): void;
							public initEditor(param0: globalAndroid.view.View, param1: com.telerik.widget.dataform.engine.EntityProperty): void;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
							public beforeTextChanged(param0: string, param1: number, param2: number, param3: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export class DataFormIntegerEditor extends com.telerik.widget.dataform.visualization.core.EntityPropertyEditor implements globalAndroid.text.TextWatcher, globalAndroid.view.View.OnFocusChangeListener {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormIntegerEditor>;
							public coreEditor: globalAndroid.widget.EditText;
							public originalValue: java.lang.Number;
							public setValueFormatter(param0: com.telerik.android.common.Function<java.lang.Number,string>): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public onFocusChange(param0: globalAndroid.view.View, param1: boolean): void;
							public valueCanBeNull(): boolean;
							public value(): any;
							public parseNumber(): java.lang.Number;
							public getValueFormatter(): com.telerik.android.common.Function<java.lang.Number,string>;
							public applyEntityValueToEditor(param0: any): void;
							public getDefaultValue(): java.lang.Number;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public updateEditorText(param0: string): void;
							public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
							public canEditorFocus(): boolean;
							public beforeTextChanged(param0: string, param1: number, param2: number, param3: number): void;
							public onEntityPropertyChanged(): void;
							public afterTextChanged(param0: globalAndroid.text.Editable): void;
							public initEditor(param0: globalAndroid.view.View, param1: com.telerik.widget.dataform.engine.EntityProperty): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export class DataFormLabelEditor extends com.telerik.widget.dataform.visualization.core.EntityPropertyEditor {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormLabelEditor>;
							public isEditorValueSynced(param0: any): boolean;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public value(): any;
							public applyEntityValueToEditor(param0: any): void;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export class DataFormListViewEditor extends com.telerik.widget.dataform.visualization.core.EntityPropertyEditor implements globalAndroid.widget.AdapterView.OnItemSelectedListener, globalAndroid.widget.AdapterView.OnItemClickListener {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormListViewEditor>;
							public listView: globalAndroid.widget.ListView;
							public currentValue: any;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public updateEnabledState(param0: boolean): void;
							public setAdapter(param0: globalAndroid.widget.ListAdapter): void;
							public persistItem(param0: number): void;
							public getItemPosition(param0: any): number;
							public value(): any;
							public forceListViewToStretch(param0: globalAndroid.widget.ListView): void;
							public onNothingSelected(param0: globalAndroid.widget.AdapterView<any>): void;
							public applyEntityValueToEditor(param0: any): void;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public isEditorValueSynced(param0: any): boolean;
							public getAdapter(): globalAndroid.widget.ListAdapter;
							public onItemClick(param0: globalAndroid.widget.AdapterView<any>, param1: globalAndroid.view.View, param2: number, param3: number): void;
							public onEntityPropertyChanged(): void;
							public initEditor(param0: globalAndroid.view.View, param1: com.telerik.widget.dataform.engine.EntityProperty): void;
							public onItemSelected(param0: globalAndroid.widget.AdapterView<any>, param1: globalAndroid.view.View, param2: number, param3: number): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
						}
						export module DataFormListViewEditor {
							export class DataFormListViewEditorAdapter extends globalAndroid.widget.ArrayAdapter<any> {
								public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormListViewEditor.DataFormListViewEditorAdapter>;
								public getFilter(): globalAndroid.widget.Filter;
								public constructor(param0: globalAndroid.content.Context, param1: number, param2: number, param3: java.util.List<any>);
								public constructor(param0: com.telerik.widget.dataform.visualization.editors.DataFormListViewEditor, param1: globalAndroid.content.Context, param2: number, param3: native.Array<any>);
								public constructor(param0: globalAndroid.content.Context, param1: number, param2: number);
								public constructor(param0: globalAndroid.content.Context, param1: number, param2: native.Array<any>);
								public constructor();
								public areAllItemsEnabled(): boolean;
								public getDropDownView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
								public isEnabled(): boolean;
								public constructor(param0: globalAndroid.content.Context, param1: number, param2: java.util.List<any>);
								public constructor(param0: globalAndroid.content.Context, param1: number);
								public constructor(param0: globalAndroid.content.Context, param1: number, param2: number, param3: native.Array<any>);
								public setEnabled(param0: boolean): void;
								public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
								public isEnabled(param0: number): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export class DataFormMultilineTextEditor extends com.telerik.widget.dataform.visualization.editors.DataFormTextEditor {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormMultilineTextEditor>;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public onFocusChange(param0: globalAndroid.view.View, param1: boolean): void;
							public afterTextChanged(param0: globalAndroid.text.Editable): void;
							public initEditor(param0: globalAndroid.view.View, param1: com.telerik.widget.dataform.engine.EntityProperty): void;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
							public beforeTextChanged(param0: string, param1: number, param2: number, param3: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export class DataFormNumberPickerEditor extends com.telerik.widget.dataform.visualization.core.EntityPropertyEditor implements com.telerik.widget.dataform.engine.PropertyChangedListener {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormNumberPickerEditor>;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public value(): any;
							public applyParams(param0: java.util.HashMap<string,any>): void;
							public onPropertyChanged(param0: string, param1: any): void;
							public initEditor(param0: globalAndroid.view.View, param1: com.telerik.widget.dataform.engine.EntityProperty): void;
							public getValueToStringConverter(): com.telerik.android.common.Function<any,string>;
							public applyEntityValueToEditor(param0: any): void;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public setValueToStringConverter(param0: com.telerik.android.common.Function<any,string>): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export class DataFormPasswordEditor extends com.telerik.widget.dataform.visualization.editors.DataFormTextEditor {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormPasswordEditor>;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public onFocusChange(param0: globalAndroid.view.View, param1: boolean): void;
							public afterTextChanged(param0: globalAndroid.text.Editable): void;
							public initEditor(param0: globalAndroid.view.View, param1: com.telerik.widget.dataform.engine.EntityProperty): void;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
							public beforeTextChanged(param0: string, param1: number, param2: number, param3: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export class DataFormPhoneEditor extends com.telerik.widget.dataform.visualization.editors.DataFormTextEditor {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormPhoneEditor>;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public onFocusChange(param0: globalAndroid.view.View, param1: boolean): void;
							public afterTextChanged(param0: globalAndroid.text.Editable): void;
							public initEditor(param0: globalAndroid.view.View, param1: com.telerik.widget.dataform.engine.EntityProperty): void;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
							public beforeTextChanged(param0: string, param1: number, param2: number, param3: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export class DataFormRadAutoCompleteEditor extends com.telerik.widget.dataform.visualization.core.EntityPropertyEditor {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormRadAutoCompleteEditor>;
							public setAdapter(param0: com.telerik.widget.autocomplete.AutoCompleteAdapter): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public updateEnabledState(param0: boolean): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty, param2: com.telerik.widget.autocomplete.AutoCompleteAdapter);
							public value(): any;
							public updateAdapter(): void;
							public setDisplayMode(param0: com.telerik.widget.autocomplete.DisplayMode): void;
							public applyEntityValueToEditor(param0: any): void;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public getAdapter(): com.telerik.widget.autocomplete.AutoCompleteAdapter;
							public isEditorValueSynced(param0: any): boolean;
							public onEntityPropertyChanged(): void;
							public initEditor(param0: globalAndroid.view.View, param1: com.telerik.widget.dataform.engine.EntityProperty): void;
							public setEnabled(param0: boolean): void;
							public getDisplayMode(): com.telerik.widget.autocomplete.DisplayMode;
							public getAutoCompleteView(): com.telerik.widget.autocomplete.RadAutoCompleteTextView;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export class DataFormRadioGroupEditor extends com.telerik.widget.dataform.visualization.core.EntityPropertyEditor implements globalAndroid.widget.RadioGroup.OnCheckedChangeListener {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormRadioGroupEditor>;
							public setCustomizeButtons(param0: com.telerik.android.common.Procedure<globalAndroid.widget.RadioButton>): void;
							public updateEnabledState(param0: boolean): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public findButtonByTag(param0: any): globalAndroid.widget.RadioButton;
							public recreateRadioButtons(): void;
							public createButton(param0: globalAndroid.content.Context): globalAndroid.widget.RadioButton;
							public value(): any;
							public getValueToStringConverter(): com.telerik.android.common.Function<any,string>;
							public applyEntityValueToEditor(param0: any): void;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public isEditorValueSynced(param0: any): boolean;
							public onEntityPropertyChanged(): void;
							public initEditor(param0: globalAndroid.view.View, param1: com.telerik.widget.dataform.engine.EntityProperty): void;
							public onCheckedChanged(param0: globalAndroid.widget.RadioGroup, param1: number): void;
							public applyCustomizeButtons(): void;
							public getCustomizeButtons(): com.telerik.android.common.Procedure<globalAndroid.widget.RadioButton>;
							public setValues(param0: native.Array<any>): void;
							public setValueToStringConverter(param0: com.telerik.android.common.Function<any,string>): void;
							public getValues(): native.Array<any>;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export class DataFormSeekBarEditor extends com.telerik.widget.dataform.visualization.core.EntityPropertyEditor implements globalAndroid.widget.SeekBar.OnSeekBarChangeListener {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormSeekBarEditor>;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public value(): any;
							public applyParams(param0: java.util.HashMap<string,any>): void;
							public onProgressChanged(param0: globalAndroid.widget.SeekBar, param1: number, param2: boolean): void;
							public onStartTrackingTouch(param0: globalAndroid.widget.SeekBar): void;
							public getMax(): number;
							public onStopTrackingTouch(param0: globalAndroid.widget.SeekBar): void;
							public setMax(param0: number): void;
							public applyEntityValueToEditor(param0: any): void;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public setMin(param0: number): void;
							public getMin(): number;
							public getTypedValue(): number;
							public initEditor(param0: globalAndroid.view.View, param1: com.telerik.widget.dataform.engine.EntityProperty): void;
							public setTypedValue(param0: number): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export class DataFormSegmentedEditor extends com.telerik.widget.dataform.visualization.editors.DataFormRadioGroupEditor {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormSegmentedEditor>;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public createButton(param0: globalAndroid.content.Context): globalAndroid.widget.RadioButton;
							public onCheckedChanged(param0: globalAndroid.widget.RadioGroup, param1: number): void;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export class DataFormSpinnerEditor extends com.telerik.widget.dataform.visualization.core.EntityPropertyEditor implements globalAndroid.widget.AdapterView.OnItemSelectedListener {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormSpinnerEditor>;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public value(): any;
							public getSpinnerItemLayoutId(): number;
							public onNothingSelected(param0: globalAndroid.widget.AdapterView<any>): void;
							public setSpinnerItemLayoutId(param0: number): void;
							public applyEntityValueToEditor(param0: any): void;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public canEditorFocus(): boolean;
							public getAdapter(): com.telerik.widget.dataform.visualization.editors.adapters.EditorSpinnerAdapter;
							public isEditorValueSynced(param0: any): boolean;
							public onEntityPropertyChanged(): void;
							public setAdapter(param0: com.telerik.widget.dataform.visualization.editors.adapters.EditorSpinnerAdapter): void;
							public initEditor(param0: globalAndroid.view.View, param1: com.telerik.widget.dataform.engine.EntityProperty): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty, param2: com.telerik.widget.dataform.visualization.editors.adapters.EditorSpinnerAdapter);
							public onItemSelected(param0: globalAndroid.widget.AdapterView<any>, param1: globalAndroid.view.View, param2: number, param3: number): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export class DataFormSwitchEditor extends com.telerik.widget.dataform.visualization.editors.DataFormBooleanEditor {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormSwitchEditor>;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public updateEditorLayout(): void;
							public onCheckedChanged(param0: globalAndroid.widget.CompoundButton, param1: boolean): void;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export class DataFormTextEditor extends com.telerik.widget.dataform.visualization.core.EntityPropertyEditor implements globalAndroid.text.TextWatcher, globalAndroid.view.View.OnFocusChangeListener {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormTextEditor>;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public onFocusChange(param0: globalAndroid.view.View, param1: boolean): void;
							public value(): any;
							public applyEntityValueToEditor(param0: any): void;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public onTextChanged(param0: string, param1: number, param2: number, param3: number): void;
							public canEditorFocus(): boolean;
							public beforeTextChanged(param0: string, param1: number, param2: number, param3: number): void;
							public isEditorValueSynced(param0: any): boolean;
							public onEntityPropertyChanged(): void;
							public afterTextChanged(param0: globalAndroid.text.Editable): void;
							public initEditor(param0: globalAndroid.view.View, param1: com.telerik.widget.dataform.engine.EntityProperty): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export class DataFormTimeEditor extends com.telerik.widget.dataform.visualization.editors.DataFormDateTimeEditor implements globalAndroid.app.TimePickerDialog.OnTimeSetListener {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormTimeEditor>;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public createDialog(): globalAndroid.app.AlertDialog;
							public onClick(param0: globalAndroid.view.View): void;
							public getDefaultFormat(): java.text.DateFormat;
							public onTimeSet(param0: globalAndroid.widget.TimePicker, param1: number, param2: number): void;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export class DataFormToggleButtonEditor extends com.telerik.widget.dataform.visualization.editors.DataFormBooleanEditor {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.DataFormToggleButtonEditor>;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public onCheckedChanged(param0: globalAndroid.widget.CompoundButton, param1: boolean): void;
							public validationCompleted(param0: com.telerik.widget.dataform.engine.ValidationInfo): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.telerik.widget.dataform.engine.EntityProperty);
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module editors {
						export module adapters {
							export class EditorSpinnerAdapter extends globalAndroid.widget.ArrayAdapter<any> {
								public static class: java.lang.Class<com.telerik.widget.dataform.visualization.editors.adapters.EditorSpinnerAdapter>;
								public getFilter(): globalAndroid.widget.Filter;
								public constructor(param0: globalAndroid.content.Context, param1: number, param2: number, param3: java.util.List<any>);
								public constructor(param0: globalAndroid.content.Context, param1: number, param2: number);
								public constructor(param0: globalAndroid.content.Context, param1: number, param2: native.Array<any>);
								public constructor();
								public areAllItemsEnabled(): boolean;
								public getItem(param0: number): any;
								public getDropDownView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
								public constructor(param0: globalAndroid.content.Context, param1: number, param2: java.util.List<any>);
								public setItems(param0: native.Array<any>): void;
								public getPosition(param0: any): number;
								public constructor(param0: globalAndroid.content.Context, param1: number);
								public constructor(param0: globalAndroid.content.Context, param1: number, param2: number, param3: native.Array<any>);
								public getView(param0: number, param1: globalAndroid.view.View, param2: globalAndroid.view.ViewGroup): globalAndroid.view.View;
								public getCount(): number;
								public constructor(param0: globalAndroid.content.Context, param1: native.Array<any>);
								public isEnabled(param0: number): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module metadata {
						export class MetadataProvider extends java.lang.Object {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.metadata.MetadataProvider>;
							public constructor();
							public addMetadataForProperty(param0: com.telerik.widget.dataform.engine.EntityProperty, param1: any): void;
							public resolveMetadataForProperty(param0: com.telerik.widget.dataform.engine.EntityProperty): any;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module registries {
						export class EditorRegistry extends java.lang.Object {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.registries.EditorRegistry>;
							public createDefaultEditor(param0: com.telerik.widget.dataform.engine.EntityProperty): com.telerik.widget.dataform.visualization.core.EntityPropertyEditor;
							public resolveEditorForType(param0: com.telerik.widget.dataform.engine.EntityProperty): com.telerik.widget.dataform.visualization.core.EntityPropertyEditor;
							public addViewerForTypes(param0: java.lang.Class<any>, param1: native.Array<java.lang.Class<any>>): void;
							public addEditorForTypes(param0: java.lang.Class<any>, param1: native.Array<java.lang.Class<any>>): void;
							public addEditorForProperty(param0: java.lang.Class<any>, param1: string): void;
							public createEditorFromMetadata(param0: com.telerik.widget.dataform.engine.EntityProperty): com.telerik.widget.dataform.visualization.core.EntityPropertyEditor;
							public resolveEditorForProperty(param0: com.telerik.widget.dataform.engine.EntityProperty): com.telerik.widget.dataform.visualization.core.EntityPropertyEditor;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm);
							public resolveViewerForType(param0: com.telerik.widget.dataform.engine.EntityProperty): com.telerik.widget.dataform.visualization.core.EntityPropertyViewer;
							public createViewerFromMetadata(param0: com.telerik.widget.dataform.engine.EntityProperty): com.telerik.widget.dataform.visualization.core.EntityPropertyViewer;
							public resolveViewerForProperty(param0: com.telerik.widget.dataform.engine.EntityProperty): com.telerik.widget.dataform.visualization.core.EntityPropertyViewer;
							public addViewForProperty(param0: java.lang.Class<any>, param1: string): void;
							public resetEditorTypeRegistry(): void;
							public createDefaultViewer(param0: com.telerik.widget.dataform.engine.EntityProperty): com.telerik.widget.dataform.visualization.core.EntityPropertyViewer;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module viewers {
						export abstract class DataFormBooleanViewer extends com.telerik.widget.dataform.visualization.core.EntityPropertyViewer {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.viewers.DataFormBooleanViewer>;
							public applyEntityValueToEditor(param0: any): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module viewers {
						export class DataFormCheckBoxViewer extends com.telerik.widget.dataform.visualization.viewers.DataFormBooleanViewer {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.viewers.DataFormCheckBoxViewer>;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module viewers {
						export abstract class DataFormDateTimeViewer extends com.telerik.widget.dataform.visualization.core.EntityPropertyViewer {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.viewers.DataFormDateTimeViewer>;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public setDateFormat(param0: java.text.DateFormat): void;
							public updateText(): void;
							public getDateFormat(): java.text.DateFormat;
							public getDefaultFormat(): java.text.DateFormat;
							public getValueToStringConverter(): com.telerik.android.common.Function<any,string>;
							public applyEntityValueToEditor(param0: any): void;
							public setValueToStringConverter(param0: com.telerik.android.common.Function<any,string>): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module viewers {
						export class DataFormDateViewer extends com.telerik.widget.dataform.visualization.viewers.DataFormDateTimeViewer {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.viewers.DataFormDateViewer>;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public getDefaultFormat(): java.text.DateFormat;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module viewers {
						export class DataFormTextViewer extends com.telerik.widget.dataform.visualization.core.EntityPropertyViewer {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.viewers.DataFormTextViewer>;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public applyEntityValueToEditor(param0: any): void;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module viewers {
						export class DataFormTimeViewer extends com.telerik.widget.dataform.visualization.viewers.DataFormDateTimeViewer {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.viewers.DataFormTimeViewer>;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: com.telerik.widget.dataform.engine.EntityProperty);
							public getDefaultFormat(): java.text.DateFormat;
							public constructor(param0: com.telerik.widget.dataform.visualization.RadDataForm, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.telerik.widget.dataform.engine.EntityProperty);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module dataform {
				export module visualization {
					export module viewers {
						export class DataFormViewerState extends globalAndroid.view.View.BaseSavedState {
							public static class: java.lang.Class<com.telerik.widget.dataform.visualization.viewers.DataFormViewerState>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.telerik.widget.dataform.visualization.viewers.DataFormViewerState>;
							public editorId: number;
							public constructor(param0: globalAndroid.os.Parcelable, param1: com.telerik.widget.dataform.visualization.core.EntityPropertyViewer);
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
							public constructor(param0: globalAndroid.os.Parcel);
							public constructor(param0: globalAndroid.os.Parcelable);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module numberpicker {
				export class NumberPickerInstanceState extends globalAndroid.view.View.BaseSavedState {
					public static class: java.lang.Class<com.telerik.widget.numberpicker.NumberPickerInstanceState>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.telerik.widget.numberpicker.NumberPickerInstanceState>;
					public value: number;
					public constructor(param0: globalAndroid.os.Parcel);
					public constructor(param0: globalAndroid.os.Parcelable, param1: com.telerik.widget.numberpicker.RadNumberPicker);
					public describeContents(): number;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					public constructor(param0: globalAndroid.os.Parcelable);
				}
			}
		}
	}
}

declare module com {
	export module telerik {
		export module widget {
			export module numberpicker {
				export class RadNumberPicker extends globalAndroid.widget.FrameLayout implements globalAndroid.view.View.OnClickListener {
					public static class: java.lang.Class<com.telerik.widget.numberpicker.RadNumberPicker>;
					public invalidateChildInParent(param0: native.Array<number>, param1: globalAndroid.graphics.Rect): globalAndroid.view.ViewParent;
					public focusSearch(param0: number): globalAndroid.view.View;
					public focusableViewAvailable(param0: globalAndroid.view.View): void;
					public createContextMenu(param0: globalAndroid.view.ContextMenu): void;
					public isLayoutRequested(): boolean;
					public labelView(): globalAndroid.widget.TextView;
					public setPluralFormatString(param0: string): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
					public addView(param0: globalAndroid.view.View, param1: number, param2: number): void;
					public onKeyUp(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public decreaseView(): globalAndroid.widget.TextView;
					public addView(param0: globalAndroid.view.View): void;
					public addView(param0: globalAndroid.view.View, param1: number, param2: globalAndroid.view.ViewGroup.LayoutParams): void;
					public focusSearch(param0: globalAndroid.view.View, param1: number): globalAndroid.view.View;
					public getZeroFormatString(): string;
					public recomputeViewAttributes(param0: globalAndroid.view.View): void;
					public clearChildFocus(param0: globalAndroid.view.View): void;
					public setEnabled(param0: boolean): void;
					public setValueToStringConverter(param0: com.telerik.android.common.Function<any,string>): void;
					public getChildVisibleRect(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: globalAndroid.graphics.Point): boolean;
					public bringChildToFront(param0: globalAndroid.view.View): void;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable): void;
					public rootView(): globalAndroid.view.View;
					public onClick(param0: globalAndroid.view.View): void;
					public requestTransparentRegion(param0: globalAndroid.view.View): void;
					public onRestoreInstanceState(param0: globalAndroid.os.Parcelable): void;
					public onKeyLongPress(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public setStep(param0: number): void;
					public childDrawableStateChanged(param0: globalAndroid.view.View): void;
					public onSaveInstanceState(): globalAndroid.os.Parcelable;
					public scheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable, param1: java.lang.Runnable, param2: number): void;
					public requestFitSystemWindows(): void;
					public getSingleFormatString(): string;
					public increaseView(): globalAndroid.widget.TextView;
					public getParent(): globalAndroid.view.ViewParent;
					public startActionModeForChild(param0: globalAndroid.view.View, param1: globalAndroid.view.ActionMode.Callback): globalAndroid.view.ActionMode;
					public addPropertyChangedListener(param0: com.telerik.widget.dataform.engine.PropertyChangedListener): void;
					public updateViewLayout(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
					public requestChildFocus(param0: globalAndroid.view.View, param1: globalAndroid.view.View): void;
					public requestDisallowInterceptTouchEvent(param0: boolean): void;
					public setSingleFormatString(param0: string): void;
					public getValue(): number;
					public addView(param0: globalAndroid.view.View, param1: number): void;
					public unscheduleDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public addView(param0: globalAndroid.view.View, param1: globalAndroid.view.ViewGroup.LayoutParams): void;
					public invalidateChild(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect): void;
					public sendAccessibilityEvent(param0: number): void;
					public requestLayout(): void;
					public requestSendAccessibilityEvent(param0: globalAndroid.view.View, param1: globalAndroid.view.accessibility.AccessibilityEvent): boolean;
					public getParentForAccessibility(): globalAndroid.view.ViewParent;
					public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
					public getMinimum(): number;
					public setMinimum(param0: number): void;
					public removePropertyChangedListener(param0: com.telerik.widget.dataform.engine.PropertyChangedListener): void;
					public setZeroFormatString(param0: string): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
					public showContextMenuForChild(param0: globalAndroid.view.View): boolean;
					public sendAccessibilityEventUnchecked(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
					public getStep(): number;
					public onKeyMultiple(param0: number, param1: number, param2: globalAndroid.view.KeyEvent): boolean;
					public removeView(param0: globalAndroid.view.View): void;
					public setMaximum(param0: number): void;
					public constructor(param0: globalAndroid.content.Context);
					public getPluralFormatString(): string;
					public getValueToStringConverter(): com.telerik.android.common.Function<any,string>;
					public getMaximum(): number;
					public setValue(param0: number): void;
					public invalidateDrawable(param0: globalAndroid.graphics.drawable.Drawable): void;
					public requestChildRectangleOnScreen(param0: globalAndroid.view.View, param1: globalAndroid.graphics.Rect, param2: boolean): boolean;
				}
			}
		}
	}
}

//Generics information: