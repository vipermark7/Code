Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var http_1 = require("../http");
function removeById(id, options) {
    if (options === void 0) { options = {}; }
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var request, response;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    request = new http_1.KinveyHttpRequest({
                        method: http_1.HttpRequestMethod.DELETE,
                        auth: http_1.KinveyHttpAuth.SessionOrMaster,
                        url: http_1.formatKinveyBaasUrl(http_1.KinveyBaasNamespace.Blob, "/" + id),
                        timeout: options.timeout
                    });
                    return [4 /*yield*/, request.execute()];
                case 1:
                    response = _a.sent();
                    return [2 /*return*/, response.data];
            }
        });
    });
}
exports.removeById = removeById;
//# sourceMappingURL=removeById.js.map