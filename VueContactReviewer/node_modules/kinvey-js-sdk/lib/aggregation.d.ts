import { Query } from './query';
export interface AggregationObject {
    query?: Query;
    initial?: any;
    key?: any;
    reduceFn?: string;
}
export declare class Aggregation {
    private _query?;
    initial: any;
    key: any;
    reduceFn: string;
    constructor(aggregation?: Aggregation | AggregationObject);
    query: Query;
    /**
     * Adds the filed to the array of fields.
     *
     * @param {string} field
     * @returns {Aggregation} Aggregation
     */
    by(field: string): this;
    process(docs?: any): any;
    toPlainObject(): {
        key: any;
        initial: any;
        reduce: string;
        reduceFn: string;
        condition: any;
        query: any;
    };
    static average(field?: string): Aggregation;
    static count(field?: string): Aggregation;
    static max(field?: string): Aggregation;
    static min(field?: string): Aggregation;
    static sum(field?: string): Aggregation;
}
