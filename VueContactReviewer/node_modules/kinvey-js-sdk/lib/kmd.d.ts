import { Entity } from './storage';
/**
 * This class provides a way to access the KMD (Kinvey Metadata)
 * information for an entity.
 */
export declare class Kmd {
    private entity;
    constructor(entity: Entity);
    /**
     * Get the auth token.
     *
     * @returns {string} _kmd.authtoken
     */
    readonly authtoken: string;
    /**
     * Get created at time.
     *
     * @returns {Date?} _kmd.ect
     */
    readonly ect: Date;
    /**
     * Get created at time.
     *
     * @returns {Date?} _kmd.ect
     */
    readonly createdAt: Date;
    /**
     * Get last modified time.
     *
     * @returns {Date?} _kmd.lmt
     */
    readonly lmt: Date;
    /**
     * Get last modified time.
     *
     * @returns {Date?} _kmd.lmt
     */
    readonly lastModified: Date;
    /**
     * Get last modified time.
     *
     * @returns {Date?} _kmd.lmt
     */
    readonly updatedAt: Date;
    /**
     * Get the email verification details.
     *
     * @returns {Object} _kmd.emailVerification
     */
    readonly emailVerification: {
        status: string;
    };
    /**
     * Checks if an email for a user has been confirmed.
     *
     * @returns {boolean} True if the email has been confirmed otherwise false
     */
    isEmailConfirmed(): boolean;
    /**
     * Checks if the entity has been created locally.
     *
     * @returns {boolean} True if the entity has been created locally otherwise false
     */
    isLocal(): boolean;
    toPlainObject(): {
        local?: boolean;
        authtoken?: string;
        ect?: string;
        lmt?: string;
        emailVerification?: {
            status: string;
        };
    };
}
