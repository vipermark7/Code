// export default class BaseError extends Error {
//   constructor(message = 'An error occurred.', debug?: string, code?: number, kinveyRequestId?: string, ...args) {
//     // Pass remaining arguments (including vendor specific ones) to parent constructor
//     super(...args);
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
//     // Maintains proper stack trace for where our error was thrown (only available on V8)
//     if (Error.captureStackTrace) {
//       Error.captureStackTrace(this, BaseError);
//     }
//     // Custom debugging information
//     this.name = 'BaseError';
//     this.message = message;
//     this.debug = debug;
//     this.code = code;
//     this.kinveyRequestId = kinveyRequestId;
//   }
// }
var BaseError = /** @class */ (function (_super) {
    tslib_1.__extends(BaseError, _super);
    function BaseError(message) {
        var _newTarget = this.constructor;
        if (message === void 0) { message = 'An error occurred.'; }
        var _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        _this.name = 'BaseError';
        return _this;
    }
    return BaseError;
}(Error));
exports.BaseError = BaseError;
//# sourceMappingURL=base.js.map