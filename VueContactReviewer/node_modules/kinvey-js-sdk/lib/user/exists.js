Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var isString_1 = tslib_1.__importDefault(require("lodash/isString"));
var kinvey_1 = require("../errors/kinvey");
var http_1 = require("../http");
function exists(username, options) {
    if (options === void 0) { options = {}; }
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var request, response;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!username) {
                        throw new kinvey_1.KinveyError('A username was not provided.');
                    }
                    if (!isString_1.default(username)) {
                        throw new kinvey_1.KinveyError('The provided username is not a string.');
                    }
                    request = new http_1.KinveyHttpRequest({
                        method: http_1.HttpRequestMethod.POST,
                        auth: http_1.KinveyHttpAuth.App,
                        url: http_1.formatKinveyBaasUrl(http_1.KinveyBaasNamespace.Rpc, '/check-username-exists'),
                        body: { username: username },
                        timeout: options.timeout
                    });
                    return [4 /*yield*/, request.execute()];
                case 1:
                    response = _a.sent();
                    return [2 /*return*/, response.data.usernameExists === true];
            }
        });
    });
}
exports.exists = exists;
//# sourceMappingURL=exists.js.map